; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30038.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ	; WcharMbcsConvertor::StringBuffer<char>::~StringBuffer<char>
PUBLIC	??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ ; WcharMbcsConvertor::StringBuffer<wchar_t>::~StringBuffer<wchar_t>
PUBLIC	??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ ; `WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance''
PUBLIC	??1Window@@UEAA@XZ				; Window::~Window
PUBLIC	?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z ; Window::init
PUBLIC	?display@Window@@UEBAX_N@Z			; Window::display
PUBLIC	?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z		; Window::reSizeTo
PUBLIC	?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z	; Window::reSizeToWH
PUBLIC	?redraw@Window@@UEBAX_N@Z			; Window::redraw
PUBLIC	?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z	; Window::getClientRect
PUBLIC	?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z	; Window::getWindowRect
PUBLIC	?getWidth@Window@@UEBAHXZ			; Window::getWidth
PUBLIC	?getHeight@Window@@UEBAHXZ			; Window::getHeight
PUBLIC	?isVisible@Window@@UEBA_NXZ			; Window::isVisible
PUBLIC	??_GWindow@@UEAAPEAXI@Z				; Window::`scalar deleting destructor'
PUBLIC	?isCreated@StaticDialog@@UEBA_NXZ		; StaticDialog::isCreated
PUBLIC	??_GStaticDialog@@UEAAPEAXI@Z			; StaticDialog::`scalar deleting destructor'
PUBLIC	??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z		; recordedMacroStep::recordedMacroStep
PUBLIC	??1recordedMacroStep@@QEAA@XZ			; recordedMacroStep::~recordedMacroStep
PUBLIC	?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::deallocate
PUBLIC	?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::allocate
PUBLIC	??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >
PUBLIC	??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
PUBLIC	?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back
PUBLIC	?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy
PUBLIC	?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy
PUBLIC	?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Xlength
PUBLIC	?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z ; std::allocator<HWND__ *>::deallocate
PUBLIC	?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlength
PUBLIC	??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
PUBLIC	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
PUBLIC	??_GsessionFileInfo@@QEAAPEAXI@Z		; sessionFileInfo::`scalar deleting destructor'
PUBLIC	??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
PUBLIC	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
PUBLIC	??1Session@@QEAA@XZ				; Session::~Session
PUBLIC	??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
PUBLIC	?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy
PUBLIC	??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
PUBLIC	?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy
PUBLIC	??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
PUBLIC	?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::_Tidy
PUBLIC	??1DockingManagerData@@QEAA@XZ			; DockingManagerData::~DockingManagerData
PUBLIC	??0DockingManagerData@@QEAA@AEBU0@@Z		; DockingManagerData::DockingManagerData
PUBLIC	??1PrintSettings@@QEAA@XZ			; PrintSettings::~PrintSettings
PUBLIC	??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEB_W@Z ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
PUBLIC	??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
PUBLIC	?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Tidy
PUBLIC	??1MatchedPairConf@@QEAA@XZ			; MatchedPairConf::~MatchedPairConf
PUBLIC	??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
PUBLIC	?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy
PUBLIC	??1NppGUI@@QEAA@XZ				; NppGUI::~NppGUI
PUBLIC	??0NppGUI@@QEAA@AEBU0@@Z			; NppGUI::NppGUI
PUBLIC	?getInstance@NppParameters@@SAAEAV1@XZ		; NppParameters::getInstance
PUBLIC	?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getWingupFullPath
PUBLIC	?getInstance@FileManager@@SAAEAV1@XZ		; FileManager::getInstance
PUBLIC	?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z ; std::allocator<Buffer *>::deallocate
PUBLIC	??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
PUBLIC	?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ ; std::vector<Buffer *,std::allocator<Buffer *> >::_Xlength
PUBLIC	??__Finstance@?1??getInstance@FileManager@@SAAEAV1@XZ@YAXXZ ; `FileManager::getInstance'::`2'::`dynamic atexit destructor for 'instance''
PUBLIC	?execute@ScintillaEditView@@QEBA_JI_K_J@Z	; ScintillaEditView::execute
PUBLIC	?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ ; ScintillaEditView::getCurrentLineNumber
PUBLIC	?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ ; ScintillaEditView::getCurrentColumnNumber
PUBLIC	?clearIndicator@ScintillaEditView@@QEAAXH@Z	; ScintillaEditView::clearIndicator
PUBLIC	?changeIcons@DocTabView@@QEAAXE@Z		; DocTabView::changeIcons
PUBLIC	?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfAllTb
PUBLIC	??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
PUBLIC	?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
PUBLIC	??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
PUBLIC	?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
PUBLIC	??1Process@@QEAA@XZ				; Process::~Process
PUBLIC	?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z ; Notepad_plus::process
PUBLIC	?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z ; Notepad_plus_Window::Notepad_plus_Proc
PUBLIC	?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z ; Notepad_plus_Window::runProc
PUBLIC	??1TaskLstFnStatus@@QEAA@XZ			; TaskLstFnStatus::~TaskLstFnStatus
PUBLIC	??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z	; TaskLstFnStatus::operator=
PUBLIC	?destroy@BabyGridWrapper@@UEAAXXZ		; BabyGridWrapper::destroy
PUBLIC	??_GBabyGridWrapper@@UEAAPEAXI@Z		; BabyGridWrapper::`scalar deleting destructor'
PUBLIC	??0ShortcutMapper@@QEAA@XZ			; ShortcutMapper::ShortcutMapper
PUBLIC	??1ShortcutMapper@@UEAA@XZ			; ShortcutMapper::~ShortcutMapper
PUBLIC	?destroy@ShortcutMapper@@UEAAXXZ		; ShortcutMapper::destroy
PUBLIC	??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
PUBLIC	??_GShortcutMapper@@UEAAPEAXI@Z			; ShortcutMapper::`scalar deleting destructor'
PUBLIC	?CharacterIs@@YAH_WPEB_W@Z			; CharacterIs
PUBLIC	??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >::~_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >
PUBLIC	??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >::~_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >
PUBLIC	??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z ; std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>
PUBLIC	??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >::~_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::~_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >
PUBLIC	??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >::~_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >
PUBLIC	??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >::~_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >
PUBLIC	??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >::~_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >
PUBLIC	??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>
PUBLIC	??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>
PUBLIC	??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >::~_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >
PUBLIC	??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z ; std::_Copy_memmove<HWND__ * *,HWND__ * *>
PUBLIC	??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z ; std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >
PUBLIC	??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z ; std::_Copy_memmove<DockingCont * *,DockingCont * *>
PUBLIC	??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z ; std::_Copy_memmove<tTbData * *,tTbData * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
PUBLIC	??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z ; std::_Copy_unchecked<recordedMacroStep *,recordedMacroStep *>
PUBLIC	??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z ; std::_Copy_memmove<Buffer * *,Buffer * *>
PUBLIC	??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Pop_heap_hole_by_index<TaskLstFnStatus *,TaskLstFnStatus,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>
PUBLIC	??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
PUBLIC	?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_7Window@@6B@					; Window::`vftable'
PUBLIC	??_7StaticDialog@@6B@				; StaticDialog::`vftable'
PUBLIC	?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA ; `NppParameters::getInstancePointer'::`2'::instance
PUBLIC	?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA ; `NppParameters::getInstancePointer'::`2'::$TSS0
PUBLIC	?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
PUBLIC	?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA ; `FileManager::getInstance'::`2'::$TSS0
PUBLIC	??_7BabyGridWrapper@@6B@			; BabyGridWrapper::`vftable'
PUBLIC	??_7ShortcutMapper@@6B@				; ShortcutMapper::`vftable'
PUBLIC	??_C@_0BH@GEANJPBI@Exception?5On?5WM_CREATE@	; `string'
PUBLIC	??_C@_04OLJIFFAL@Find@				; `string'
PUBLIC	??_C@_15MNCACJLI@?$AA?2?$AA?1@			; `string'
PUBLIC	??_C@_1BA@GDFBKANO@?$AA?5?$AA?7?$AA?$FL?$AA?$CI?$AA?$CC?$AA?$DM?$AA?$DO@ ; `string'
PUBLIC	??_C@_1BK@BFONLOAD@?$AA?5?$AA?7?$AA?3?$AA?$CI?$AA?$CJ?$AA?$FL?$AA?$FN?$AA?$DM?$AA?$DO?$AA?$CC?$AA?$AN?$AA?6@ ; `string'
PUBLIC	??_C@_1M@EBNKMNOC@?$AA8?$AA?4?$AA1?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@OLIFPOLL@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AAo?$AAn?$AA?5?$AAC?$AAl?$AAo@ ; `string'
PUBLIC	??_C@_1BLK@LDFJFIML@?$AAI?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAm?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAp?$AAa@ ; `string'
PUBLIC	??_C@_0BF@ONOGFCGL@SettingsOnCloudError@	; `string'
PUBLIC	??_C@_1BI@KEEMGJFF@?$AAE?$AAd?$AAg?$AAe?$AA?5?$AAc?$AAo?$AAl?$AAo?$AAu?$AAr@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Window@@6B@				; Window::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVWindow@@@8				; Window `RTTI Type Descriptor'
PUBLIC	??_R3Window@@8					; Window::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Window@@8					; Window::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Window@@8				; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StaticDialog@@6B@				; StaticDialog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStaticDialog@@@8			; StaticDialog `RTTI Type Descriptor'
PUBLIC	??_R3StaticDialog@@8				; StaticDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StaticDialog@@8				; StaticDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StaticDialog@@8			; StaticDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ShortcutMapper@@6B@			; ShortcutMapper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVShortcutMapper@@@8			; ShortcutMapper `RTTI Type Descriptor'
PUBLIC	??_R3ShortcutMapper@@8				; ShortcutMapper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ShortcutMapper@@8				; ShortcutMapper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ShortcutMapper@@8			; ShortcutMapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BabyGridWrapper@@6B@			; BabyGridWrapper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBabyGridWrapper@@@8			; BabyGridWrapper `RTTI Type Descriptor'
PUBLIC	??_R3BabyGridWrapper@@8				; BabyGridWrapper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BabyGridWrapper@@8				; BabyGridWrapper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BabyGridWrapper@@8		; BabyGridWrapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__xmm@00000000000000070000000000000000
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	__report_rangecheckfailure:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_abort:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	_wtoi:PROC
EXTRN	exit:PROC
EXTRN	wcscpy_s:PROC
EXTRN	wcsicmp:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp_GetModuleFileNameW:PROC
EXTRN	__imp_lstrcmpW:PROC
EXTRN	__imp_lstrcpynW:PROC
EXTRN	__imp_lstrcpyW:PROC
EXTRN	__imp_lstrlenW:PROC
EXTRN	__imp_SetTextColor:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_PostMessageW:PROC
EXTRN	__imp_DefWindowProcW:PROC
EXTRN	__imp_PostQuitMessage:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_MoveWindow:PROC
EXTRN	__imp_SetWindowPos:PROC
EXTRN	__imp_IsWindowVisible:PROC
EXTRN	__imp_GetDlgCtrlID:PROC
EXTRN	__imp_SetFocus:PROC
EXTRN	__imp_LoadMenuW:PROC
EXTRN	__imp_GetMenu:PROC
EXTRN	__imp_SetMenu:PROC
EXTRN	__imp_DrawMenuBar:PROC
EXTRN	__imp_DestroyMenu:PROC
EXTRN	__imp_CheckMenuItem:PROC
EXTRN	__imp_GetSubMenu:PROC
EXTRN	__imp_TrackPopupMenu:PROC
EXTRN	__imp_UpdateWindow:PROC
EXTRN	__imp_SetForegroundWindow:PROC
EXTRN	__imp_InvalidateRect:PROC
EXTRN	__imp_LockWindowUpdate:PROC
EXTRN	__imp_GetClientRect:PROC
EXTRN	__imp_GetWindowRect:PROC
EXTRN	__imp_MessageBoxA:PROC
EXTRN	__imp_GetCursorPos:PROC
EXTRN	__imp_FillRect:PROC
EXTRN	__imp_GetWindowLongPtrW:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_LoadIconW:PROC
EXTRN	__imp_PathFileExistsW:PROC
EXTRN	__imp_PathFindExtensionW:PROC
EXTRN	__imp_PathFindFileNameW:PROC
EXTRN	__imp_PathRemoveExtensionW:PROC
EXTRN	__imp_PathRemoveFileSpecW:PROC
EXTRN	?char2wchar@WcharMbcsConvertor@@QEAAPEB_WPEBDIHPEAH1@Z:PROC ; WcharMbcsConvertor::char2wchar
EXTRN	??_EWindow@@UEAAPEAXI@Z:PROC			; Window::`vector deleting destructor'
EXTRN	?registerDynBtn@ToolBar@@QEAAXIPEAUtoolbarIcons@@PEAUHICON__@@@Z:PROC ; ToolBar::registerDynBtn
EXTRN	?registerDynBtnDM@ToolBar@@QEAAXIPEAUtoolbarIconsWithDarkMode@@@Z:PROC ; ToolBar::registerDynBtnDM
EXTRN	?setIDVisible@ReBar@@QEAAXH_N@Z:PROC		; ReBar::setIDVisible
EXTRN	?getIDVisible@ReBar@@QEAA_NH@Z:PROC		; ReBar::getIDVisible
EXTRN	??1StaticDialog@@UEAA@XZ:PROC			; StaticDialog::~StaticDialog
EXTRN	?create@StaticDialog@@UEAAXH_N0@Z:PROC		; StaticDialog::create
EXTRN	?destroy@StaticDialog@@UEAAXXZ:PROC		; StaticDialog::destroy
EXTRN	??_EStaticDialog@@UEAAPEAXI@Z:PROC		; StaticDialog::`vector deleting destructor'
EXTRN	??1ContextMenu@@QEAA@XZ:PROC			; ContextMenu::~ContextMenu
EXTRN	?create@ContextMenu@@QEAAXPEAUHWND__@@AEBV?$vector@UMenuItemUnit@@V?$allocator@UMenuItemUnit@@@std@@@std@@QEAUHMENU__@@_N@Z:PROC ; ContextMenu::create
EXTRN	?isEnabled@NppDarkMode@@YA_NXZ:PROC		; NppDarkMode::isEnabled
EXTRN	?isDarkMenuEnabled@NppDarkMode@@YA_NXZ:PROC	; NppDarkMode::isDarkMenuEnabled
EXTRN	?isExperimentalEnabled@NppDarkMode@@YA_NXZ:PROC	; NppDarkMode::isExperimentalEnabled
EXTRN	?isScrollbarHackEnabled@NppDarkMode@@YA_NXZ:PROC ; NppDarkMode::isScrollbarHackEnabled
EXTRN	?getTextColor@NppDarkMode@@YAKXZ:PROC		; NppDarkMode::getTextColor
EXTRN	?getBackgroundBrush@NppDarkMode@@YAPEAUHBRUSH__@@XZ:PROC ; NppDarkMode::getBackgroundBrush
EXTRN	?getDarkerBackgroundBrush@NppDarkMode@@YAPEAUHBRUSH__@@XZ:PROC ; NppDarkMode::getDarkerBackgroundBrush
EXTRN	?handleSettingChange@NppDarkMode@@YAXPEAUHWND__@@_J@Z:PROC ; NppDarkMode::handleSettingChange
EXTRN	?runUAHWndProc@NppDarkMode@@YA_NPEAUHWND__@@I_K_JPEA_J@Z:PROC ; NppDarkMode::runUAHWndProc
EXTRN	?drawUAHMenuNCBottomLine@NppDarkMode@@YAXPEAUHWND__@@@Z:PROC ; NppDarkMode::drawUAHMenuNCBottomLine
EXTRN	?enableDarkScrollBarForWindowAndChildren@NppDarkMode@@YAXPEAUHWND__@@@Z:PROC ; NppDarkMode::enableDarkScrollBarForWindowAndChildren
EXTRN	?setDarkTitleBar@NppDarkMode@@YAXPEAUHWND__@@@Z:PROC ; NppDarkMode::setDarkTitleBar
EXTRN	?convertIntToFormatType@@YA?AW4EolType@@HW41@@Z:PROC ; convertIntToFormatType
EXTRN	?writeSession@NppParameters@@QEAAXAEBUSession@@PEB_W@Z:PROC ; NppParameters::writeSession
EXTRN	?loadSession@NppParameters@@QEAA_NAEAUSession@@PEB_W@Z:PROC ; NppParameters::loadSession
EXTRN	?saveConfig_xml@NppParameters@@QEAAXXZ:PROC	; NppParameters::saveConfig_xml
EXTRN	?writeSettingsFilesOnCloudForThe1stTime@NppParameters@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; NppParameters::writeSettingsFilesOnCloudForThe1stTime
EXTRN	?removeCloudChoice@NppParameters@@QEAAXXZ:PROC	; NppParameters::removeCloudChoice
EXTRN	?isCloudPathChanged@NppParameters@@QEBA_NXZ:PROC ; NppParameters::isCloudPathChanged
EXTRN	??0NppParameters@@AEAA@XZ:PROC			; NppParameters::NppParameters
EXTRN	??0Utf8_16_Read@@QEAA@XZ:PROC			; Utf8_16_Read::Utf8_16_Read
EXTRN	??1Utf8_16_Read@@QEAA@XZ:PROC			; Utf8_16_Read::~Utf8_16_Read
EXTRN	?convert@Utf8_16_Read@@QEAA_KPEAD_K@Z:PROC	; Utf8_16_Read::convert
EXTRN	??0Utf8_16_Write@@QEAA@XZ:PROC			; Utf8_16_Write::Utf8_16_Write
EXTRN	??1Utf8_16_Write@@QEAA@XZ:PROC			; Utf8_16_Write::~Utf8_16_Write
EXTRN	?setEncoding@Utf8_16_Write@@QEAAXW4UniMode@@@Z:PROC ; Utf8_16_Write::setEncoding
EXTRN	?convert@Utf8_16_Write@@QEAA_KPEAD_K@Z:PROC	; Utf8_16_Write::convert
EXTRN	?getBufferByIndex@FileManager@@QEAAPEAVBuffer@@_K@Z:PROC ; FileManager::getBufferByIndex
EXTRN	?getBufferFromName@FileManager@@QEAAPEAVBuffer@@PEB_W@Z:PROC ; FileManager::getBufferFromName
EXTRN	?backupCurrentBuffer@FileManager@@QEAA_NXZ:PROC	; FileManager::backupCurrentBuffer
EXTRN	?getFileNameFromBuffer@FileManager@@QEAAHPEAVBuffer@@PEA_W@Z:PROC ; FileManager::getFileNameFromBuffer
EXTRN	??1FileManager@@AEAA@XZ:PROC			; FileManager::~FileManager
EXTRN	?setFileName@Buffer@@QEAAXPEB_WW4LangType@@@Z:PROC ; Buffer::setFileName
EXTRN	?setLangType@Buffer@@QEAAXW4LangType@@PEB_W@Z:PROC ; Buffer::setLangType
EXTRN	?setUnicodeMode@Buffer@@QEAAXW4UniMode@@@Z:PROC	; Buffer::setUnicodeMode
EXTRN	?setDirty@Buffer@@QEAAX_N@Z:PROC		; Buffer::setDirty
EXTRN	?getCurrentLang@Buffer@@QEBAPEAULang@@XZ:PROC	; Buffer::getCurrentLang
EXTRN	?reload@Buffer@@QEAAXXZ:PROC			; Buffer::reload
EXTRN	?doNotify@Buffer@@AEAAXH@Z:PROC			; Buffer::doNotify
EXTRN	?setImageList@TabBar@@QEAAXPEAU_IMAGELIST@@@Z:PROC ; TabBar::setImageList
EXTRN	?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z:PROC ; ScintillaEditView::getGenericSelectedText
EXTRN	?getLine@ScintillaEditView@@QEAAX_KPEA_WH@Z:PROC ; ScintillaEditView::getLine
EXTRN	?addText@ScintillaEditView@@QEAAX_KPEBD@Z:PROC	; ScintillaEditView::addText
EXTRN	?performGlobalStyles@ScintillaEditView@@QEAAXXZ:PROC ; ScintillaEditView::performGlobalStyles
EXTRN	?getIndicatorRange@ScintillaEditView@@QEAA_NHPEAH00@Z:PROC ; ScintillaEditView::getIndicatorRange
EXTRN	?defineDocType@ScintillaEditView@@QEAAXW4LangType@@@Z:PROC ; ScintillaEditView::defineDocType
EXTRN	?setWordChars@ScintillaEditView@@QEAAXXZ:PROC	; ScintillaEditView::setWordChars
EXTRN	?setTabSettings@ScintillaEditView@@QEAAXPEAULang@@@Z:PROC ; ScintillaEditView::setTabSettings
EXTRN	?setBorderEdge@ScintillaEditView@@QEAAX_N@Z:PROC ; ScintillaEditView::setBorderEdge
EXTRN	?getIndexByBuffer@DocTabView@@QEAAHPEAVBuffer@@@Z:PROC ; DocTabView::getIndexByBuffer
EXTRN	?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z:PROC ; DocTabView::getBufferByIndex
EXTRN	?setBuffer@DocTabView@@QEAAX_KPEAVBuffer@@@Z:PROC ; DocTabView::setBuffer
EXTRN	?getHeight@StatusBar@@UEBAHXZ:PROC		; StatusBar::getHeight
EXTRN	?setText@StatusBar@@QEAA_NPEB_WH@Z:PROC		; StatusBar::setText
EXTRN	?adjustParts@StatusBar@@QEAAXH@Z:PROC		; StatusBar::adjustParts
EXTRN	?setFinderStyle@Finder@@QEAAXXZ:PROC		; Finder::setFinderStyle
EXTRN	?doDialog@FindInFinderDlg@@QEAAXPEAVFinder@@_N@Z:PROC ; FindInFinderDlg::doDialog
EXTRN	?doDialog@FindReplaceDlg@@QEAAXW4DIALOG_TYPE@@_N1@Z:PROC ; FindReplaceDlg::doDialog
EXTRN	?setSearchText@FindReplaceDlg@@QEAAXPEA_W@Z:PROC ; FindReplaceDlg::setSearchText
EXTRN	?setProjectCheckmarks@FindReplaceDlg@@QEAAXPEAUFindHistory@@H@Z:PROC ; FindReplaceDlg::setProjectCheckmarks
EXTRN	?createFinder@FindReplaceDlg@@QEAAPEAVFinder@@XZ:PROC ; FindReplaceDlg::createFinder
EXTRN	?switchMode@LastRecentFileList@@QEAAXXZ:PROC	; LastRecentFileList::switchMode
EXTRN	?updateMenu@LastRecentFileList@@QEAAXXZ:PROC	; LastRecentFileList::updateMenu
EXTRN	?setUserMaxNbLRF@LastRecentFileList@@QEAAXH@Z:PROC ; LastRecentFileList::setUserMaxNbLRF
EXTRN	?saveLRFL@LastRecentFileList@@QEAAXXZ:PROC	; LastRecentFileList::saveLRFL
EXTRN	??0trayIconControler@@QEAA@PEAUHWND__@@IIPEAUHICON__@@PEB_W@Z:PROC ; trayIconControler::trayIconControler
EXTRN	?doTrayIcon@trayIconControler@@QEAAHK@Z:PROC	; trayIconControler::doTrayIcon
EXTRN	?getShortcutByCmdID@PluginsManager@@QEAA_NHPEAUShortcutKey@@@Z:PROC ; PluginsManager::getShortcutByCmdID
EXTRN	?removeShortcutByCmdID@PluginsManager@@QEAA_NH@Z:PROC ; PluginsManager::removeShortcutByCmdID
EXTRN	?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z:PROC ; PluginsManager::notify
EXTRN	?relayNppMessages@PluginsManager@@QEAAXI_K_J@Z:PROC ; PluginsManager::relayNppMessages
EXTRN	?relayPluginMessages@PluginsManager@@QEAA_NI_K_J@Z:PROC ; PluginsManager::relayPluginMessages
EXTRN	?allocateCmdID@PluginsManager@@QEAA_NHPEAH@Z:PROC ; PluginsManager::allocateCmdID
EXTRN	?allocateMarker@PluginsManager@@QEAA_NHPEAH@Z:PROC ; PluginsManager::allocateMarker
EXTRN	?initPopupMenu@WindowsMenu@@QEAAXPEAUHMENU__@@PEAVDocTabView@@@Z:PROC ; WindowsMenu::initPopupMenu
EXTRN	?getMacro2Exec@RunMacroDlg@@QEBAHXZ:PROC	; RunMacroDlg::getMacro2Exec
EXTRN	?showFloatingContainers@DockingManager@@QEAAX_N@Z:PROC ; DockingManager::showFloatingContainers
EXTRN	?updateContainerInfo@DockingManager@@QEAAXPEAUHWND__@@@Z:PROC ; DockingManager::updateContainerInfo
EXTRN	?createDockableDlg@DockingManager@@QEAAXUtTbData@@H_N@Z:PROC ; DockingManager::createDockableDlg
EXTRN	?showDockableDlg@DockingManager@@QEAAXPEAUHWND__@@H@Z:PROC ; DockingManager::showDockableDlg
EXTRN	?showDockableDlg@DockingManager@@QEAAXPEA_WH@Z:PROC ; DockingManager::showDockableDlg
EXTRN	?run@Process@@QEBAX_N@Z:PROC			; Process::run
EXTRN	?createSintilla@ScintillaCtrls@@QEAAPEAUHWND__@@PEAU2@@Z:PROC ; ScintillaCtrls::createSintilla
EXTRN	?getScintillaEditViewFrom@ScintillaCtrls@@QEAAPEAVScintillaEditView@@PEAUHWND__@@@Z:PROC ; ScintillaCtrls::getScintillaEditViewFrom
EXTRN	?changeDlgLang@NativeLangSpeaker@@QEAA_NPEAUHWND__@@PEBDPEAD_K@Z:PROC ; NativeLangSpeaker::changeDlgLang
EXTRN	?changeFindReplaceDlgLang@NativeLangSpeaker@@QEAAXAEAVFindReplaceDlg@@@Z:PROC ; NativeLangSpeaker::changeFindReplaceDlgLang
EXTRN	?messageBox@NativeLangSpeaker@@QEAAHPEBDPEAUHWND__@@PEB_W2HH2@Z:PROC ; NativeLangSpeaker::messageBox
EXTRN	?init@Notepad_plus@@QEAA_JPEAUHWND__@@@Z:PROC	; Notepad_plus::init
EXTRN	?killAllChildren@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::killAllChildren
EXTRN	?setTitle@Notepad_plus@@QEAAXXZ:PROC		; Notepad_plus::setTitle
EXTRN	?getTaskListInfo@Notepad_plus@@QEAAXPEAUTaskListInfo@@@Z:PROC ; Notepad_plus::getTaskListInfo
EXTRN	?doOpen@Notepad_plus@@QEAAPEAVBuffer@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N1HPEB_WU_FILETIME@@@Z:PROC ; Notepad_plus::doOpen
EXTRN	?doReload@Notepad_plus@@QEAA_NPEAVBuffer@@_N@Z:PROC ; Notepad_plus::doReload
EXTRN	?doSave@Notepad_plus@@QEAA_NPEAVBuffer@@PEB_W_N@Z:PROC ; Notepad_plus::doSave
EXTRN	?fileClose@Notepad_plus@@QEAA_NPEAVBuffer@@H@Z:PROC ; Notepad_plus::fileClose
EXTRN	?fileCloseAll@Notepad_plus@@QEAA_N_N0@Z:PROC	; Notepad_plus::fileCloseAll
EXTRN	?fileSave@Notepad_plus@@QEAA_NPEAVBuffer@@@Z:PROC ; Notepad_plus::fileSave
EXTRN	?fileSaveAll@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::fileSaveAll
EXTRN	?fileSaveSpecific@Notepad_plus@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; Notepad_plus::fileSaveSpecific
EXTRN	?switchToFile@Notepad_plus@@QEAA_NPEAVBuffer@@@Z:PROC ; Notepad_plus::switchToFile
EXTRN	?saveScintillasZoom@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::saveScintillasZoom
EXTRN	?saveGUIParams@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::saveGUIParams
EXTRN	?saveProjectPanelsParams@Notepad_plus@@QEAA_NXZ:PROC ; Notepad_plus::saveProjectPanelsParams
EXTRN	?saveFileBrowserParam@Notepad_plus@@QEAA_NXZ:PROC ; Notepad_plus::saveFileBrowserParam
EXTRN	?saveUserDefineLangs@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::saveUserDefineLangs
EXTRN	?saveShortcuts@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::saveShortcuts
EXTRN	?saveSession@Notepad_plus@@QEAAXAEBUSession@@@Z:PROC ; Notepad_plus::saveSession
EXTRN	?saveFindHistory@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::saveFindHistory
EXTRN	?getCurrentOpenedFiles@Notepad_plus@@QEAAXAEAUSession@@_N@Z:PROC ; Notepad_plus::getCurrentOpenedFiles
EXTRN	?fileLoadSession@Notepad_plus@@QEAA_NPEB_W@Z:PROC ; Notepad_plus::fileLoadSession
EXTRN	?fileSaveSession@Notepad_plus@@QEAAPEB_W_KPEAPEA_WPEB_W_N@Z:PROC ; Notepad_plus::fileSaveSession
EXTRN	?macroPlayback@Notepad_plus@@QEAAXV?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@Z:PROC ; Notepad_plus::macroPlayback
EXTRN	?findInFinderFiles@Notepad_plus@@QEAA_NPEAUFindersInfo@@@Z:PROC ; Notepad_plus::findInFinderFiles
EXTRN	?findInFiles@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::findInFiles
EXTRN	?findInProjects@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::findInProjects
EXTRN	?replaceInFiles@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::replaceInFiles
EXTRN	?replaceInProjects@Notepad_plus@@QEAA_NXZ:PROC	; Notepad_plus::replaceInProjects
EXTRN	?setFindReplaceFolderFilter@Notepad_plus@@QEAAXPEB_W0@Z:PROC ; Notepad_plus::setFindReplaceFolderFilter
EXTRN	?launchDocumentBackupTask@Notepad_plus@@QEAAXXZ:PROC ; Notepad_plus::launchDocumentBackupTask
EXTRN	?minimizeDialogs@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::minimizeDialogs
EXTRN	?restoreMinimizeDialogs@Notepad_plus@@QEAAXXZ:PROC ; Notepad_plus::restoreMinimizeDialogs
EXTRN	?refreshDarkMode@Notepad_plus@@QEAAXXZ:PROC	; Notepad_plus::refreshDarkMode
EXTRN	?fullScreenToggle@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::fullScreenToggle
EXTRN	?postItToggle@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::postItToggle
EXTRN	?notify@Notepad_plus@@AEAAHPEAUSCNotification@@@Z:PROC ; Notepad_plus::notify
EXTRN	?command@Notepad_plus@@AEAAXH@Z:PROC		; Notepad_plus::command
EXTRN	?dockUserDlg@Notepad_plus@@AEAAXXZ:PROC		; Notepad_plus::dockUserDlg
EXTRN	?undockUserDlg@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::undockUserDlg
EXTRN	?viewVisible@Notepad_plus@@AEAA_NH@Z:PROC	; Notepad_plus::viewVisible
EXTRN	?reloadLang@Notepad_plus@@AEAA_NXZ:PROC		; Notepad_plus::reloadLang
EXTRN	?loadStyles@Notepad_plus@@AEAA_NXZ:PROC		; Notepad_plus::loadStyles
EXTRN	?switchEditViewTo@Notepad_plus@@AEAAHH@Z:PROC	; Notepad_plus::switchEditViewTo
EXTRN	?activateBuffer@Notepad_plus@@AEAA_NPEAVBuffer@@H@Z:PROC ; Notepad_plus::activateBuffer
EXTRN	?checkClipboard@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::checkClipboard
EXTRN	?checkUndoState@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::checkUndoState
EXTRN	?setupColorSampleBitmapsOnMainMenuItems@Notepad_plus@@AEAAXXZ:PROC ; Notepad_plus::setupColorSampleBitmapsOnMainMenuItems
EXTRN	?dropFiles@Notepad_plus@@AEAAXPEAUHDROP__@@@Z:PROC ; Notepad_plus::dropFiles
EXTRN	?checkModifiedDocument@Notepad_plus@@AEAAX_N@Z:PROC ; Notepad_plus::checkModifiedDocument
EXTRN	?getMainClientRect@Notepad_plus@@AEBAXAEAUtagRECT@@@Z:PROC ; Notepad_plus::getMainClientRect
EXTRN	?getLangDesc@Notepad_plus@@AEAA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4LangType@@_N@Z:PROC ; Notepad_plus::getLangDesc
EXTRN	?addHotSpot@Notepad_plus@@AEAAXPEAVScintillaEditView@@@Z:PROC ; Notepad_plus::addHotSpot
EXTRN	?activateNextDoc@Notepad_plus@@AEAAX_N@Z:PROC	; Notepad_plus::activateNextDoc
EXTRN	?activateDoc@Notepad_plus@@AEAAX_K@Z:PROC	; Notepad_plus::activateDoc
EXTRN	?replaceInOpenedFiles@Notepad_plus@@AEAA_NXZ:PROC ; Notepad_plus::replaceInOpenedFiles
EXTRN	?findInOpenedFiles@Notepad_plus@@AEAA_NXZ:PROC	; Notepad_plus::findInOpenedFiles
EXTRN	?findInCurrentFile@Notepad_plus@@AEAA_N_N@Z:PROC ; Notepad_plus::findInCurrentFile
EXTRN	?getIntegralDockingData@Notepad_plus@@AEAA_NAEAUtTbData@@AEAHAEA_N@Z:PROC ; Notepad_plus::getIntegralDockingData
EXTRN	?drawTabbarColoursFromStylerArray@Notepad_plus@@AEAAXXZ:PROC ; Notepad_plus::drawTabbarColoursFromStylerArray
EXTRN	?loadCommandlineParams@Notepad_plus@@AEAA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@PEB_WPEBUCmdLineParamsDTO@@@Z:PROC ; Notepad_plus::loadCommandlineParams
EXTRN	?launchFileSwitcherPanel@Notepad_plus@@AEAAXXZ:PROC ; Notepad_plus::launchFileSwitcherPanel
EXTRN	?launchFunctionList@Notepad_plus@@AEAAXXZ:PROC	; Notepad_plus::launchFunctionList
EXTRN	?monitoringStartOrStopAndUpdateUI@Notepad_plus@@AEAAXPEAVBuffer@@_N@Z:PROC ; Notepad_plus::monitoringStartOrStopAndUpdateUI
EXTRN	?init@BabyGridWrapper@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@F@Z:PROC ; BabyGridWrapper::init
EXTRN	??_EBabyGridWrapper@@UEAAPEAXI@Z:PROC		; BabyGridWrapper::`vector deleting destructor'
EXTRN	?getClientRect@ShortcutMapper@@UEBAXAEAUtagRECT@@@Z:PROC ; ShortcutMapper::getClientRect
EXTRN	?findKeyConflicts@ShortcutMapper@@QEBA_NQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBUKeyCombo@@AEB_K@Z:PROC ; ShortcutMapper::findKeyConflicts
EXTRN	?run_dlgProc@ShortcutMapper@@MEAA_JI_K_J@Z:PROC	; ShortcutMapper::run_dlgProc
EXTRN	??_EShortcutMapper@@UEAAPEAXI@Z:PROC		; ShortcutMapper::`vector deleting destructor'
EXTRN	?reload@VerticalFileSwitcherListView@@QEAAXXZ:PROC ; VerticalFileSwitcherListView::reload
EXTRN	?startColumnSort@VerticalFileSwitcher@@QEAAXXZ:PROC ; VerticalFileSwitcher::startColumnSort
EXTRN	?reloadMap@DocumentMap@@QEAAXXZ:PROC		; DocumentMap::reloadMap
EXTRN	?doMove@DocumentMap@@QEAAXXZ:PROC		; DocumentMap::doMove
EXTRN	?setSyntaxHiliting@DocumentMap@@QEAAXXZ:PROC	; DocumentMap::setSyntaxHiliting
EXTRN	?serialize@FunctionListPanel@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; FunctionListPanel::serialize
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?_hideTabBarStatus@DocTabView@@0_NA:BYTE	; DocTabView::_hideTabBarStatus
EXTRN	?WDN_NOTIFY@@3IB:DWORD				; WDN_NOTIFY
EXTRN	?gNppHWND@Notepad_plus_Window@@2PEAUHWND__@@EA:QWORD ; Notepad_plus_Window::gNppHWND
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A
_BSS	SEGMENT
?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A DB 020H DUP (?) ; `WcharMbcsConvertor::getInstance'::`2'::instance
_BSS	ENDS
;	COMDAT ?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA DD 01H DUP (?) ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA
_BSS	SEGMENT
?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA DQ 01H DUP (?) ; `NppParameters::getInstancePointer'::`2'::instance
_BSS	ENDS
;	COMDAT ?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA DD 01H DUP (?) ; `NppParameters::getInstancePointer'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A
_BSS	SEGMENT
?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A DB 040H DUP (?) ; `FileManager::getInstance'::`2'::instance
_BSS	ENDS
;	COMDAT ?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA DD 01H DUP (?) ; `FileManager::getInstance'::`2'::$TSS0
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+29
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+40
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+34
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN8
	DD	imagerel $LN8+65
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+71
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+57
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+34
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN11
	DD	imagerel $LN11+75
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+71
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN13
	DD	imagerel $LN13+42
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+23
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN20
	DD	imagerel $LN20+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN27
	DD	imagerel $LN27+88
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN52
	DD	imagerel $LN52+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN43
	DD	imagerel $LN43+229
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN30
	DD	imagerel $LN30+94
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN27
	DD	imagerel $LN27+94
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN30
	DD	imagerel $LN30+107
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN25
	DD	imagerel $LN25+159
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD imagerel $LN18
	DD	imagerel $LN18+57
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN18
	DD	imagerel $LN18+63
	DD	imagerel $unwind$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN22
	DD	imagerel $LN22+71
	DD	imagerel $unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN16
	DD	imagerel $LN16+164
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN13
	DD	imagerel $LN13+48
	DD	imagerel $unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD imagerel $LN51
	DD	imagerel $LN51+291
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN27
	DD	imagerel $LN27+97
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+52
	DD	imagerel $unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ DD imagerel $LN10
	DD	imagerel $LN10+109
	DD	imagerel $unwind$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1WcharMbcsConvertor@@IEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+56
	DD	imagerel $unwind$??1WcharMbcsConvertor@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?redraw@Window@@UEBAX_N@Z DD imagerel $LN5
	DD	imagerel $LN5+57
	DD	imagerel $unwind$?redraw@Window@@UEBAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getWidth@Window@@UEBAHXZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$?getWidth@Window@@UEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getHeight@Window@@UEBAHXZ DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$?getHeight@Window@@UEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isVisible@Window@@UEBA_NXZ DD imagerel $LN4
	DD	imagerel $LN4+24
	DD	imagerel $unwind$?isVisible@Window@@UEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GWindow@@UEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+33
	DD	imagerel $unwind$??_GWindow@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GStaticDialog@@UEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+52
	DD	imagerel $unwind$??_GStaticDialog@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z DD imagerel $LN154
	DD	imagerel $LN154+586
	DD	imagerel $unwind$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA DD imagerel ?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
	DD	imagerel ?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA DD imagerel ?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
	DD	imagerel ?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1recordedMacroStep@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+22
	DD	imagerel $unwind$??1recordedMacroStep@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0recordedMacroStep@@QEAA@AEBU0@@Z DD imagerel $LN6
	DD	imagerel $LN6+75
	DD	imagerel $unwind$??0recordedMacroStep@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0recordedMacroStep@@QEAA@$$QEAU0@@Z DD imagerel $LN28
	DD	imagerel $LN28+81
	DD	imagerel $unwind$??0recordedMacroStep@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4recordedMacroStep@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN14
	DD	imagerel $LN14+91
	DD	imagerel $unwind$??4recordedMacroStep@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GrecordedMacroStep@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+61
	DD	imagerel $unwind$??_GrecordedMacroStep@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+65
	DD	imagerel $unwind$?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+107
	DD	imagerel $unwind$?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN93
	DD	imagerel $LN93+216
	DD	imagerel $unwind$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DD imagerel $LN37
	DD	imagerel $LN37+106
	DD	imagerel $unwind$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN10
	DD	imagerel $LN10+41
	DD	imagerel $unwind$??4?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DD imagerel $LN56
	DD	imagerel $LN56+265
	DD	imagerel $unwind$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z DD imagerel $LN25
	DD	imagerel $LN25+66
	DD	imagerel $unwind$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$?_Buy_raw@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z DD imagerel $LN46
	DD	imagerel $LN46+198
	DD	imagerel $unwind$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ DD imagerel $LN46
	DD	imagerel $LN46+161
	DD	imagerel $unwind$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAUHWND__@@@std@@QEAAPEAPEAUHWND__@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@PEAUHWND__@@@std@@QEAAPEAPEAUHWND__@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@@Z DD imagerel $LN15
	DD	imagerel $LN15+70
	DD	imagerel $unwind$?erase@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAPEAPEAUHWND__@@PEAPEAU3@00@Z DD imagerel $LN18
	DD	imagerel $LN18+49
	DD	imagerel $unwind$?_Umove@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAPEAPEAUHWND__@@PEAPEAU3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAXQEAPEAUHWND__@@_K1@Z DD imagerel $LN24
	DD	imagerel $LN24+135
	DD	imagerel $unwind$?_Change_array@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAXQEAPEAUHWND__@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?display@ContextMenu@@QEBAXAEBUtagPOINT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?display@ContextMenu@@QEBAXAEBUtagPOINT@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAUHMENU__@@@std@@QEAAXQEAPEAUHMENU__@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAUHMENU__@@@std@@QEAAXQEAPEAUHMENU__@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ContextMenu@@QEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+30
	DD	imagerel $unwind$??0ContextMenu@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sessionFileInfo@@QEAA@XZ DD imagerel $LN66
	DD	imagerel $LN66+243
	DD	imagerel $unwind$??1sessionFileInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GsessionFileInfo@@QEAAPEAXI@Z DD imagerel $LN70
	DD	imagerel $LN70+278
	DD	imagerel $unwind$??_GsessionFileInfo@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UsessionFileInfo@@@std@@QEAAXQEAUsessionFileInfo@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+65
	DD	imagerel $unwind$?deallocate@?$allocator@UsessionFileInfo@@@std@@QEAAXQEAUsessionFileInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ DD imagerel $LN41
	DD	imagerel $LN41+193
	DD	imagerel $unwind$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXPEAUsessionFileInfo@@0@Z DD imagerel $LN16
	DD	imagerel $LN16+54
	DD	imagerel $unwind$?_Destroy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXPEAUsessionFileInfo@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ DD imagerel $LN38
	DD	imagerel $LN38+193
	DD	imagerel $unwind$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel $LN22
	DD	imagerel $LN22+49
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN43
	DD	imagerel $LN43+142
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Session@@QEAA@XZ DD imagerel $LN37
	DD	imagerel $LN37+84
	DD	imagerel $unwind$??0Session@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Session@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+57
	DD	imagerel $unwind$??1Session@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4CmdLineParamsDTO@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN15
	DD	imagerel $LN15+110
	DD	imagerel $unwind$??4CmdLineParamsDTO@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1PluginDlgDockingInfo@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+18
	DD	imagerel $unwind$??1PluginDlgDockingInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z DD imagerel $LN6
	DD	imagerel $LN6+66
	DD	imagerel $unwind$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+57
	DD	imagerel $unwind$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAXQEAUFloatingWindowInfo@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAXQEAUFloatingWindowInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAPEAUFloatingWindowInfo@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+115
	DD	imagerel $unwind$?allocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAPEAUFloatingWindowInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN65
	DD	imagerel $LN65+276
	DD	imagerel $unwind$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+139
	DD	imagerel $unwind$?_Buy_raw@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+122
	DD	imagerel $unwind$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAXQEAUPluginDlgDockingInfo@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAXQEAUPluginDlgDockingInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAPEAUPluginDlgDockingInfo@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAPEAUPluginDlgDockingInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN121
	DD	imagerel $LN121+336
	DD	imagerel $unwind$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z DD imagerel $LN25
	DD	imagerel $LN25+65
	DD	imagerel $unwind$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+135
	DD	imagerel $unwind$?_Buy_raw@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ DD imagerel $LN46
	DD	imagerel $LN46+191
	DD	imagerel $unwind$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UContainerTabInfo@@@std@@QEAAXQEAUContainerTabInfo@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@UContainerTabInfo@@@std@@QEAAXQEAUContainerTabInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UContainerTabInfo@@@std@@QEAAPEAUContainerTabInfo@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@UContainerTabInfo@@@std@@QEAAPEAUContainerTabInfo@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN63
	DD	imagerel $LN63+238
	DD	imagerel $unwind$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+135
	DD	imagerel $unwind$?_Buy_raw@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1DockingManagerData@@QEAA@XZ DD imagerel $LN38
	DD	imagerel $LN38+123
	DD	imagerel $unwind$??1DockingManagerData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0DockingManagerData@@QEAA@AEBU0@@Z DD imagerel $LN247
	DD	imagerel $LN247+853
	DD	imagerel $unwind$??0DockingManagerData@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getStylerIndexByName@StyleArray@@QEBAHPEB_W@Z DD imagerel $LN14
	DD	imagerel $LN14+108
	DD	imagerel $unwind$?getStylerIndexByName@StyleArray@@QEBAHPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1LangMenuItem@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+22
	DD	imagerel $unwind$??1LangMenuItem@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0LangMenuItem@@QEAA@AEBU0@@Z DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$??0LangMenuItem@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GLangMenuItem@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+61
	DD	imagerel $unwind$??_GLangMenuItem@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1PrintSettings@@QEAA@XZ DD imagerel $LN29
	DD	imagerel $LN29+109
	DD	imagerel $unwind$??1PrintSettings@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0PrintSettings@@QEAA@AEBU0@@Z DD imagerel $LN13
	DD	imagerel $LN13+244
	DD	imagerel $unwind$??0PrintSettings@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@DD@std@@@std@@QEAAXQEAU?$pair@DD@2@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@DD@std@@@std@@QEAAXQEAU?$pair@DD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$pair@DD@std@@@std@@QEAAPEAU?$pair@DD@2@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+107
	DD	imagerel $unwind$?allocate@?$allocator@U?$pair@DD@std@@@std@@QEAAPEAU?$pair@DD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN63
	DD	imagerel $LN63+238
	DD	imagerel $unwind$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+93
	DD	imagerel $unwind$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+131
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+93
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1MatchedPairConf@@QEAA@XZ DD imagerel $LN57
	DD	imagerel $LN57+186
	DD	imagerel $unwind$??1MatchedPairConf@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0MatchedPairConf@@QEAA@AEBV0@@Z DD imagerel $LN7
	DD	imagerel $LN7+97
	DD	imagerel $unwind$??0MatchedPairConf@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@ULangMenuItem@@@std@@QEAAXQEAULangMenuItem@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@ULangMenuItem@@@std@@QEAAXQEAULangMenuItem@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@ULangMenuItem@@@std@@QEAAPEAULangMenuItem@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+115
	DD	imagerel $unwind$?allocate@?$allocator@ULangMenuItem@@@std@@QEAAPEAULangMenuItem@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN121
	DD	imagerel $LN121+319
	DD	imagerel $unwind$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z DD imagerel $LN25
	DD	imagerel $LN25+66
	DD	imagerel $unwind$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+139
	DD	imagerel $unwind$?_Buy_raw@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ DD imagerel $LN46
	DD	imagerel $LN46+192
	DD	imagerel $unwind$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1NppGUI@@QEAA@XZ DD imagerel $LN64
	DD	imagerel $LN64+265
	DD	imagerel $unwind$??1NppGUI@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0NppGUI@@QEAA@AEBU0@@Z DD imagerel $LN153
	DD	imagerel $LN153+1867
	DD	imagerel $unwind$??0NppGUI@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getInstancePointer@NppParameters@@CAPEAV1@XZ DD imagerel $LN13
	DD	imagerel $LN13+135
	DD	imagerel $unwind$?getInstancePointer@NppParameters@@CAPEAV1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA DD imagerel ?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA
	DD	imagerel ?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA+29
	DD	imagerel $unwind$?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getInstance@NppParameters@@SAAEAV1@XZ DD imagerel $LN15
	DD	imagerel $LN15+135
	DD	imagerel $unwind$?getInstance@NppParameters@@SAAEAV1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA DD imagerel ?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA
	DD	imagerel ?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA+29
	DD	imagerel $unwind$?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getInstance@FileManager@@SAAEAV1@XZ DD imagerel $LN19
	DD	imagerel $LN19+151
	DD	imagerel $unwind$?getInstance@FileManager@@SAAEAV1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FileManager@@AEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$??0FileManager@@AEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVBuffer@@@std@@QEAAPEAPEAVBuffer@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@PEAVBuffer@@@std@@QEAAPEAPEAVBuffer@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAPEAPEAVBuffer@@PEAPEAV3@00@Z DD imagerel $LN18
	DD	imagerel $LN18+49
	DD	imagerel $unwind$?_Umove@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAPEAPEAVBuffer@@PEAPEAV3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXQEAPEAVBuffer@@_K1@Z DD imagerel $LN24
	DD	imagerel $LN24+135
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXQEAPEAVBuffer@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA DD imagerel ?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA
	DD	imagerel ?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA+30
	DD	imagerel $unwind$?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getSelectedTextCount@ScintillaEditView@@QEAAHXZ DD imagerel $LN6
	DD	imagerel $LN6+64
	DD	imagerel $unwind$?getSelectedTextCount@ScintillaEditView@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getSelection@ScintillaEditView@@QEBA?AUSci_CharacterRange@@XZ DD imagerel $LN4
	DD	imagerel $LN4+70
	DD	imagerel $unwind$?getSelection@ScintillaEditView@@QEBA?AUSci_CharacterRange@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clearIndicator@ScintillaEditView@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+93
	DD	imagerel $unwind$?clearIndicator@ScintillaEditView@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?updateFinderScintilla@FindReplaceDlg@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?updateFinderScintilla@FindReplaceDlg@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?restoreGlobalOverrideValues@WordStyleDlg@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$?restoreGlobalOverrideValues@WordStyleDlg@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ DD imagerel $LN66
	DD	imagerel $LN66+259
	DD	imagerel $unwind$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA DD imagerel ?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAUtTbData@@@std@@QEAAXQEAPEAUtTbData@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAUtTbData@@@std@@QEAAXQEAPEAUtTbData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAUtTbData@@@std@@QEAAPEAPEAUtTbData@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@PEAUtTbData@@@std@@QEAAPEAPEAUtTbData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN61
	DD	imagerel $LN61+250
	DD	imagerel $unwind$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+135
	DD	imagerel $unwind$?_Buy_raw@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVDockingCont@@@std@@QEAAXQEAPEAVDockingCont@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVDockingCont@@@std@@QEAAXQEAPEAVDockingCont@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVDockingCont@@@std@@QEAAPEAPEAVDockingCont@@_K@Z DD imagerel $LN30
	DD	imagerel $LN30+111
	DD	imagerel $unwind$?allocate@?$allocator@PEAVDockingCont@@@std@@QEAAPEAPEAVDockingCont@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN61
	DD	imagerel $LN61+250
	DD	imagerel $unwind$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAX_K@Z DD imagerel $LN33
	DD	imagerel $LN33+135
	DD	imagerel $unwind$?_Buy_raw@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Process@@QEAA@PEB_W00@Z DD imagerel $LN53
	DD	imagerel $LN53+204
	DD	imagerel $unwind$??0Process@@QEAA@PEB_W00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Process@@QEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+46
	DD	imagerel $unwind$??1Process@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN2727
	DD	imagerel $LN2727+21156
	DD	imagerel $unwind$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA+32
	DD	imagerel $unwind$?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA+41
	DD	imagerel $unwind$?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA+41
	DD	imagerel $unwind$?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA+32
	DD	imagerel $unwind$?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN10
	DD	imagerel $LN10+157
	DD	imagerel $unwind$?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN16
	DD	imagerel $LN16+210
	DD	imagerel $unwind$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA+57
	DD	imagerel $unwind$?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TaskLstFnStatus@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+22
	DD	imagerel $unwind$??1TaskLstFnStatus@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z DD imagerel $LN28
	DD	imagerel $LN28+79
	DD	imagerel $unwind$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z DD imagerel $LN23
	DD	imagerel $LN23+127
	DD	imagerel $unwind$??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBabyGridWrapper@@UEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+33
	DD	imagerel $unwind$??_GBabyGridWrapper@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ShortcutMapper@@QEAA@XZ DD imagerel $LN92
	DD	imagerel $LN92+375
	DD	imagerel $unwind$??0ShortcutMapper@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA+49
	DD	imagerel $unwind$?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ShortcutMapper@@UEAA@XZ DD imagerel $LN119
	DD	imagerel $LN119+524
	DD	imagerel $unwind$??1ShortcutMapper@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA+49
	DD	imagerel $unwind$?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAUHFONT__@@@std@@QEAAXQEAPEAUHFONT__@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$?deallocate@?$allocator@PEAUHFONT__@@@std@@QEAAXQEAPEAUHFONT__@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+91
	DD	imagerel $unwind$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+91
	DD	imagerel $unwind$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GShortcutMapper@@UEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+52
	DD	imagerel $unwind$??_GShortcutMapper@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reload@VerticalFileSwitcher@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$?reload@VerticalFileSwitcher@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RSortTaskListPred@@QEBA_NAEBUTaskLstFnStatus@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$??RSortTaskListPred@@QEBA_NAEBUTaskLstFnStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@std@@USortTaskListPred@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@0@0USortTaskListPred@@@Z DD imagerel $LN6
	DD	imagerel $LN6+56
	DD	imagerel $unwind$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@std@@USortTaskListPred@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@0@0USortTaskListPred@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAPEAVDockingCont@@@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAPEAPEAVDockingCont@@PEAPEAV2@00@Z DD imagerel $LN18
	DD	imagerel $LN18+49
	DD	imagerel $unwind$??$_Ucopy@PEAPEAVDockingCont@@@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAPEAPEAVDockingCont@@PEAPEAV2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAPEAUtTbData@@@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAPEAPEAUtTbData@@PEAPEAU2@00@Z DD imagerel $LN18
	DD	imagerel $LN18+49
	DD	imagerel $unwind$??$_Ucopy@PEAPEAUtTbData@@@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAPEAPEAUtTbData@@PEAPEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DD imagerel $LN120
	DD	imagerel $LN120+415
	DD	imagerel $unwind$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z DD imagerel $LN47
	DD	imagerel $LN47+119
	DD	imagerel $unwind$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z DD imagerel $LN47
	DD	imagerel $LN47+136
	DD	imagerel $unwind$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z DD imagerel $LN9
	DD	imagerel $LN9+48
	DD	imagerel $unwind$??$_Move_unchecked@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DD imagerel $LN120
	DD	imagerel $LN120+415
	DD	imagerel $unwind$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z DD imagerel $LN35
	DD	imagerel $LN35+106
	DD	imagerel $unwind$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z DD imagerel $LN32
	DD	imagerel $LN32+91
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z DD imagerel $LN30
	DD	imagerel $LN30+83
	DD	imagerel $unwind$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DD imagerel $LN99
	DD	imagerel $LN99+477
	DD	imagerel $unwind$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA DD imagerel ?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA
	DD	imagerel ?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA+67
	DD	imagerel $unwind$?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z DD imagerel $LN47
	DD	imagerel $LN47+139
	DD	imagerel $unwind$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN41
	DD	imagerel $LN41+42
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN41+42
	DD	imagerel $LN41+232
	DD	imagerel $chain$1$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN41+232
	DD	imagerel $LN41+238
	DD	imagerel $chain$3$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN41+238
	DD	imagerel $LN41+244
	DD	imagerel $chain$4$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN18
	DD	imagerel $LN18+52
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN24
	DD	imagerel $LN24+88
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+34
	DD	imagerel $unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+65
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BE@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$??$_Get_size_of_n@$0BE@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UsessionFileInfo@@@std@@@std@@YAXPEAUsessionFileInfo@@QEAU1@AEAV?$allocator@UsessionFileInfo@@@0@@Z DD imagerel $LN14
	DD	imagerel $LN14+54
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UsessionFileInfo@@@std@@@std@@YAXPEAUsessionFileInfo@@QEAU1@AEAV?$allocator@UsessionFileInfo@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+37
	DD	imagerel $unwind$??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN94
	DD	imagerel $LN94+630
	DD	imagerel $unwind$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@YAPEAPEAVDockingCont@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVDockingCont@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+52
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@YAPEAPEAVDockingCont@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVDockingCont@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@YAPEAPEAUtTbData@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUtTbData@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+52
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@YAPEAPEAUtTbData@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUtTbData@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+119
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+136
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+139
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z DD imagerel $LN89
	DD	imagerel $LN89+436
	DD	imagerel $unwind$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN17
	DD	imagerel $LN17+58
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z DD imagerel $LN13
	DD	imagerel $LN13+22
	DD	imagerel $unwind$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z DD imagerel $LN13
	DD	imagerel $LN13+21
	DD	imagerel $unwind$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z DD imagerel $LN13
	DD	imagerel $LN13+22
	DD	imagerel $unwind$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@YAPEAPEAVBuffer@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVBuffer@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@YAPEAPEAVBuffer@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVBuffer@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@YAPEAPEAUHWND__@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUHWND__@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@YAPEAPEAUHWND__@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUHWND__@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD imagerel $LN67
	DD	imagerel $LN67+147
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN210
	DD	imagerel $LN210+1075
	DD	imagerel $unwind$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN165
	DD	imagerel $LN165+1080
	DD	imagerel $unwind$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN78
	DD	imagerel $LN78+409
	DD	imagerel $unwind$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN707
	DD	imagerel $LN707+3166
	DD	imagerel $unwind$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ DD imagerel $LN24
	DD	imagerel $LN24+66
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z DD imagerel $LN10
	DD	imagerel $LN10+53
	DD	imagerel $unwind$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ DD imagerel $LN24
	DD	imagerel $LN24+65
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z DD imagerel $LN10
	DD	imagerel $LN10+85
	DD	imagerel $unwind$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ DD imagerel $LN24
	DD	imagerel $LN24+66
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z DD imagerel $LN10
	DD	imagerel $LN10+91
	DD	imagerel $unwind$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD imagerel $LN24
	DD	imagerel $LN24+21
	DD	imagerel $unwind$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD imagerel $LN24+21
	DD	imagerel $LN24+136
	DD	imagerel $chain$1$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD imagerel $LN24+136
	DD	imagerel $LN24+150
	DD	imagerel $chain$2$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DD imagerel $LN32
	DD	imagerel $LN32+91
	DD	imagerel $unwind$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEAUTaskLstFnStatus@@AEAU0@@?$_Ref_fn@USortTaskListPred@@@std@@QEAA?A_TAEAUTaskLstFnStatus@@0@Z DD imagerel $LN6
	DD	imagerel $LN6+103
	DD	imagerel $unwind$??$?RAEAUTaskLstFnStatus@@AEAU0@@?$_Ref_fn@USortTaskListPred@@@std@@QEAA?A_TAEAUTaskLstFnStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD imagerel $LN33
	DD	imagerel $LN33+22
	DD	imagerel $unwind$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD imagerel $LN33+22
	DD	imagerel $LN33+173
	DD	imagerel $chain$3$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD imagerel $LN33+173
	DD	imagerel $LN33+183
	DD	imagerel $chain$4$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN72
	DD	imagerel $LN72+587
	DD	imagerel $unwind$??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN67
	DD	imagerel $LN67+347
	DD	imagerel $unwind$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+65
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN6+65
	DD	imagerel $LN6+210
	DD	imagerel $chain$3$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN6+210
	DD	imagerel $LN6+227
	DD	imagerel $chain$4$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z DD imagerel $LN88
	DD	imagerel $LN88+329
	DD	imagerel $unwind$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z DD imagerel $LN8
	DD	imagerel $LN8+43
	DD	imagerel $unwind$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z DD imagerel $LN8
	DD	imagerel $LN8+69
	DD	imagerel $unwind$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z DD imagerel $LN8
	DD	imagerel $LN8+73
	DD	imagerel $unwind$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN37
	DD	imagerel $LN37+45
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN37+45
	DD	imagerel $LN37+265
	DD	imagerel $chain$2$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN37+265
	DD	imagerel $LN37+292
	DD	imagerel $chain$3$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_hole_unchecked@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN4
	DD	imagerel $LN4+93
	DD	imagerel $unwind$??$_Pop_heap_hole_unchecked@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD imagerel $LN19
	DD	imagerel $LN19+283
	DD	imagerel $unwind$??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z DD imagerel $LN85
	DD	imagerel $LN85+329
	DD	imagerel $unwind$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z
pdata	ENDS
;	COMDAT __xmm@00000000000000070000000000000000
CONST	SEGMENT
__xmm@00000000000000070000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 07H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@BabyGridWrapper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BabyGridWrapper@@8 DD imagerel ??_R0?AVBabyGridWrapper@@@8 ; BabyGridWrapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BabyGridWrapper@@8
rdata$r	ENDS
;	COMDAT ??_R2BabyGridWrapper@@8
rdata$r	SEGMENT
??_R2BabyGridWrapper@@8 DD imagerel ??_R1A@?0A@EA@BabyGridWrapper@@8 ; BabyGridWrapper::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Window@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BabyGridWrapper@@8
rdata$r	SEGMENT
??_R3BabyGridWrapper@@8 DD 00H				; BabyGridWrapper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2BabyGridWrapper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBabyGridWrapper@@@8
data$rs	SEGMENT
??_R0?AVBabyGridWrapper@@@8 DQ FLAT:??_7type_info@@6B@	; BabyGridWrapper `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBabyGridWrapper@@', 00H
data$rs	ENDS
;	COMDAT ??_R4BabyGridWrapper@@6B@
rdata$r	SEGMENT
??_R4BabyGridWrapper@@6B@ DD 01H			; BabyGridWrapper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBabyGridWrapper@@@8
	DD	imagerel ??_R3BabyGridWrapper@@8
	DD	imagerel ??_R4BabyGridWrapper@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ShortcutMapper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ShortcutMapper@@8 DD imagerel ??_R0?AVShortcutMapper@@@8 ; ShortcutMapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ShortcutMapper@@8
rdata$r	ENDS
;	COMDAT ??_R2ShortcutMapper@@8
rdata$r	SEGMENT
??_R2ShortcutMapper@@8 DD imagerel ??_R1A@?0A@EA@ShortcutMapper@@8 ; ShortcutMapper::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@StaticDialog@@8
	DD	imagerel ??_R1A@?0A@EA@Window@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ShortcutMapper@@8
rdata$r	SEGMENT
??_R3ShortcutMapper@@8 DD 00H				; ShortcutMapper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ShortcutMapper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVShortcutMapper@@@8
data$rs	SEGMENT
??_R0?AVShortcutMapper@@@8 DQ FLAT:??_7type_info@@6B@	; ShortcutMapper `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVShortcutMapper@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ShortcutMapper@@6B@
rdata$r	SEGMENT
??_R4ShortcutMapper@@6B@ DD 01H				; ShortcutMapper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVShortcutMapper@@@8
	DD	imagerel ??_R3ShortcutMapper@@8
	DD	imagerel ??_R4ShortcutMapper@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StaticDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StaticDialog@@8 DD imagerel ??_R0?AVStaticDialog@@@8 ; StaticDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StaticDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2StaticDialog@@8
rdata$r	SEGMENT
??_R2StaticDialog@@8 DD imagerel ??_R1A@?0A@EA@StaticDialog@@8 ; StaticDialog::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Window@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3StaticDialog@@8
rdata$r	SEGMENT
??_R3StaticDialog@@8 DD 00H				; StaticDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2StaticDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStaticDialog@@@8
data$rs	SEGMENT
??_R0?AVStaticDialog@@@8 DQ FLAT:??_7type_info@@6B@	; StaticDialog `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStaticDialog@@', 00H
data$rs	ENDS
;	COMDAT ??_R4StaticDialog@@6B@
rdata$r	SEGMENT
??_R4StaticDialog@@6B@ DD 01H				; StaticDialog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStaticDialog@@@8
	DD	imagerel ??_R3StaticDialog@@8
	DD	imagerel ??_R4StaticDialog@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Window@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Window@@8 DD imagerel ??_R0?AVWindow@@@8	; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R2Window@@8
rdata$r	SEGMENT
??_R2Window@@8 DD imagerel ??_R1A@?0A@EA@Window@@8	; Window::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Window@@8
rdata$r	SEGMENT
??_R3Window@@8 DD 00H					; Window::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Window@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWindow@@@8
data$rs	SEGMENT
??_R0?AVWindow@@@8 DQ FLAT:??_7type_info@@6B@		; Window `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVWindow@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Window@@6B@
rdata$r	SEGMENT
??_R4Window@@6B@ DD 01H					; Window::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVWindow@@@8
	DD	imagerel ??_R3Window@@8
	DD	imagerel ??_R4Window@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KEEMGJFF@?$AAE?$AAd?$AAg?$AAe?$AA?5?$AAc?$AAo?$AAl?$AAo?$AAu?$AAr@
CONST	SEGMENT
??_C@_1BI@KEEMGJFF@?$AAE?$AAd?$AAg?$AAe?$AA?5?$AAc?$AAo?$AAl?$AAo?$AAu?$AAr@ DB 'E'
	DB	00H, 'd', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'l', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ONOGFCGL@SettingsOnCloudError@
CONST	SEGMENT
??_C@_0BF@ONOGFCGL@SettingsOnCloudError@ DB 'SettingsOnCloudError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BLK@LDFJFIML@?$AAI?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAm?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAp?$AAa@
CONST	SEGMENT
??_C@_1BLK@LDFJFIML@?$AAI?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAm?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAp?$AAa@ DB 'I'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'm', 00H
	DB	's', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 't', 00H, 'h', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 's', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, 'l', 00H
	DB	'y', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, ',', 00H, 0dH, 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'l'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'e', 00H
	DB	'e', 00H, 'd', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'r'
	DB	00H, 'i', 00H, 'v', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'g', 00H
	DB	'e', 00H, ' ', 00H, 'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'w', 00H
	DB	'r', 00H, 'i', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'a', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, '.', 00H, 0dH, 00H, 'Y', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, ' ', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 's', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'c', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, '.', 00H, ' ', 00H, 'P', 00H, 'l'
	DB	00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'a', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u'
	DB	00H, 'e', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 'a', 00H, ' ', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'd', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@OLIFPOLL@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AAo?$AAn?$AA?5?$AAC?$AAl?$AAo@
CONST	SEGMENT
??_C@_1CE@OLIFPOLL@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AAo?$AAn?$AA?5?$AAC?$AAl?$AAo@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	's', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'l'
	DB	00H, 'o', 00H, 'u', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EBNKMNOC@?$AA8?$AA?4?$AA1?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1M@EBNKMNOC@?$AA8?$AA?4?$AA1?$AA1?$AA?$AA@ DB '8', 00H, '.', 00H, '1'
	DB	00H, '1', 00H, 00H, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BFONLOAD@?$AA?5?$AA?7?$AA?3?$AA?$CI?$AA?$CJ?$AA?$FL?$AA?$FN?$AA?$DM?$AA?$DO?$AA?$CC?$AA?$AN?$AA?6@
CONST	SEGMENT
??_C@_1BK@BFONLOAD@?$AA?5?$AA?7?$AA?3?$AA?$CI?$AA?$CJ?$AA?$FL?$AA?$FN?$AA?$DM?$AA?$DO?$AA?$CC?$AA?$AN?$AA?6@ DB ' '
	DB	00H, 09H, 00H, ':', 00H, '(', 00H, ')', 00H, '[', 00H, ']', 00H
	DB	'<', 00H, '>', 00H, '"', 00H, 0dH, 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@GDFBKANO@?$AA?5?$AA?7?$AA?$FL?$AA?$CI?$AA?$CC?$AA?$DM?$AA?$DO@
CONST	SEGMENT
??_C@_1BA@GDFBKANO@?$AA?5?$AA?7?$AA?$FL?$AA?$CI?$AA?$CC?$AA?$DM?$AA?$DO@ DB ' '
	DB	00H, 09H, 00H, '[', 00H, '(', 00H, '"', 00H, '<', 00H, '>', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_15MNCACJLI@?$AA?2?$AA?1@
CONST	SEGMENT
??_C@_15MNCACJLI@?$AA?2?$AA?1@ DB '\', 00H, '/', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OLJIFFAL@Find@
CONST	SEGMENT
??_C@_04OLJIFFAL@Find@ DB 'Find', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GEANJPBI@Exception?5On?5WM_CREATE@
CONST	SEGMENT
??_C@_0BH@GEANJPBI@Exception?5On?5WM_CREATE@ DB 'Exception On WM_CREATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ShortcutMapper@@6B@
CONST	SEGMENT
??_7ShortcutMapper@@6B@ DQ FLAT:??_R4ShortcutMapper@@6B@ ; ShortcutMapper::`vftable'
	DQ	FLAT:??_EShortcutMapper@@UEAAPEAXI@Z
	DQ	FLAT:?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z
	DQ	FLAT:?destroy@ShortcutMapper@@UEAAXXZ
	DQ	FLAT:?display@Window@@UEBAX_N@Z
	DQ	FLAT:?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?redraw@Window@@UEBAX_N@Z
	DQ	FLAT:?getClientRect@ShortcutMapper@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWidth@Window@@UEBAHXZ
	DQ	FLAT:?getHeight@Window@@UEBAHXZ
	DQ	FLAT:?isVisible@Window@@UEBA_NXZ
	DQ	FLAT:?create@StaticDialog@@UEAAXH_N0@Z
	DQ	FLAT:?isCreated@StaticDialog@@UEBA_NXZ
	DQ	FLAT:?run_dlgProc@ShortcutMapper@@MEAA_JI_K_J@Z
CONST	ENDS
;	COMDAT ??_7BabyGridWrapper@@6B@
CONST	SEGMENT
??_7BabyGridWrapper@@6B@ DQ FLAT:??_R4BabyGridWrapper@@6B@ ; BabyGridWrapper::`vftable'
	DQ	FLAT:??_EBabyGridWrapper@@UEAAPEAXI@Z
	DQ	FLAT:?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z
	DQ	FLAT:?destroy@BabyGridWrapper@@UEAAXXZ
	DQ	FLAT:?display@Window@@UEBAX_N@Z
	DQ	FLAT:?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?redraw@Window@@UEBAX_N@Z
	DQ	FLAT:?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWidth@Window@@UEBAHXZ
	DQ	FLAT:?getHeight@Window@@UEBAHXZ
	DQ	FLAT:?isVisible@Window@@UEBA_NXZ
	DQ	FLAT:?init@BabyGridWrapper@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@F@Z
CONST	ENDS
;	COMDAT ??_7StaticDialog@@6B@
CONST	SEGMENT
??_7StaticDialog@@6B@ DQ FLAT:??_R4StaticDialog@@6B@	; StaticDialog::`vftable'
	DQ	FLAT:??_EStaticDialog@@UEAAPEAXI@Z
	DQ	FLAT:?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z
	DQ	FLAT:?destroy@StaticDialog@@UEAAXXZ
	DQ	FLAT:?display@Window@@UEBAX_N@Z
	DQ	FLAT:?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?redraw@Window@@UEBAX_N@Z
	DQ	FLAT:?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWidth@Window@@UEBAHXZ
	DQ	FLAT:?getHeight@Window@@UEBAHXZ
	DQ	FLAT:?isVisible@Window@@UEBA_NXZ
	DQ	FLAT:?create@StaticDialog@@UEAAXH_N0@Z
	DQ	FLAT:?isCreated@StaticDialog@@UEBA_NXZ
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7Window@@6B@
CONST	SEGMENT
??_7Window@@6B@ DQ FLAT:??_R4Window@@6B@		; Window::`vftable'
	DQ	FLAT:??_EWindow@@UEAAPEAXI@Z
	DQ	FLAT:?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z
	DQ	FLAT:_purecall
	DQ	FLAT:?display@Window@@UEBAX_N@Z
	DQ	FLAT:?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
	DQ	FLAT:?redraw@Window@@UEBAX_N@Z
	DQ	FLAT:?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z
	DQ	FLAT:?getWidth@Window@@UEBAHXZ
	DQ	FLAT:?getHeight@Window@@UEBAHXZ
	DQ	FLAT:?isVisible@Window@@UEBA_NXZ
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z DB 08H
	DB	00H
	DB	00H
	DB	0e2H
	DB	02H
	DB	' '
	DB	04H
	DB	084H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	040H
	DB	066H
	DD	imagerel ?dtor$2@?0???$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z DB 048H
	DD	imagerel $stateUnwindMap$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z
	DD	imagerel $ip2state$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z DD 0c2c19H
	DD	06781dH
	DD	076818H
	DD	0183413H
	DD	0f00cf213H
	DD	07008e00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$swap@UTaskLstFnStatus@@$0A@@std@@YAXAEAUTaskLstFnStatus@@0@Z
	DD	05bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 0a1801H
	DD	0a6418H
	DD	095418H
	DD	083418H
	DD	0f0143218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_hole_unchecked@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 021H
	DD	imagerel $LN37
	DD	imagerel $LN37+45
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 061421H
	DD	0ce414H
	DD	0b640fH
	DD	0a3405H
	DD	imagerel $LN37
	DD	imagerel $LN37+45
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Push_heap_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 061101H
	DD	0f00d3211H
	DD	0c009d00bH
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z
	DD	imagerel $ip2state$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z DD 040a11H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@UrecordedMacroStep@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'B'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z
	DD	imagerel $ip2state$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z DD 040a11H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@UPluginDlgDockingInfo@@AEAU1@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z
	DD	imagerel $ip2state$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@ULangMenuItem@@AEAU1@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@AEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z DB 08H
	DB	00H
	DB	00H
	DB	0e2H
	DB	02H
	DB	' '
	DB	04H
	DB	084H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	040H
	DB	066H
	DD	imagerel ?dtor$2@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z
	DD	imagerel $ip2state$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z DD 0c2c19H
	DD	06781dH
	DD	076818H
	DD	0183413H
	DD	0f00cf213H
	DD	07008e00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+65
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 082021H
	DD	0be420H
	DD	0a741bH
	DD	096412H
	DD	085405H
	DD	imagerel $LN6
	DD	imagerel $LN6+65
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Guess_median_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 040a01H
	DD	0f006320aH
	DD	03002c004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'm', 02H
	DB	02H
	DB	' '
	DB	04H
	DB	'n'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	060H
	DB	066H
	DD	imagerel ?dtor$2@?0???$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 082119H
	DD	0155412H
	DD	0143412H
	DD	0e00ed212H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Pop_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 091a01H
	DD	0f016421aH
	DD	0d012e014H
	DD	0700ec010H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+22
	DD	imagerel $unwind$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD 081c21H
	DD	04f41cH
	DD	0ae417H
	DD	09740eH
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+22
	DD	imagerel $unwind$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_backward_unchecked@PEAUTaskLstFnStatus@@PEAU1@@std@@YAPEAUTaskLstFnStatus@@PEAU1@00@Z DD 030701H
	DD	060034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEAUTaskLstFnStatus@@AEAU0@@?$_Ref_fn@USortTaskListPred@@@std@@QEAA?A_TAEAUTaskLstFnStatus@@0@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 06H
	DB	00H
	DB	00H
	DB	09cH
	DB	02H
	DB	0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_back@UrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD 021H
	DD	imagerel $LN24
	DD	imagerel $LN24+21
	DD	imagerel $unwind$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD 040e21H
	DD	07740eH
	DD	063405H
	DD	imagerel $LN24
	DD	imagerel $LN24+21
	DD	imagerel $unwind$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z DD 040a01H
	DD	08540aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z DB 06H
	DB	00H
	DB	00H
	DB	080H
	DB	02H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z DD 060f11H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_back@AEAUrecordedMacroStep@@@?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAXAEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'N'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z
	DD	imagerel $ip2state$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z DD 060f11H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_back@AEAUPluginDlgDockingInfo@@@?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAAXAEAUPluginDlgDockingInfo@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z
	DD	imagerel $ip2state$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_back@AEAULangMenuItem@@@?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAAXAEAULangMenuItem@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB '('
	DB	00H
	DB	00H
	DB	'y', 0dH
	DB	02H
	DB	'4'
	DB	04H
	DB	0c6H
	DB	00H
	DB	08dH, 05H
	DB	08H
	DB	'.'
	DB	0aH
	DB	0c6H
	DB	00H
	DB	091H, 03H
	DB	0eH
	DB	'.'
	DB	010H
	DB	0ddH, 04H
	DB	00H
	DB	081H, 02H
	DB	014H
	DB	'.'
	DB	016H
	DB	0c1H, 04H
	DB	00H
	DB	'E', 03H
	DB	01aH
	DB	'('
	DB	01cH
	DB	'9', 03H
	DB	00H
	DB	09H, 03H
	DB	01cH
	DB	0cH
	DB	00H
	DB	0cH
	DB	010H
	DB	0cH
	DB	016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 01eH
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	0f0H
	DB	066H
	DD	imagerel ?dtor$2@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	08eH
	DD	imagerel ?dtor$4@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	0b2H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	0c1H
	DB	02H
	DB	0eeH
	DD	imagerel ?dtor$5@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	02dH
	DB	02H
	DD	imagerel ?dtor$7@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	085H
	DB	02H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	0a1H
	DB	03H
	DB	0dH
	DB	03H
	DD	imagerel ?dtor$8@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	06dH
	DB	03H
	DD	imagerel ?dtor$10@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	0c5H
	DB	03H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	081H
	DB	04H
	DB	04dH
	DB	04H
	DD	imagerel ?dtor$11@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	0adH
	DB	04H
	DD	imagerel ?dtor$13@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	05H
	DB	05H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	061H
	DB	05H
	DB	08dH
	DB	05H
	DD	imagerel ?dtor$14@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 0b3019H
	DD	03f341fH
	DD	034011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	0192H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	011H, 03H
	DB	02H
	DB	' '
	DB	04H
	DB	'j'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	060H
	DB	066H
	DD	imagerel ?dtor$2@?0???$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 0a2519H
	DD	0175416H
	DD	0163416H
	DD	0f012d216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Sort_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	0e9H, 03H
	DB	02H
	DB	'D'
	DB	04H
	DB	0d1H, 09H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	021H
	DB	02H
	DB	06eH
	DD	imagerel ?dtor$2@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 0b2919H
	DD	0243417H
	DD	01a0117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	0c2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 0cH
	DB	00H
	DB	00H
	DB	0f5H, 02H
	DB	02H
	DB	','
	DB	04H
	DB	01H, 0bH
	DB	00H
	DB	'Q', 02H
	DB	04H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	021H
	DB	02H
	DB	06eH
	DD	imagerel ?dtor$2@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z DD 0d3219H
	DD	0237424H
	DD	0226424H
	DD	0213424H
	DD	01a0124H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	0c2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'*'
	DB	02H
	DB	0aaH
	DB	04H
	DB	0eH
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	00H
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@YAPEAPEAUHWND__@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUHWND__@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@YAPEAPEAVBuffer@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVBuffer@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy@UrecordedMacroStep@@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z
	DD	imagerel $ip2state$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy@UPluginDlgDockingInfo@@@?$_Default_allocator_traits@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@SAXAEAV?$allocator@UPluginDlgDockingInfo@@@1@QEAUPluginDlgDockingInfo@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z
	DD	imagerel $ip2state$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy@ULangMenuItem@@@?$_Default_allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAEAV?$allocator@ULangMenuItem@@@1@QEAULangMenuItem@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z DD 0c1c11H
	DD	0d641cH
	DD	0c541cH
	DD	0b341cH
	DD	0f018321cH
	DD	0d014e016H
	DD	07010c012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'H'
	DB	02H
	DB	'f'
	DB	04H
	DB	0cH
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'H'
	DB	02H
	DB	'<'
	DB	04H
	DB	'0'
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	0a0H
	DB	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAPEAUPluginDlgDockingInfo@@QEAU1@0PEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'N'
	DB	02H
	DB	'z'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z@4HA
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@YAPEAULangMenuItem@@QEAU1@0PEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@YAPEAPEAUtTbData@@QEAPEAU1@0PEAPEAU1@AEAV?$allocator@PEAUtTbData@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@YAPEAPEAVDockingCont@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVDockingCont@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	0dH, 07H
	DB	02H
	DB	' '
	DB	04H
	DB	'j'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
	DB	032H
	DD	imagerel ??1TaskLstFnStatus@@QEAA@XZ
	DB	080H
	DB	066H
	DD	imagerel ?dtor$2@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	imagerel $ip2state$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z DD 082119H
	DD	0f00bf212H
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z DD 041411H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAXPEAUrecordedMacroStep@@QEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UsessionFileInfo@@@std@@@std@@YAXPEAUsessionFileInfo@@QEAU1@AEAV?$allocator@UsessionFileInfo@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BE@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z DD 041411H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@YAXPEAUPluginDlgDockingInfo@@QEAU1@AEAV?$allocator@UPluginDlgDockingInfo@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z DD 041411H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@ULangMenuItem@@@std@@@std@@YAXPEAULangMenuItem@@QEAU1@AEAV?$allocator@ULangMenuItem@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 021H
	DD	imagerel $LN41
	DD	imagerel $LN41+42
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 040021H
	DD	096400H
	DD	085400H
	DD	imagerel $LN41
	DD	imagerel $LN41+42
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 040a21H
	DD	09640aH
	DD	085405H
	DD	imagerel $LN41
	DD	imagerel $LN41+42
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 060e01H
	DD	0a340eH
	DD	0f00a320eH
	DD	07006e008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z DB 0aH
	DB	00H
	DB	00H
	DB	'H'
	DB	02H
	DB	'f'
	DB	04H
	DB	0cH
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z
	DD	imagerel $ip2state$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA DD 030b01H
	DD	05007420bH
	DD	03006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	085H, 02H
	DB	02H
	DB	09cH
	DB	04H
	DB	010H
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DB 02H
	DB	00H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DB 08H
	DB	08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA
	DB	038H
	DB	046H
	DD	imagerel ?dtor$1@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z DD 081919H
	DD	0f0157219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0300b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z
	DD	imagerel $ip2state$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@UrecordedMacroStep@@U1@@?$_Default_allocator_traits@V?$allocator@UrecordedMacroStep@@@std@@@std@@SAXAEAV?$allocator@UrecordedMacroStep@@@1@QEAUrecordedMacroStep@@$$QEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 06H
	DB	00H
	DB	00H
	DB	09cH
	DB	02H
	DB	0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_back_with_unused_capacity@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAA?A_T$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b0H
	DB	02H
	DB	0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$emplace_back@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA?A_T$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b1H, 03H
	DB	02H
	DB	084H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z DD 081919H
	DD	0f0153219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0300b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z DB 0aH
	DB	00H
	DB	00H
	DB	'H'
	DB	02H
	DB	'<'
	DB	04H
	DB	'0'
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	0a0H
	DB	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z
	DD	imagerel $ip2state$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Ucopy@PEAUPluginDlgDockingInfo@@@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAPEAUPluginDlgDockingInfo@@PEAU2@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z DB 06H
	DB	00H
	DB	00H
	DB	'N'
	DB	02H
	DB	'z'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$1@?0???$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z@4HA
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z
	DD	imagerel $ip2state$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z DD 060f11H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Ucopy@PEAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAPEAULangMenuItem@@PEAU2@00@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b1H, 03H
	DB	02H
	DB	084H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z DD 081919H
	DD	0f0153219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0300b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAPEAUtTbData@@@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAPEAPEAUtTbData@@PEAPEAU2@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAPEAVDockingCont@@@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAPEAPEAVDockingCont@@PEAPEAV2@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@std@@USortTaskListPred@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTaskLstFnStatus@@@std@@@std@@@0@0USortTaskListPred@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RSortTaskListPred@@QEBA_NAEBUTaskLstFnStatus@@0@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reload@VerticalFileSwitcher@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GShortcutMapper@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAUHFONT__@@@std@@QEAAXQEAPEAUHFONT__@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ShortcutMapper@@UEAA@XZ DB 01eH
	DB	00H
	DB	00H
	DB	'$'
	DB	012H
	DB	0c6H
	DB	010H
	DB	01aH
	DB	0eH
	DB	01aH
	DB	0cH
	DB	0c2H
	DB	0aH
	DB	0c2H
	DB	08H
	DB	0baH
	DB	06H
	DB	01aH
	DB	04H
	DB	':'
	DB	02H
	DB	014H
	DB	00H
	DB	'$'
	DB	0aH
	DB	0cH
	DB	08H
	DB	0cH
	DB	012H
	DB	0cH
	DB	0cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ShortcutMapper@@UEAA@XZ DB 014H
	DB	0cH
	DD	imagerel ??1StaticDialog@@UEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???1ShortcutMapper@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???1ShortcutMapper@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ShortcutMapper@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1ShortcutMapper@@UEAA@XZ
	DD	imagerel $ip2state$??1ShortcutMapper@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ShortcutMapper@@UEAA@XZ DD 040f19H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ShortcutMapper@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ShortcutMapper@@QEAA@XZ DB 018H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	'z'
	DB	06H
	DB	'b'
	DB	08H
	DB	'2'
	DB	0aH
	DB	'*'
	DB	0cH
	DB	'*'
	DB	0eH
	DB	'*'
	DB	010H
	DB	'@'
	DB	012H
	DB	'@'
	DB	014H
	DB	'*'
	DB	016H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ShortcutMapper@@QEAA@XZ DB 016H
	DB	0cH
	DD	imagerel ??1StaticDialog@@UEAA@XZ
	DB	080H
	DB	036H
	DD	imagerel ?dtor$10@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0ShortcutMapper@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0ShortcutMapper@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ShortcutMapper@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0ShortcutMapper@@QEAA@XZ
	DD	imagerel $ip2state$??0ShortcutMapper@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ShortcutMapper@@QEAA@XZ DD 040f11H
	DD	0a340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ShortcutMapper@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBabyGridWrapper@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0TaskLstFnStatus@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0TaskLstFnStatus@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TaskLstFnStatus@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TaskLstFnStatus@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1TaskLstFnStatus@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1TaskLstFnStatus@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1TaskLstFnStatus@@QEAA@XZ
	DD	imagerel $ip2state$??1TaskLstFnStatus@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TaskLstFnStatus@@QEAA@XZ DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1TaskLstFnStatus@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA DD 020a01H
	DD	05006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DB 0aH
	DB	00H
	DB	00H
	DB	086H
	DB	02H
	DB	'('
	DB	00H
	DB	08H
	DB	02H
	DB	0ecH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DB 02H
	DB	07H
	DB	010H
	DD	imagerel ??_R0?AVexception@std@@@8
	DB	090H
	DD	imagerel ?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DB 018H
	DD	imagerel $stateUnwindMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
	DD	imagerel $tryMap$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
	DD	imagerel $ip2state$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z DD 031619H
	DD	07003e207H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
	DD	063H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z DB 'Y', 02H
	DB	00H
	DB	00H
	DB	0a5H, 03H
	DB	02H
	DB	04H
	DB	00H
	DB	'y', 0bH
	DB	02H
	DB	0aH
	DB	00H
	DB	0d5H, 05H
	DB	08H
	DB	014H
	DB	00H
	DB	'-', 02H
	DB	'`'
	DB	08dH, 02H
	DB	00H
	DB	08dH, 09H
	DB	'b'
	DB	01eH
	DB	'd'
	DB	01eH
	DB	'f'
	DB	01eH
	DB	'j'
	DB	08dH, 02H
	DB	'p'
	DB	0faH
	DB	'n'
	DB	01aH
	DB	'l'
	DB	01aH
	DB	00H
	DB	084H
	DB	'j'
	DB	0fdH, 05H
	DB	't'
	DB	016H
	DB	'v'
	DB	'.'
	DB	'x'
	DB	090H
	DB	'z'
	DB	01aH
	DB	'|'
	DB	01aH
	DB	080H
	DB	0eH
	DB	082H
	DB	' '
	DB	084H
	DB	'6'
	DB	088H
	DB	014H
	DB	086H
	DB	014H
	DB	't'
	DB	014H
	DB	'j'
	DB	014H
	DB	00H
	DB	'U', 08H
	DB	08cH
	DB	088H
	DB	00H
	DB	0edH, 06H
	DB	02H
	DB	04H
	DB	00H
	DB	'e', 08H
	DB	02H
	DB	'"'
	DB	00H
	DB	'Y', 03H
	DB	0cH
	DB	012H
	DB	0eH
	DB	012H
	DB	010H
	DB	01eH
	DB	014H
	DB	'>'
	DB	01aH
	DB	'!', 03H
	DB	018H
	DB	'a', 02H
	DB	016H
	DB	'9', 02H
	DB	00H
	DB	015H, 07H
	DB	'\'
	DB	'$'
	DB	00H
	DB	'}', 01eH
	DB	02H
	DB	04H
	DB	00H
	DB	')', 0dH
	DB	02H
	DB	01eH
	DB	00H
	DB	'i', 08H
	DB	01eH
	DB	012H
	DB	' '
	DB	012H
	DB	'"'
	DB	01eH
	DB	014H
	DB	0c6H
	DB	'*'
	DB	0fcH
	DB	'('
	DB	014H
	DB	'&'
	DB	014H
	DB	00H
	DB	0b4H
	DB	'2'
	DB	09H, 02H
	DB	'0'
	DB	014H
	DB	'.'
	DB	014H
	DB	00H
	DB	'i', 02H
	DB	'6'
	DB	012H
	DB	'8'
	DB	012H
	DB	':'
	DB	01eH
	DB	014H
	DB	0f9H, 03H
	DB	'B'
	DB	0dH, 02H
	DB	'@'
	DB	014H
	DB	'>'
	DB	014H
	DB	00H
	DB	0b8H
	DB	'J'
	DB	01H, 02H
	DB	'H'
	DB	014H
	DB	'F'
	DB	014H
	DB	00H
	DB	086H
	DB	02H
	DB	0aH
	DB	00H
	DB	0ccH
	DB	'N'
	DB	05H, 02H
	DB	00H
	DB	0deH
	DB	'P'
	DB	0faH
	DB	00H
	DB	'!', 08H
	DB	02H
	DB	04H
	DB	00H
	DB	0e9H, 011H
	DB	08eH
	DB	'<'
	DB	090H
	DB	'R'
	DB	092H
	DB	0c8H
	DB	090H
	DB	0ceH
	DB	092H
	DB	016H
	DB	090H
	DB	0a4H
	DB	00H
	DB	0a4H
	DB	092H
	DB	0eH
	DB	090H
	DB	0a4H
	DB	00H
	DB	099H, 05H
	DB	02H
	DB	016H
	DB	00H
	DB	' '
	DB	02H
	DB	'0'
	DB	00H
	DB	'&'
	DB	02H
	DB	08H
	DB	00H
	DB	'X'
	DB	02H
	DB	016H
	DB	00H
	DB	' '
	DB	02H
	DB	'6'
	DB	00H
	DB	'D'
	DB	02H
	DB	016H
	DB	00H
	DB	' '
	DB	02H
	DB	'6'
	DB	00H
	DB	0e1H, 09H
	DB	02H
	DB	'@'
	DB	00H
	DB	'H'
	DB	02H
	DB	'@'
	DB	00H
	DB	'i', 05H
	DB	02H
	DB	04H
	DB	00H
	DB	0c6H
	DB	02H
	DB	0d5H, 02H
	DB	00H
	DB	0edH, 02H
	DB	04H
	DB	082H
	DB	06H
	DB	0bdH, 02H
	DB	04H
	DB	0a2H
	DB	00H
	DB	095H, 05H
	DB	02H
	DB	'F'
	DB	00H
	DB	'9', 02H
	DB	'R'
	DB	' '
	DB	00H
	DB	'^'
	DB	'R'
	DB	' '
	DB	00H
	DB	082H
	DB	02H
	DB	04H
	DB	00H
	DB	'Q', 010H
	DB	094H
	DB	'q', 03H
	DB	00H
	DB	0f9H, 018H
	DB	'X'
	DB	01H, 05H
	DB	00H
	DB	0f2H
	DB	0aH
	DB	01aH
	DB	00H
	DB	'.'
	DB	'p'
	DB	0cH
	DB	00H
	DB	0cH
	DB	01aH
	DB	0cH
	DB	018H
	DB	0cH
	DB	016H
	DB	0cH
	DB	00H
	DB	018H
	DB	'*'
	DB	0cH
	DB	'2'
	DB	0cH
	DB	00H
	DB	0cH
	DB	'B'
	DB	0cH
	DB	'J'
	DB	0cH
	DB	00H
	DB	'$'
	DB	090H
	DB	0cH
	DB	00H
	DB	0cH
	DB	04H
	DB	0cH
	DB	00H
	DB	01aH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z DB 094H
	DB	0aH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	042H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	01H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	0b2H
	DD	imagerel ??1NppGUI@@QEAA@XZ
	DB	081H
	DB	06H
	DB	0eeH
	DD	imagerel ?dtor$34@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02dH
	DB	02H
	DD	imagerel ?dtor$35@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$36@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$37@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$38@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	075H
	DB	03H
	DD	imagerel ??1Session@@QEAA@XZ
	DB	041H
	DB	04H
	DB	0fdH
	DB	03H
	DD	imagerel ?dtor$39@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$40@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$41@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$42@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	04dH
	DB	05H
	DD	imagerel ?dtor$43@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$44@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$45@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$46@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	09dH
	DB	06H
	DD	imagerel ?dtor$47@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$48@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$49@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$50@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0edH
	DB	07H
	DD	imagerel ?dtor$51@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$52@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$53@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$54@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	03dH
	DB	09H
	DD	imagerel ?dtor$55@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$56@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$57@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$58@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	08dH
	DB	0aH
	DD	imagerel ?dtor$59@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$60@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$61@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$62@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0ddH
	DB	0bH
	DD	imagerel ?dtor$63@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$64@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$65@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$66@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	025H
	DB	0dH
	DD	imagerel ??1Utf8_16_Write@@QEAA@XZ
	DB	081H
	DB	02H
	DB	0a5H
	DB	0dH
	DD	imagerel ??1Utf8_16_Read@@QEAA@XZ
	DB	041H
	DB	04H
	DB	025H
	DB	0eH
	DD	imagerel ??1recordedMacroStep@@QEAA@XZ
	DB	081H
	DB	02H
	DB	0adH
	DB	0eH
	DD	imagerel ?dtor$67@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0dH
	DB	0fH
	DD	imagerel ?dtor$68@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	065H
	DB	0fH
	DD	imagerel ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	01H
	DB	02H
	DB	044H
	DD	imagerel ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	0c1H
	DB	03H
	DB	05dH
	DB	010H
	DD	imagerel ?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0bdH
	DB	010H
	DD	imagerel ?dtor$69@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	015H
	DB	011H
	DD	imagerel ??1ContextMenu@@QEAA@XZ
	DB	081H
	DB	02H
	DB	09dH
	DB	011H
	DD	imagerel ?dtor$70@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$71@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$72@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$73@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0e5H
	DB	012H
	DD	imagerel ??1Session@@QEAA@XZ
	DB	081H
	DB	046H
	DB	06dH
	DB	013H
	DD	imagerel ?dtor$74@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	036H
	DD	imagerel ?dtor$75@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$76@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$77@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0eaH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02aH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	041H
	DB	04H
	DB	03eH
	DD	imagerel ?dtor$82@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$83@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0b2H
	DD	imagerel ??1Process@@QEAA@XZ
	DB	041H
	DB	04H
	DB	025H
	DB	02H
	DD	imagerel ??1Process@@QEAA@XZ
	DB	041H
	DB	04H
	DB	015H
	DB	03H
	DD	imagerel ??1Process@@QEAA@XZ
	DB	041H
	DB	04H
	DB	095H
	DB	03H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	041H
	DB	04H
	DB	046H
	DD	imagerel ?dtor$85@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$86@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	06dH
	DB	019H
	DD	imagerel ?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA
	DB	0c5H
	DB	019H
	DD	imagerel ??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ
	DB	0c1H
	DB	03H
	DB	045H
	DB	01aH
	DD	imagerel ??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ
	DB	01H
	DB	02H
	DB	042H
	DD	imagerel ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ
	DB	0c1H
	DB	03H
	DB	035H
	DB	01bH
	DD	imagerel ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ
	DB	01H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z DB 08H
	DD	imagerel $stateUnwindMap$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z
	DD	imagerel $ip2state$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z DD 0a3319H
	DD	04370122H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z
	DD	021a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Process@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	01aH
	DB	04H
	DB	014H
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Process@@QEAA@XZ DB 06H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???1Process@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1Process@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Process@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1Process@@QEAA@XZ
	DD	imagerel $ip2state$??1Process@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Process@@QEAA@XZ DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Process@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Process@@QEAA@PEB_W00@Z DB 08H
	DB	00H
	DB	00H
	DB	0a0H
	DB	02H
	DB	'j'
	DB	04H
	DB	'b'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Process@@QEAA@PEB_W00@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	080H
	DB	036H
	DD	imagerel ?dtor$1@?0???0Process@@QEAA@PEB_W00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0Process@@QEAA@PEB_W00@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Process@@QEAA@PEB_W00@Z DB 08H
	DD	imagerel $stateUnwindMap$??0Process@@QEAA@PEB_W00@Z
	DD	imagerel $ip2state$??0Process@@QEAA@PEB_W00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Process@@QEAA@PEB_W00@Z DD 081711H
	DD	0a5417H
	DD	093417H
	DD	0e0133217H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Process@@QEAA@PEB_W00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d1H, 02H
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z DD 0a1811H
	DD	0b6418H
	DD	0a5418H
	DD	093418H
	DD	0f0143218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVDockingCont@@@std@@QEAAPEAPEAVDockingCont@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVDockingCont@@@std@@QEAAXQEAPEAVDockingCont@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d1H, 02H
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z DD 0a1811H
	DD	0b6418H
	DD	0a5418H
	DD	093418H
	DD	0f0143218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAUtTbData@@@std@@QEAAPEAPEAUtTbData@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAUtTbData@@@std@@QEAAXQEAPEAUtTbData@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ DB 08H
	DB	00H
	DB	00H
	DB	0f5H, 02H
	DB	04H
	DB	'<'
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA
	DB	02aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ
	DD	imagerel $ip2state$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ DD 081511H
	DD	0e3415H
	DD	0f0115215H
	DD	0700de00fH
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?restoreGlobalOverrideValues@WordStyleDlg@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?updateFinderScintilla@FindReplaceDlg@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clearIndicator@ScintillaEditView@@QEAAXH@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getSelection@ScintillaEditView@@QEBA?AUSci_CharacterRange@@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getSelectedTextCount@ScintillaEditView@@QEAAHXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DB 08H
	DB	00H
	DB	00H
	DB	08H
	DB	02H
	DB	'4'
	DB	00H
	DB	0eH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DB 02H
	DB	010H
	DD	imagerel ?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA
	DB	'<'
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DB 018H
	DD	imagerel $stateUnwindMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
	DD	imagerel $tryMap$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
	DD	imagerel $ip2state$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?execute@ScintillaEditView@@QEBA_JI_K_J@Z DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?execute@ScintillaEditView@@QEBA_JI_K_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAXQEAPEAVBuffer@@_K1@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@AEAAPEAPEAVBuffer@@PEAPEAV3@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVBuffer@@@std@@QEAAPEAPEAVBuffer@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FileManager@@AEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'4'
	DB	02H
	DB	010H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FileManager@@AEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0FileManager@@AEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0FileManager@@AEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0FileManager@@AEAA@XZ
	DD	imagerel $ip2state$??0FileManager@@AEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FileManager@@AEAA@XZ DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0FileManager@@AEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getInstance@FileManager@@SAAEAV1@XZ DB 0aH
	DB	00H
	DB	00H
	DB	090H
	DB	02H
	DB	'8'
	DB	04H
	DB	01cH
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getInstance@FileManager@@SAAEAV1@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getInstance@FileManager@@SAAEAV1@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getInstance@FileManager@@SAAEAV1@XZ
	DD	imagerel $ip2state$?getInstance@FileManager@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getInstance@FileManager@@SAAEAV1@XZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getInstance@FileManager@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 04H
	DB	00H
	DB	00H
	DB	'J'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	imagerel $ip2state$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 020a11H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getWingupDir@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 04H
	DB	00H
	DB	00H
	DB	'J'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	imagerel $ip2state$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 020a11H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getWingupParams@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 04H
	DB	00H
	DB	00H
	DB	'J'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	imagerel $ip2state$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 020a11H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getInstance@NppParameters@@SAAEAV1@XZ DB 0cH
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	0eH
	DB	00H
	DB	'Z'
	DB	02H
	DB	01eH
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getInstance@NppParameters@@SAAEAV1@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getInstance@NppParameters@@SAAEAV1@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getInstance@NppParameters@@SAAEAV1@XZ
	DD	imagerel $ip2state$?getInstance@NppParameters@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getInstance@NppParameters@@SAAEAV1@XZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getInstance@NppParameters@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getInstancePointer@NppParameters@@CAPEAV1@XZ DB 0cH
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	0eH
	DB	00H
	DB	'Z'
	DB	02H
	DB	01eH
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getInstancePointer@NppParameters@@CAPEAV1@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??getInstancePointer@NppParameters@@CAPEAV1@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getInstancePointer@NppParameters@@CAPEAV1@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getInstancePointer@NppParameters@@CAPEAV1@XZ
	DD	imagerel $ip2state$?getInstancePointer@NppParameters@@CAPEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getInstancePointer@NppParameters@@CAPEAV1@XZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getInstancePointer@NppParameters@@CAPEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0NppGUI@@QEAA@AEBU0@@Z DB ':'
	DB	00H
	DB	00H
	DB	0a9H, 05H
	DB	02H
	DB	'B'
	DB	04H
	DB	095H, 03H
	DB	06H
	DB	'@'
	DB	08H
	DB	'n'
	DB	06H
	DB	018H
	DB	0eH
	DB	084H
	DB	010H
	DB	'"'
	DB	012H
	DB	'"'
	DB	014H
	DB	'"'
	DB	016H
	DB	'\'
	DB	018H
	DB	'('
	DB	01aH
	DB	'('
	DB	01cH
	DB	'('
	DB	01eH
	DB	'R'
	DB	' '
	DB	'^'
	DB	'"'
	DB	'('
	DB	'$'
	DB	0dH, 02H
	DB	'&'
	DB	01cH
	DB	'('
	DB	'T'
	DB	'*'
	DB	'('
	DB	','
	DB	'('
	DB	'.'
	DB	'('
	DB	'0'
	DB	09dH, 05H
	DB	'2'
	DB	096H
	DB	'4'
	DB	'^'
	DB	'6'
	DB	'n'
	DB	00H
	DB	'$'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0NppGUI@@QEAA@AEBU0@@Z DB 036H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ
	DB	021H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$15@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	090H
	DB	0c6H
	DD	imagerel ?dtor$2@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$17@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$18@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$19@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$20@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$21@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$23@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$24@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	0ddH
	DB	02H
	DD	imagerel ?dtor$3@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$4@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02cH
	DD	imagerel ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$26@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	08eH
	DD	imagerel ?dtor$6@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$11@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0NppGUI@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0NppGUI@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0NppGUI@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0NppGUI@@QEAA@AEBU0@@Z DD 081311H
	DD	0f00f7213H
	DD	0c00be00dH
	DD	060087009H
	DD	030065007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0NppGUI@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1NppGUI@@QEAA@XZ DB 01cH
	DB	00H
	DB	00H
	DB	01aH
	DB	018H
	DB	01aH
	DB	016H
	DB	01aH
	DB	014H
	DB	01aH
	DB	012H
	DB	01aH
	DB	010H
	DB	01aH
	DB	0eH
	DB	01aH
	DB	0cH
	DB	01aH
	DB	0aH
	DB	01aH
	DB	08H
	DB	01aH
	DB	06H
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1NppGUI@@QEAA@XZ DB 01aH
	DB	0eH
	DD	imagerel ?dtor$0@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$11@?0???1NppGUI@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0???1NppGUI@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1NppGUI@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1NppGUI@@QEAA@XZ
	DD	imagerel $ip2state$??1NppGUI@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1NppGUI@@QEAA@XZ DD 020a19H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1NppGUI@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ DD 060f19H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z
	DD	imagerel $ip2state$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z DD 040f11H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXPEAULangMenuItem@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'5', 03H
	DB	02H
	DB	'&'
	DB	04H
	DB	'h'
	DB	02H
	DB	012H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ
	DB	0c0H
	DB	032H
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$2@?0???0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DB	088H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z DD 081211H
	DD	0f5412H
	DD	0e3412H
	DD	0e00e7212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@ULangMenuItem@@@std@@QEAAPEAULangMenuItem@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@ULangMenuItem@@@std@@QEAAXQEAULangMenuItem@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0MatchedPairConf@@QEAA@AEBV0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'6'
	DB	02H
	DB	01cH
	DB	04H
	DB	'T'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0MatchedPairConf@@QEAA@AEBV0@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???0MatchedPairConf@@QEAA@AEBV0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0MatchedPairConf@@QEAA@AEBV0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0MatchedPairConf@@QEAA@AEBV0@@Z
	DD	imagerel $ip2state$??0MatchedPairConf@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0MatchedPairConf@@QEAA@AEBV0@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0MatchedPairConf@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1MatchedPairConf@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'$'
	DB	02H
	DB	096H
	DB	00H
	DB	0a2H
	DB	02H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1MatchedPairConf@@QEAA@XZ DB 04H
	DB	0cH
	DD	imagerel ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???1MatchedPairConf@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1MatchedPairConf@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1MatchedPairConf@@QEAA@XZ
	DD	imagerel $ip2state$??1MatchedPairConf@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1MatchedPairConf@@QEAA@XZ DD 040f19H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1MatchedPairConf@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	09dH, 02H
	DB	02H
	DB	'J'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z DD 081211H
	DD	0a5412H
	DD	093412H
	DD	0e00e3212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$pair@DD@std@@@std@@QEAAPEAU?$pair@DD@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@DD@std@@@std@@QEAAXQEAU?$pair@DD@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0PrintSettings@@QEAA@AEBU0@@Z DB 014H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	01cH
	DB	04H
	DB	01cH
	DB	06H
	DB	01cH
	DB	08H
	DB	'X'
	DB	0aH
	DB	'('
	DB	0cH
	DB	'('
	DB	0eH
	DB	'('
	DB	010H
	DB	'L'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0PrintSettings@@QEAA@AEBU0@@Z DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0PrintSettings@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0PrintSettings@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0PrintSettings@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0PrintSettings@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0PrintSettings@@QEAA@AEBU0@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0PrintSettings@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1PrintSettings@@QEAA@XZ DB 012H
	DB	00H
	DB	00H
	DB	01aH
	DB	0eH
	DB	01aH
	DB	0cH
	DB	01aH
	DB	0aH
	DB	01aH
	DB	08H
	DB	01aH
	DB	06H
	DB	014H
	DB	04H
	DB	014H
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1PrintSettings@@QEAA@XZ DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???1PrintSettings@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???1PrintSettings@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1PrintSettings@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1PrintSettings@@QEAA@XZ
	DD	imagerel $ip2state$??1PrintSettings@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1PrintSettings@@QEAA@XZ DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1PrintSettings@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GLangMenuItem@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GLangMenuItem@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???_GLangMenuItem@@QEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GLangMenuItem@@QEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_GLangMenuItem@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GLangMenuItem@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GLangMenuItem@@QEAAPEAXI@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GLangMenuItem@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0LangMenuItem@@QEAA@AEBU0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0LangMenuItem@@QEAA@AEBU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0LangMenuItem@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0LangMenuItem@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0LangMenuItem@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0LangMenuItem@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0LangMenuItem@@QEAA@AEBU0@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0LangMenuItem@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1LangMenuItem@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1LangMenuItem@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1LangMenuItem@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1LangMenuItem@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1LangMenuItem@@QEAA@XZ
	DD	imagerel $ip2state$??1LangMenuItem@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1LangMenuItem@@QEAA@XZ DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1LangMenuItem@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getStylerIndexByName@StyleArray@@QEBAHPEB_W@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0DockingManagerData@@QEAA@AEBU0@@Z DB 01cH
	DB	00H
	DB	00H
	DB	0bdH, 03H
	DB	02H
	DB	'l'
	DB	04H
	DB	0e5H, 02H
	DB	06H
	DB	'$'
	DB	08H
	DB	'J'
	DB	0aH
	DB	'0'
	DB	08H
	DB	'6'
	DB	06H
	DB	018H
	DB	0eH
	DB	'y', 02H
	DB	010H
	DB	'Z'
	DB	00H
	DB	'$'
	DB	0eH
	DB	018H
	DB	00H
	DB	018H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0DockingManagerData@@QEAA@AEBU0@@Z DB 012H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	021H
	DB	02H
	DB	046H
	DD	imagerel ?dtor$0@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA
	DB	02aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	021H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	0a0H
	DB	0d6H
	DD	imagerel ?dtor$1@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA
	DB	02aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	021H
	DB	02H
	DB	066H
	DD	imagerel ?dtor$2@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0DockingManagerData@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0DockingManagerData@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0DockingManagerData@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0DockingManagerData@@QEAA@AEBU0@@Z DD 081311H
	DD	0f00f7213H
	DD	0c00be00dH
	DD	060087009H
	DD	030065007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0DockingManagerData@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1DockingManagerData@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	01aH
	DB	04H
	DB	0a0H
	DB	02H
	DB	014H
	DB	00H
	DB	01cH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1DockingManagerData@@QEAA@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1DockingManagerData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1DockingManagerData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1DockingManagerData@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1DockingManagerData@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1DockingManagerData@@QEAA@XZ
	DD	imagerel $ip2state$??1DockingManagerData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1DockingManagerData@@QEAA@XZ DD 020a19H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1DockingManagerData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b5H, 02H
	DB	02H
	DB	'>'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z DD 081211H
	DD	0a5412H
	DD	093412H
	DD	0e00e3212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UContainerTabInfo@@@std@@QEAAPEAUContainerTabInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UContainerTabInfo@@@std@@QEAAXQEAUContainerTabInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ DD 060f19H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z
	DD	imagerel $ip2state$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z DD 040f11H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXPEAUPluginDlgDockingInfo@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 0eH
	DB	00H
	DB	00H
	DB	'%', 03H
	DB	02H
	DB	'$'
	DB	04H
	DB	'.'
	DB	06H
	DB	'0'
	DB	04H
	DB	'6'
	DB	02H
	DB	012H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	0c0H
	DB	032H
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	0d0H
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z DD 081211H
	DD	0f5412H
	DD	0e3412H
	DD	0e00e7212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAPEAUPluginDlgDockingInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPluginDlgDockingInfo@@@std@@QEAAXQEAUPluginDlgDockingInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'%', 03H
	DB	02H
	DB	'R'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z DD 081211H
	DD	0a5412H
	DD	093412H
	DD	0e00e3212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAPEAUFloatingWindowInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UFloatingWindowInfo@@@std@@QEAAXQEAUFloatingWindowInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GPluginDlgDockingInfo@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'6'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0PluginDlgDockingInfo@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1PluginDlgDockingInfo@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1PluginDlgDockingInfo@@QEAA@XZ DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1PluginDlgDockingInfo@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1PluginDlgDockingInfo@@QEAA@XZ
	DD	imagerel $ip2state$??1PluginDlgDockingInfo@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1PluginDlgDockingInfo@@QEAA@XZ DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1PluginDlgDockingInfo@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4CmdLineParamsDTO@@QEAAAEAU0@AEBU0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Session@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	01aH
	DB	06H
	DB	014H
	DB	04H
	DB	014H
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Session@@QEAA@XZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1Session@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Session@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1Session@@QEAA@XZ
	DD	imagerel $ip2state$??1Session@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Session@@QEAA@XZ DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Session@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Session@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	018H
	DB	04H
	DB	018H
	DB	06H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Session@@QEAA@XZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0Session@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0Session@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Session@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0Session@@QEAA@XZ
	DD	imagerel $ip2state$??0Session@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Session@@QEAA@XZ DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Session@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DD 060f19H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ DD 060f19H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@AEAAXPEAUsessionFileInfo@@0@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ DD 060f19H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UsessionFileInfo@@@std@@QEAAXQEAUsessionFileInfo@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GsessionFileInfo@@QEAAPEAXI@Z DB 010H
	DB	00H
	DB	00H
	DB	'2'
	DB	08H
	DB	01aH
	DB	06H
	DB	0baH
	DB	04H
	DB	09cH
	DB	02H
	DB	014H
	DB	00H
	DB	'^'
	DB	06H
	DB	0cH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GsessionFileInfo@@QEAAPEAXI@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GsessionFileInfo@@QEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_GsessionFileInfo@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GsessionFileInfo@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GsessionFileInfo@@QEAAPEAXI@Z DD 061419H
	DD	086414H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GsessionFileInfo@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sessionFileInfo@@QEAA@XZ DB 010H
	DB	00H
	DB	00H
	DB	'$'
	DB	08H
	DB	01aH
	DB	06H
	DB	0baH
	DB	04H
	DB	09cH
	DB	02H
	DB	014H
	DB	00H
	DB	'&'
	DB	06H
	DB	0cH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sessionFileInfo@@QEAA@XZ DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0???1sessionFileInfo@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1sessionFileInfo@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1sessionFileInfo@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1sessionFileInfo@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1sessionFileInfo@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sessionFileInfo@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1sessionFileInfo@@QEAA@XZ
	DD	imagerel $ip2state$??1sessionFileInfo@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sessionFileInfo@@QEAA@XZ DD 040f19H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sessionFileInfo@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ContextMenu@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ContextMenu@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ContextMenu@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ContextMenu@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0ContextMenu@@QEAA@XZ
	DD	imagerel $ip2state$??0ContextMenu@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ContextMenu@@QEAA@XZ DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ContextMenu@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAUHMENU__@@@std@@QEAAXQEAPEAUHMENU__@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?display@ContextMenu@@QEBAXAEBUtagPOINT@@@Z DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAXQEAPEAUHWND__@@_K1@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@AEAAPEAPEAUHWND__@@PEAPEAU3@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUHWND__@@@std@@@std@@@2@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAUHWND__@@@std@@QEAAPEAPEAUHWND__@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ DD 060f19H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z
	DD	imagerel $ip2state$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z DD 0a1811H
	DD	0b6418H
	DD	0a5418H
	DD	093418H
	DD	0f0143218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Change_array@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXQEAUrecordedMacroStep@@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z
	DD	imagerel $ip2state$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z DD 040f11H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z DD 081411H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Clear_and_reserve_geometric@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b0H
	DB	02H
	DB	0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
	DD	imagerel $ip2state$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z DB 0eH
	DB	00H
	DB	00H
	DB	0b4H
	DB	02H
	DB	'$'
	DB	04H
	DB	'V'
	DB	06H
	DB	0cH
	DB	04H
	DB	'6'
	DB	02H
	DB	012H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ
	DB	0e0H
	DB	032H
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$2@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DB	088H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z DD 081011H
	DD	0103410H
	DD	0f00c7210H
	DD	07008e00aH
	DD	050066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GrecordedMacroStep@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GrecordedMacroStep@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???_GrecordedMacroStep@@QEAAPEAXI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GrecordedMacroStep@@QEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_GrecordedMacroStep@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GrecordedMacroStep@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GrecordedMacroStep@@QEAAPEAXI@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GrecordedMacroStep@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4recordedMacroStep@@QEAAAEAU0@AEBU0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0recordedMacroStep@@QEAA@$$QEAU0@@Z DB 06H
	DB	00H
	DB	00H
	DB	08eH
	DB	02H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0recordedMacroStep@@QEAA@$$QEAU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0recordedMacroStep@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0recordedMacroStep@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0recordedMacroStep@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0recordedMacroStep@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0recordedMacroStep@@QEAA@$$QEAU0@@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0recordedMacroStep@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0recordedMacroStep@@QEAA@AEBU0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'n'
	DB	02H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0recordedMacroStep@@QEAA@AEBU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0recordedMacroStep@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0recordedMacroStep@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0recordedMacroStep@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0recordedMacroStep@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0recordedMacroStep@@QEAA@AEBU0@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0recordedMacroStep@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1recordedMacroStep@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1recordedMacroStep@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1recordedMacroStep@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1recordedMacroStep@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1recordedMacroStep@@QEAA@XZ
	DD	imagerel $ip2state$??1recordedMacroStep@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1recordedMacroStep@@QEAA@XZ DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1recordedMacroStep@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z DB 016H
	DB	00H
	DB	00H
	DB	0c0H
	DB	02H
	DB	096H
	DB	04H
	DB	0eH
	DB	02H
	DB	'h'
	DB	06H
	DB	0e4H
	DB	04H
	DB	0b8H
	DB	02H
	DB	0b0H
	DB	00H
	DB	'X'
	DB	02H
	DB	0cH
	DB	04H
	DB	0cH
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z DB 08H
	DD	imagerel $stateUnwindMap$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z
	DD	imagerel $ip2state$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z DD 0a2c19H
	DD	017741eH
	DD	016641eH
	DD	015341eH
	DD	0f014f21eH
	DD	05010e012H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GStaticDialog@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GWindow@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isVisible@Window@@UEBA_NXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getHeight@Window@@UEBAHXZ DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getWidth@Window@@UEBAHXZ DD 011319H
	DD	08204H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?redraw@Window@@UEBAX_N@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	08H
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ DB 08H
	DD	imagerel $stateUnwindMap$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ
	DD	imagerel $ip2state$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1WcharMbcsConvertor@@IEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	01aH
	DB	02H
	DB	'"'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1WcharMbcsConvertor@@IEAA@XZ DB 04H
	DB	0cH
	DD	imagerel ??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???1WcharMbcsConvertor@@IEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1WcharMbcsConvertor@@IEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1WcharMbcsConvertor@@IEAA@XZ
	DD	imagerel $ip2state$??1WcharMbcsConvertor@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1WcharMbcsConvertor@@IEAA@XZ DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1WcharMbcsConvertor@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ DB 06H
	DB	00H
	DB	00H
	DB	090H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ
	DD	imagerel $ip2state$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?getInstance@WcharMbcsConvertor@@SAAEAV1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD 0a1801H
	DD	0a6418H
	DD	095418H
	DD	083418H
	DD	0f0143218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD 085001H
	DD	063450H
	DD	08640fH
	DD	07540fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 085001H
	DD	065450H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 083501H
	DD	066435H
	DD	08540fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DB 04H
	DB	0cH
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DB	060H
	DB	03cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
	DD	imagerel $ip2state$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 040f19H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 08H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	014H
	DB	04H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 04H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
	DB	03cH
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020a19H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 04H
	DB	0cH
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DB	060H
	DB	03cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 010919H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	'B'
	DB	02H
	DB	014H
	DB	04H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 04H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	010H
	DB	03cH
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gbad_alloc@std@@UEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_Gbad_alloc@std@@UEAAPEAXI@Z DB 02H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DB 048H
	DD	imagerel $stateUnwindMap$??_Gbad_alloc@std@@UEAAPEAXI@Z
	DD	imagerel $ip2state$??_Gbad_alloc@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 040f19H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_Gbad_alloc@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020a19H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 010919H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'4'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0cH
	DD	imagerel ??1exception@std@@UEAA@XZ
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gexception@std@@UEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_Gexception@std@@UEAAPEAXI@Z DB 040H
	DD	imagerel $ip2state$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_Gexception@std@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Mid$ = 72
_Last$ = 80
_Pred$ = 88
??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 7262 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

$LN19:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	41 56		 push	 r14
  00012	41 57		 push	 r15
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b ea	 mov	 rbp, rdx
  0001b	4c 8b f1	 mov	 r14, rcx
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  0001e	48 63 52 04	 movsxd	 rdx, DWORD PTR [rdx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7262 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00022	49 8b d9	 mov	 rbx, r9
  00025	4d 8b f8	 mov	 r15, r8
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00028	48 63 4d 00	 movsxd	 rcx, DWORD PTR [rbp]
  0002c	49 8b 0c c9	 mov	 rcx, QWORD PTR [r9+rcx*8]
  00030	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00035	49 63 0e	 movsxd	 rcx, DWORD PTR [r14]
  00038	48 8b f0	 mov	 rsi, rax
  0003b	49 63 56 04	 movsxd	 rdx, DWORD PTR [r14+4]
  0003f	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00043	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00048	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  0004b	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  00050	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00055	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  0005b	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7264 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00061	7e 0b		 jle	 SHORT $LN2@Med3_unche

; 7265 :         _STD iter_swap(_Mid, _First);

  00063	49 8b d6	 mov	 rdx, r14
  00066	48 8b cd	 mov	 rcx, rbp
  00069	e8 00 00 00 00	 call	 ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>
$LN2@Med3_unche:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  0006e	49 63 0f	 movsxd	 rcx, DWORD PTR [r15]
  00071	49 63 57 04	 movsxd	 rdx, DWORD PTR [r15+4]
  00075	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00079	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  0007e	48 63 4d 00	 movsxd	 rcx, DWORD PTR [rbp]
  00082	48 8b f0	 mov	 rsi, rax
  00085	48 63 55 04	 movsxd	 rdx, DWORD PTR [rbp+4]
  00089	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0008d	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00092	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00095	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0009a	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  0009f	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  000a5	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7268 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000ab	7e 55		 jle	 SHORT $LN4@Med3_unche

; 7269 :         _STD iter_swap(_Last, _Mid);

  000ad	48 8b d5	 mov	 rdx, rbp
  000b0	49 8b cf	 mov	 rcx, r15
  000b3	e8 00 00 00 00	 call	 ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  000b8	48 63 4d 00	 movsxd	 rcx, DWORD PTR [rbp]
  000bc	48 63 55 04	 movsxd	 rdx, DWORD PTR [rbp+4]
  000c0	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  000c4	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  000c9	49 63 0e	 movsxd	 rcx, DWORD PTR [r14]
  000cc	48 8b f8	 mov	 rdi, rax
  000cf	49 63 56 04	 movsxd	 rdx, DWORD PTR [r14+4]
  000d3	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  000d7	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  000dc	48 8b d8	 mov	 rbx, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  000df	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  000e4	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  000e9	8b 8b dc 00 00
	00		 mov	 ecx, DWORD PTR [rbx+220]
  000ef	39 8f dc 00 00
	00		 cmp	 DWORD PTR [rdi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7271 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000f5	7e 0b		 jle	 SHORT $LN4@Med3_unche

; 7272 :             _STD iter_swap(_Mid, _First);

  000f7	49 8b d6	 mov	 rdx, r14
  000fa	48 8b cd	 mov	 rcx, rbp
  000fd	e8 00 00 00 00	 call	 ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>
$LN4@Med3_unche:

; 7273 :         }
; 7274 :     }
; 7275 : }

  00102	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00107	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  0010c	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00111	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00115	41 5f		 pop	 r15
  00117	41 5e		 pop	 r14
  00119	5f		 pop	 rdi
  0011a	c3		 ret	 0
??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z
_TEXT	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z PROC ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>, COMDAT

; 80   : _CONSTEXPR20 void iter_swap(_FwdIt1 _Left, _FwdIt2 _Right) { // swap *_Left and *_Right

$LN88:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00013	0f 29 74 24 70	 movaps	 XMMWORD PTR [rsp+112], xmm6
  00018	0f 29 7c 24 60	 movaps	 XMMWORD PTR [rsp+96], xmm7
  0001d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00024	48 33 c4	 xor	 rax, rsp
  00027	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002c	48 8b f2	 mov	 rsi, rdx
  0002f	8b 39		 mov	 edi, DWORD PTR [rcx]
  00031	89 7c 24 20	 mov	 DWORD PTR _Tmp$1[rsp], edi
  00035	8b 59 04	 mov	 ebx, DWORD PTR [rcx+4]
  00038	89 5c 24 24	 mov	 DWORD PTR _Tmp$1[rsp+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0003c	45 33 ff	 xor	 r15d, r15d
  0003f	4c 89 7c 24 28	 mov	 QWORD PTR _Tmp$1[rsp+8], r15
  00044	0f 57 c0	 xorps	 xmm0, xmm0

; 2355 :     size_type _Mysize = 0; // current length of string

  00047	f3 0f 7f 44 24
	38		 movdqu	 XMMWORD PTR _Tmp$1[rsp+24], xmm0

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0004d	0f 10 71 08	 movups	 xmm6, XMMWORD PTR [rcx+8]
  00051	0f 11 74 24 28	 movups	 XMMWORD PTR _Tmp$1[rsp+8], xmm6
  00056	0f 10 79 18	 movups	 xmm7, XMMWORD PTR [rcx+24]
  0005a	f3 0f 7f 7c 24
	38		 movdqu	 XMMWORD PTR _Tmp$1[rsp+24], xmm7

; 4596 :         _My_data._Mysize = 0;

  00060	4c 89 79 18	 mov	 QWORD PTR [rcx+24], r15

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00064	48 c7 41 20 07
	00 00 00	 mov	 QWORD PTR [rcx+32], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0006c	66 44 89 79 08	 mov	 WORD PTR [rcx+8], r15w
  00071	8b 69 28	 mov	 ebp, DWORD PTR [rcx+40]
  00074	89 6c 24 48	 mov	 DWORD PTR _Tmp$1[rsp+40], ebp
  00078	4c 8b 71 30	 mov	 r14, QWORD PTR [rcx+48]
  0007c	4c 89 74 24 50	 mov	 QWORD PTR _Tmp$1[rsp+48], r14
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 105  :     _Left    = _STD move(_Right);

  00081	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
  00086	89 3e		 mov	 DWORD PTR [rsi], edi
  00088	89 5e 04	 mov	 DWORD PTR [rsi+4], ebx
  0008b	48 8d 5e 08	 lea	 rbx, QWORD PTR [rsi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  0008f	48 8d 44 24 28	 lea	 rax, QWORD PTR _Tmp$1[rsp+8]
  00094	48 3b d8	 cmp	 rbx, rax
  00097	74 23		 je	 SHORT $LN38@iter_swap

; 2776 :         _Tidy_deallocate();

  00099	48 8b cb	 mov	 rcx, rbx
  0009c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a1	0f 11 33	 movups	 XMMWORD PTR [rbx], xmm6
  000a4	0f 11 7b 10	 movups	 XMMWORD PTR [rbx+16], xmm7

; 4596 :         _My_data._Mysize = 0;

  000a8	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  000b0	f3 0f 7f 44 24
	38		 movdqu	 XMMWORD PTR _Tmp$1[rsp+24], xmm0

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000b6	66 44 89 7c 24
	28		 mov	 WORD PTR _Tmp$1[rsp+8], r15w
$LN38@iter_swap:
  000bc	89 6e 28	 mov	 DWORD PTR [rsi+40], ebp
  000bf	4c 89 76 30	 mov	 QWORD PTR [rsi+48], r14

; 2319 :         return _BUF_SIZE <= _Myres;

  000c3	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Tmp$1[rsp+32]
  000c8	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cc	72 33		 jb	 SHORT $LN77@iter_swap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ce	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  000d6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Tmp$1[rsp+8]
  000db	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000de	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000e5	72 15		 jb	 SHORT $LN76@iter_swap

; 155  :     _Bytes += _Non_user_size;

  000e7	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000eb	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  000ef	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f2	48 83 c0 f8	 add	 rax, -8
  000f6	48 83 f8 1f	 cmp	 rax, 31
  000fa	77 47		 ja	 SHORT $LN86@iter_swap
$LN76@iter_swap:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000fc	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN77@iter_swap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00101	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  00109	f3 0f 7f 44 24
	38		 movdqu	 XMMWORD PTR _Tmp$1[rsp+24], xmm0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;
; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0010f	66 44 89 7c 24
	28		 mov	 WORD PTR _Tmp$1[rsp+8], r15w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 82   : }

  00115	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 8b 9c 24 c0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+192]
  0012a	0f 28 74 24 70	 movaps	 xmm6, XMMWORD PTR [rsp+112]
  0012f	0f 28 7c 24 60	 movaps	 xmm7, XMMWORD PTR [rsp+96]
  00134	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0013b	41 5f		 pop	 r15
  0013d	41 5e		 pop	 r14
  0013f	5f		 pop	 rdi
  00140	5e		 pop	 rsi
  00141	5d		 pop	 rbp
  00142	c3		 ret	 0
$LN86@iter_swap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00143	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00148	cc		 int	 3
$LN84@iter_swap:
??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ENDP ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$1@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$1
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$0@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$2@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$2
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$1@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$1
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$0@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$1 = 32
__$ArrayPad$ = 88
_Left$ = 176
_Right$ = 184
?dtor$2@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA PROC ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$2
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z@4HA ENDP ; `std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
tv798 = 112
_First$ = 112
_Top$1$ = 120
_Hole$ = 120
_Bottom$ = 128
_Val$ = 136
_Pred$ = 144
??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Pop_heap_hole_by_index<TaskLstFnStatus *,TaskLstFnStatus,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 5672 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

$LN72:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	53		 push	 rbx
  0000b	55		 push	 rbp
  0000c	56		 push	 rsi
  0000d	57		 push	 rdi
  0000e	41 54		 push	 r12
  00010	41 55		 push	 r13
  00012	41 56		 push	 r14
  00014	41 57		 push	 r15
  00016	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 5683 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0001a	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR _Pred$[rsp]
  00022	49 8d 68 ff	 lea	 rbp, QWORD PTR [r8-1]
  00026	4c 8b ed	 mov	 r13, rbp
  00029	48 89 54 24 78	 mov	 QWORD PTR _Top$1$[rsp], rdx
  0002e	49 d1 fd	 sar	 r13, 1
  00031	45 33 f6	 xor	 r14d, r14d
  00034	48 89 6c 24 70	 mov	 QWORD PTR tv798[rsp], rbp
  00039	49 8b f9	 mov	 rdi, r9
  0003c	49 8b c0	 mov	 rax, r8
  0003f	4c 8b fa	 mov	 r15, rdx
  00042	4c 8b e1	 mov	 r12, rcx
  00045	48 8b f2	 mov	 rsi, rdx
  00048	49 3b d5	 cmp	 rdx, r13
  0004b	0f 8d de 00 00
	00		 jge	 $LN3@Pop_heap_h
$LL2@Pop_heap_h:

; 5684 :         _Idx = 2 * _Idx + 2;

  00051	48 8d 2c 36	 lea	 rbp, QWORD PTR [rsi+rsi]

; 5685 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00055	48 6b fd 38	 imul	 rdi, rbp, 56		; 00000038H
  00059	49 03 fc	 add	 rdi, r12
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  0005c	48 63 4f 70	 movsxd	 rcx, DWORD PTR [rdi+112]
  00060	48 63 57 74	 movsxd	 rdx, DWORD PTR [rdi+116]
  00064	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00068	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  0006d	48 63 4f 38	 movsxd	 rcx, DWORD PTR [rdi+56]
  00071	48 8b f0	 mov	 rsi, rax
  00074	48 63 57 3c	 movsxd	 rdx, DWORD PTR [rdi+60]
  00078	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0007c	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00081	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00084	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  00089	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5688 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0008e	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  00094	49 8b d6	 mov	 rdx, r14
  00097	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
  0009d	0f 9e c2	 setle	 dl
  000a0	4d 6b ff 38	 imul	 r15, r15, 56		; 00000038H
  000a4	48 8d 72 01	 lea	 rsi, QWORD PTR [rdx+1]
  000a8	4d 03 fc	 add	 r15, r12
  000ab	48 03 f5	 add	 rsi, rbp
  000ae	4c 6b f6 38	 imul	 r14, rsi, 56		; 00000038H
  000b2	49 8d 6f 08	 lea	 rbp, QWORD PTR [r15+8]
  000b6	4d 03 f4	 add	 r14, r12
  000b9	41 8b 06	 mov	 eax, DWORD PTR [r14]
  000bc	49 8d 7e 08	 lea	 rdi, QWORD PTR [r14+8]
  000c0	41 89 07	 mov	 DWORD PTR [r15], eax
  000c3	41 8b 46 04	 mov	 eax, DWORD PTR [r14+4]
  000c7	41 89 47 04	 mov	 DWORD PTR [r15+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  000cb	48 3b ef	 cmp	 rbp, rdi
  000ce	74 28		 je	 SHORT $LN18@Pop_heap_h

; 2776 :         _Tidy_deallocate();

  000d0	48 8b cd	 mov	 rcx, rbp
  000d3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000d8	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]

; 4596 :         _My_data._Mysize = 0;

  000db	33 c9		 xor	 ecx, ecx

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000dd	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  000e1	0f 10 4f 10	 movups	 xmm1, XMMWORD PTR [rdi+16]
  000e5	0f 11 4d 10	 movups	 XMMWORD PTR [rbp+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  000e9	48 89 4f 10	 mov	 QWORD PTR [rdi+16], rcx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000ed	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f5	66 89 0f	 mov	 WORD PTR [rdi], cx
$LN18@Pop_heap_h:
  000f8	41 8b 46 28	 mov	 eax, DWORD PTR [r14+40]
  000fc	41 89 47 28	 mov	 DWORD PTR [r15+40], eax
  00100	49 8b 46 30	 mov	 rax, QWORD PTR [r14+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5683 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00104	41 be 00 00 00
	00		 mov	 r14d, 0
  0010a	49 89 47 30	 mov	 QWORD PTR [r15+48], rax

; 5689 :         _Hole             = _Idx;

  0010e	4c 8b fe	 mov	 r15, rsi
  00111	49 3b f5	 cmp	 rsi, r13
  00114	0f 8c 37 ff ff
	ff		 jl	 $LL2@Pop_heap_h
  0011a	48 8b bc 24 88
	00 00 00	 mov	 rdi, QWORD PTR _Val$[rsp]
  00122	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Bottom$[rsp]
  0012a	48 8b 6c 24 70	 mov	 rbp, QWORD PTR tv798[rsp]
$LN3@Pop_heap_h:

; 5690 :     }
; 5691 : 
; 5692 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0012f	49 3b f5	 cmp	 rsi, r13
  00132	75 1f		 jne	 SHORT $LN5@Pop_heap_h
  00134	a8 01		 test	 al, 1
  00136	75 1b		 jne	 SHORT $LN5@Pop_heap_h

; 5693 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00138	48 6b c0 38	 imul	 rax, rax, 56		; 00000038H
  0013c	49 6b cf 38	 imul	 rcx, r15, 56		; 00000038H
  00140	49 8d 54 24 c8	 lea	 rdx, QWORD PTR [r12-56]
  00145	48 03 d0	 add	 rdx, rax
  00148	49 03 cc	 add	 rcx, r12
  0014b	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z

; 5694 :         _Hole             = _Bottom - 1;

  00150	4c 8b fd	 mov	 r15, rbp
$LN5@Pop_heap_h:

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00153	4c 8b 6c 24 78	 mov	 r13, QWORD PTR _Top$1$[rsp]
  00158	49 8d 6f ff	 lea	 rbp, QWORD PTR [r15-1]
  0015c	48 d1 fd	 sar	 rbp, 1
  0015f	4d 3b ef	 cmp	 r13, r15
  00162	0f 8d bf 00 00
	00		 jge	 $LN70@Pop_heap_h
  00168	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL35@Pop_heap_h:
  00170	4c 6b f5 38	 imul	 r14, rbp, 56		; 00000038H
  00174	4d 03 f4	 add	 r14, r12
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00177	49 63 0e	 movsxd	 rcx, DWORD PTR [r14]
  0017a	49 63 56 04	 movsxd	 rdx, DWORD PTR [r14+4]
  0017e	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00182	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00187	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  0018a	48 8b f0	 mov	 rsi, rax
  0018d	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  00191	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00195	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  0019a	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  0019d	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  001a2	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  001a7	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  001ad	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001b3	7e 72		 jle	 SHORT $LN70@Pop_heap_h
  001b5	41 8b 06	 mov	 eax, DWORD PTR [r14]
  001b8	49 8d 76 08	 lea	 rsi, QWORD PTR [r14+8]

; 5565 :         // move _Hole up to parent
; 5566 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001bc	49 6b ff 38	 imul	 rdi, r15, 56		; 00000038H
  001c0	49 03 fc	 add	 rdi, r12
  001c3	4c 8d 7f 08	 lea	 r15, QWORD PTR [rdi+8]
  001c7	89 07		 mov	 DWORD PTR [rdi], eax
  001c9	41 8b 46 04	 mov	 eax, DWORD PTR [r14+4]
  001cd	89 47 04	 mov	 DWORD PTR [rdi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  001d0	4c 3b fe	 cmp	 r15, rsi
  001d3	74 29		 je	 SHORT $LN48@Pop_heap_h

; 2776 :         _Tidy_deallocate();

  001d5	49 8b cf	 mov	 rcx, r15
  001d8	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001dd	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]

; 4596 :         _My_data._Mysize = 0;

  001e0	33 c0		 xor	 eax, eax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001e2	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0
  001e6	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  001ea	41 0f 11 4f 10	 movups	 XMMWORD PTR [r15+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  001ef	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001f3	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001fb	66 89 06	 mov	 WORD PTR [rsi], ax
$LN48@Pop_heap_h:
  001fe	41 8b 46 28	 mov	 eax, DWORD PTR [r14+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5567 :         _Hole             = _Idx;

  00202	4c 8b fd	 mov	 r15, rbp
  00205	48 ff cd	 dec	 rbp
  00208	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  0020b	49 8b 46 30	 mov	 rax, QWORD PTR [r14+48]

; 5564 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen

  0020f	48 d1 fd	 sar	 rbp, 1
  00212	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00216	48 8b bc 24 88
	00 00 00	 mov	 rdi, QWORD PTR _Val$[rsp]
  0021e	4d 3b ef	 cmp	 r13, r15
  00221	0f 8c 49 ff ff
	ff		 jl	 $LL35@Pop_heap_h
$LN70@Pop_heap_h:

; 5568 :     }
; 5569 : 
; 5570 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00227	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Val$[rsp]
  0022f	49 6b cf 38	 imul	 rcx, r15, 56		; 00000038H
  00233	49 03 cc	 add	 rcx, r12

; 5695 :     }
; 5696 : 
; 5697 :     _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 5698 : }

  00236	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0023a	41 5f		 pop	 r15
  0023c	41 5e		 pop	 r14
  0023e	41 5d		 pop	 r13
  00240	41 5c		 pop	 r12
  00242	5f		 pop	 rdi
  00243	5e		 pop	 rsi
  00244	5d		 pop	 rbp
  00245	5b		 pop	 rbx

; 5570 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00246	e9 00 00 00 00	 jmp	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Pop_heap_hole_by_index<TaskLstFnStatus *,TaskLstFnStatus,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<Buffer * *,Buffer * *>, COMDAT

; 4153 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8

; 4154 :     auto _FirstPtr              = _To_address(_First);
; 4155 :     auto _LastPtr               = _To_address(_Last);
; 4156 :     auto _DestPtr               = _To_address(_Dest);
; 4157 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4158 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4159 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00010	48 2b d9	 sub	 rbx, rcx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 4162 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4163 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]

; 4164 :     } else {
; 4165 :         return _Dest + (_LastPtr - _FirstPtr);
; 4166 :     }
; 4167 : }

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Copy_memmove@PEAPEAVBuffer@@PEAPEAV1@@std@@YAPEAPEAVBuffer@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<Buffer * *,Buffer * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z PROC ; std::_Copy_unchecked<recordedMacroStep *,recordedMacroStep *>, COMDAT

; 4179 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN24:
  00000	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b f0	 mov	 rsi, r8
  0000d	48 8b ea	 mov	 rbp, rdx

; 4191 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00010	48 3b ca	 cmp	 rcx, rdx
  00013	74 73		 je	 SHORT $LN22@Copy_unche
  00015	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0001a	48 8d 59 28	 lea	 rbx, QWORD PTR [rcx+40]
  0001e	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
  00023	49 8d 78 18	 lea	 rdi, QWORD PTR [r8+24]
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@Copy_unche:
  00030	8b 43 d8	 mov	 eax, DWORD PTR [rbx-40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3077 :         if (this != _STD addressof(_Right)) {

  00033	48 8d 53 f0	 lea	 rdx, QWORD PTR [rbx-16]
  00037	89 06		 mov	 DWORD PTR [rsi], eax
  00039	48 8b 43 e0	 mov	 rax, QWORD PTR [rbx-32]
  0003d	48 89 47 f0	 mov	 QWORD PTR [rdi-16], rax
  00041	48 8b 43 e8	 mov	 rax, QWORD PTR [rbx-24]
  00045	48 89 47 f8	 mov	 QWORD PTR [rdi-8], rax
  00049	48 3b fa	 cmp	 rdi, rdx
  0004c	74 15		 je	 SHORT $LN9@Copy_unche

; 2319 :         return _BUF_SIZE <= _Myres;

  0004e	48 83 7b 08 08	 cmp	 QWORD PTR [rbx+8], 8

; 2306 :         if (_Large_string_engaged()) {

  00053	72 03		 jb	 SHORT $LN14@Copy_unche

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00055	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN14@Copy_unche:

; 3035 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00058	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN9@Copy_unche:
  00063	8b 43 10	 mov	 eax, DWORD PTR [rbx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4191 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00066	48 83 c6 40	 add	 rsi, 64			; 00000040H
  0006a	48 83 c3 40	 add	 rbx, 64			; 00000040H
  0006e	89 47 20	 mov	 DWORD PTR [rdi+32], eax
  00071	48 83 c7 40	 add	 rdi, 64			; 00000040H
  00075	48 8d 43 d8	 lea	 rax, QWORD PTR [rbx-40]
  00079	48 3b c5	 cmp	 rax, rbp
  0007c	75 b2		 jne	 SHORT $LL4@Copy_unche

; 4192 :         *_Dest = *_First;
; 4193 :     }
; 4194 : 
; 4195 :     return _Dest;

  0007e	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
  00083	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN22@Copy_unche:

; 4196 : }

  00088	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0008d	48 8b c6	 mov	 rax, rsi
  00090	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00094	5e		 pop	 rsi
  00095	c3		 ret	 0
??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z ENDP ; std::_Copy_unchecked<recordedMacroStep *,recordedMacroStep *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >, COMDAT

; 1605 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN24:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1606 :         _Destroy_range(_First, _Last, _Al);

  0000a	48 8b 79 08	 mov	 rdi, QWORD PTR [rcx+8]
  0000e	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00011	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx

; 949  :         for (; _First != _Last; ++_First) {

  00016	48 3b df	 cmp	 rbx, rdi
  00019	74 1c		 je	 SHORT $LN5@Uninitiali
  0001b	0f 1f 44 00 00	 npad	 5
$LL6@Uninitiali:
  00020	48 8d 4b 18	 lea	 rcx, QWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00024	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00029	48 83 c3 40	 add	 rbx, 64			; 00000040H
  0002d	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00032	48 3b df	 cmp	 rbx, rdi
  00035	75 e9		 jne	 SHORT $LL6@Uninitiali
$LN5@Uninitiali:

; 1607 :     }

  00037	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >, COMDAT

; 1605 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN24:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1606 :         _Destroy_range(_First, _Last, _Al);

  0000a	48 8b 79 08	 mov	 rdi, QWORD PTR [rcx+8]
  0000e	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00011	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx

; 949  :         for (; _First != _Last; ++_First) {

  00016	48 3b df	 cmp	 rbx, rdi
  00019	74 1b		 je	 SHORT $LN5@Uninitiali
  0001b	0f 1f 44 00 00	 npad	 5
$LL6@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00020	48 8b cb	 mov	 rcx, rbx
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00028	48 83 c3 30	 add	 rbx, 48			; 00000030H
  0002c	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00031	48 3b df	 cmp	 rbx, rdi
  00034	75 ea		 jne	 SHORT $LL6@Uninitiali
$LN5@Uninitiali:

; 1607 :     }

  00036	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >, COMDAT

; 1605 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN24:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1606 :         _Destroy_range(_First, _Last, _Al);

  0000a	48 8b 79 08	 mov	 rdi, QWORD PTR [rcx+8]
  0000e	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00011	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx

; 949  :         for (; _First != _Last; ++_First) {

  00016	48 3b df	 cmp	 rbx, rdi
  00019	74 1c		 je	 SHORT $LN5@Uninitiali
  0001b	0f 1f 44 00 00	 npad	 5
$LL6@Uninitiali:
  00020	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00024	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00029	48 83 c3 28	 add	 rbx, 40			; 00000028H
  0002d	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00032	48 3b df	 cmp	 rbx, rdi
  00035	75 e9		 jne	 SHORT $LL6@Uninitiali
$LN5@Uninitiali:

; 1607 :     }

  00037	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z PROC ; std::_Copy_memmove<tTbData * *,tTbData * *>, COMDAT

; 4153 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8

; 4154 :     auto _FirstPtr              = _To_address(_First);
; 4155 :     auto _LastPtr               = _To_address(_Last);
; 4156 :     auto _DestPtr               = _To_address(_Dest);
; 4157 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4158 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4159 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00010	48 2b d9	 sub	 rbx, rcx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 4162 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4163 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]

; 4164 :     } else {
; 4165 :         return _Dest + (_LastPtr - _FirstPtr);
; 4166 :     }
; 4167 : }

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Copy_memmove@PEAPEAUtTbData@@PEAPEAU1@@std@@YAPEAPEAUtTbData@@PEAPEAU1@00@Z ENDP ; std::_Copy_memmove<tTbData * *,tTbData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<DockingCont * *,DockingCont * *>, COMDAT

; 4153 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8

; 4154 :     auto _FirstPtr              = _To_address(_First);
; 4155 :     auto _LastPtr               = _To_address(_Last);
; 4156 :     auto _DestPtr               = _To_address(_Dest);
; 4157 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4158 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4159 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00010	48 2b d9	 sub	 rbx, rcx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 4162 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4163 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]

; 4164 :     } else {
; 4165 :         return _Dest + (_LastPtr - _FirstPtr);
; 4166 :     }
; 4167 : }

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Copy_memmove@PEAPEAVDockingCont@@PEAPEAV1@@std@@YAPEAPEAVDockingCont@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<DockingCont * *,DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 7295 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

$LN707:
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 8d ac 24 60
	ff ff ff	 lea	 rbp, QWORD PTR [rsp-160]
  00018	48 81 ec a0 01
	00 00		 sub	 rsp, 416		; 000001a0H
  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00026	48 33 c4	 xor	 rax, rsp
  00029	48 89 85 90 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp-256], rax
  00030	49 8b d9	 mov	 rbx, r9
  00033	4c 89 44 24 40	 mov	 QWORD PTR _Last$GSCopy$1$[rsp], r8
  00038	4c 8b d2	 mov	 r10, rdx
  0003b	48 89 54 24 48	 mov	 QWORD PTR _First$GSCopy$1$[rsp], rdx
  00040	48 89 4c 24 70	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rsp], rcx

; 7296 :     // partition [_First, _Last)
; 7297 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00045	49 8b c8	 mov	 rcx, r8
  00048	48 2b ca	 sub	 rcx, rdx
  0004b	49 b9 25 49 92
	24 49 92 24 49	 mov	 r9, 5270498306774157605	; 4924924924924925H
  00055	49 8b c1	 mov	 rax, r9
  00058	48 f7 e9	 imul	 rcx
  0005b	48 c1 fa 04	 sar	 rdx, 4
  0005f	48 8b c2	 mov	 rax, rdx
  00062	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00066	48 03 d0	 add	 rdx, rax
  00069	48 d1 fa	 sar	 rdx, 1
  0006c	48 6b fa 38	 imul	 rdi, rdx, 56		; 00000038H
  00070	49 03 fa	 add	 rdi, r10

; 7298 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00073	4d 8d 68 c8	 lea	 r13, QWORD PTR [r8-56]

; 7281 :     const _Diff _Count = _Last - _First;

  00077	49 8b cd	 mov	 rcx, r13
  0007a	49 2b ca	 sub	 rcx, r10
  0007d	49 8b c1	 mov	 rax, r9
  00080	48 f7 e9	 imul	 rcx
  00083	48 c1 fa 04	 sar	 rdx, 4
  00087	48 8b c2	 mov	 rax, rdx
  0008a	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  0008e	48 03 d0	 add	 rdx, rax

; 7282 :     if (40 < _Count) { // Tukey's ninther

  00091	4c 8b cb	 mov	 r9, rbx
  00094	49 8b ca	 mov	 rcx, r10
  00097	48 83 fa 28	 cmp	 rdx, 40			; 00000028H
  0009b	7e 5a		 jle	 SHORT $LN35@Partition_

; 7283 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0009d	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  000a1	48 c1 f8 03	 sar	 rax, 3

; 7284 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7285 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  000a5	4c 6b f8 70	 imul	 r15, rax, 112		; 00000070H
  000a9	4c 6b f0 38	 imul	 r14, rax, 56		; 00000038H
  000ad	4f 8d 24 16	 lea	 r12, QWORD PTR [r14+r10]
  000b1	4f 8d 04 17	 lea	 r8, QWORD PTR [r15+r10]
  000b5	49 8b d4	 mov	 rdx, r12
  000b8	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7286 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  000bd	4d 8d 04 3e	 lea	 r8, QWORD PTR [r14+rdi]
  000c1	48 8b cf	 mov	 rcx, rdi
  000c4	49 2b ce	 sub	 rcx, r14
  000c7	4c 8b cb	 mov	 r9, rbx
  000ca	48 8b d7	 mov	 rdx, rdi
  000cd	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7287 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  000d2	49 8b f5	 mov	 rsi, r13
  000d5	49 2b f6	 sub	 rsi, r14
  000d8	49 8b cd	 mov	 rcx, r13
  000db	49 2b cf	 sub	 rcx, r15
  000de	4c 8b cb	 mov	 r9, rbx
  000e1	4d 8b c5	 mov	 r8, r13
  000e4	48 8b d6	 mov	 rdx, rsi
  000e7	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7288 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  000ec	4c 8b cb	 mov	 r9, rbx
  000ef	4c 8b c6	 mov	 r8, rsi
  000f2	49 8b cc	 mov	 rcx, r12

; 7289 :     } else {

  000f5	eb 03		 jmp	 SHORT $LN703@Partition_
$LN35@Partition_:

; 7290 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  000f7	4d 8b c5	 mov	 r8, r13
$LN703@Partition_:

; 7299 :     _RanIt _Pfirst = _Mid;
; 7300 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000fa	48 8b d7	 mov	 rdx, rdi
  000fd	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@00U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Med3_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
  00102	4c 8d 67 38	 lea	 r12, QWORD PTR [rdi+56]

; 7303 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00106	4c 8b 6c 24 48	 mov	 r13, QWORD PTR _First$GSCopy$1$[rsp]
  0010b	4c 3b ef	 cmp	 r13, rdi
  0010e	0f 83 9a 00 00
	00		 jae	 $LN664@Partition_
  00114	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL2@Partition_:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00120	4c 8d 7f c8	 lea	 r15, QWORD PTR [rdi-56]
  00124	48 63 57 cc	 movsxd	 rdx, DWORD PTR [rdi-52]
  00128	49 63 0f	 movsxd	 rcx, DWORD PTR [r15]
  0012b	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0012f	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00134	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00137	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  0013b	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  0013e	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00142	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00147	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  0014a	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0014f	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00154	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  0015a	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7303 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00161	7f 4b		 jg	 SHORT $LN664@Partition_
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00163	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  00167	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  0016a	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0016e	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00173	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00176	48 63 57 cc	 movsxd	 rdx, DWORD PTR [rdi-52]
  0017a	49 63 0f	 movsxd	 rcx, DWORD PTR [r15]
  0017d	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00181	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00186	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00189	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0018e	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00193	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  00199	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7303 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001a0	7f 0c		 jg	 SHORT $LN664@Partition_

; 7304 :         --_Pfirst;

  001a2	49 8b ff	 mov	 rdi, r15

; 7303 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001a5	4d 3b ef	 cmp	 r13, r15
  001a8	0f 82 72 ff ff
	ff		 jb	 $LL2@Partition_
$LN664@Partition_:

; 7307 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  001ae	4c 8b 7c 24 40	 mov	 r15, QWORD PTR _Last$GSCopy$1$[rsp]
  001b3	4d 3b e7	 cmp	 r12, r15
  001b6	0f 83 93 00 00
	00		 jae	 $LN5@Partition_
  001bc	0f 1f 40 00	 npad	 4
$LL4@Partition_:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  001c0	49 63 54 24 04	 movsxd	 rdx, DWORD PTR [r12+4]
  001c5	49 63 0c 24	 movsxd	 rcx, DWORD PTR [r12]
  001c9	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  001cd	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  001d2	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  001d5	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  001d9	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  001dc	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  001e0	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  001e5	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  001e8	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  001ed	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  001f2	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  001f8	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7307 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  001ff	7f 4e		 jg	 SHORT $LN5@Partition_
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00201	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  00205	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  00208	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0020c	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00211	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00214	49 63 54 24 04	 movsxd	 rdx, DWORD PTR [r12+4]
  00219	49 63 0c 24	 movsxd	 rcx, DWORD PTR [r12]
  0021d	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00221	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00226	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00229	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0022e	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00233	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  00239	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7307 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00240	7f 0d		 jg	 SHORT $LN5@Partition_

; 7308 :         ++_Plast;

  00242	49 83 c4 38	 add	 r12, 56			; 00000038H

; 7307 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00246	4d 3b e7	 cmp	 r12, r15
  00249	0f 82 71 ff ff
	ff		 jb	 $LL4@Partition_
$LN5@Partition_:

; 7309 :     }
; 7310 : 
; 7311 :     _RanIt _Gfirst = _Plast;

  0024f	4d 8b ec	 mov	 r13, r12

; 7312 :     _RanIt _Glast  = _Pfirst;

  00252	48 8b cf	 mov	 rcx, rdi
  00255	48 89 4c 24 30	 mov	 QWORD PTR _Glast$1$[rsp], rcx
  0025a	66 0f 1f 44 00
	00		 npad	 6
$LL6@Partition_:

; 7315 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00260	4d 3b ef	 cmp	 r13, r15
  00263	0f 83 e0 01 00
	00		 jae	 $LN668@Partition_
  00269	4d 8d 7d 08	 lea	 r15, QWORD PTR [r13+8]
  0026d	49 8d 44 24 08	 lea	 rax, QWORD PTR [r12+8]
  00272	48 89 44 24 28	 mov	 QWORD PTR tv4832[rsp], rax
  00277	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL11@Partition_:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00280	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  00284	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  00287	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0028b	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00290	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00293	49 63 57 fc	 movsxd	 rdx, DWORD PTR [r15-4]
  00297	49 63 4d 00	 movsxd	 rcx, DWORD PTR [r13]
  0029b	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0029f	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  002a4	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  002a7	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  002ac	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  002b1	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  002b7	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7316 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  002be	0f 8f 6d 01 00
	00		 jg	 $LN9@Partition_
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  002c4	49 63 57 fc	 movsxd	 rdx, DWORD PTR [r15-4]
  002c8	49 63 4d 00	 movsxd	 rcx, DWORD PTR [r13]
  002cc	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  002d0	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  002d5	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  002d8	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  002dc	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  002df	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  002e3	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  002e8	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  002eb	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  002f0	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  002f5	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  002fb	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7318 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  00302	0f 8f 3c 01 00
	00		 jg	 $LN699@Partition_

; 7319 :                 break;
; 7320 :             } else if (_Plast != _Gfirst) {

  00308	4d 3b e5	 cmp	 r12, r13
  0030b	0f 84 16 01 00
	00		 je	 $LN19@Partition_
  00311	45 8b 34 24	 mov	 r14d, DWORD PTR [r12]
  00315	44 89 74 24 78	 mov	 DWORD PTR _Tmp$1[rsp], r14d
  0031a	41 8b 74 24 04	 mov	 esi, DWORD PTR [r12+4]
  0031f	89 74 24 7c	 mov	 DWORD PTR _Tmp$1[rsp+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00323	33 c9		 xor	 ecx, ecx
  00325	48 89 4d 80	 mov	 QWORD PTR _Tmp$1[rbp-248], rcx

; 2355 :     size_type _Mysize = 0; // current length of string

  00329	48 89 4d 90	 mov	 QWORD PTR _Tmp$1[rbp-232], rcx

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0032d	48 89 4d 98	 mov	 QWORD PTR _Tmp$1[rbp-224], rcx

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00331	48 8b 44 24 28	 mov	 rax, QWORD PTR tv4832[rsp]
  00336	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00339	0f 11 44 24 50	 movups	 XMMWORD PTR _Tmp$7$[rsp], xmm0
  0033e	0f 11 45 80	 movups	 XMMWORD PTR _Tmp$1[rbp-248], xmm0
  00342	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [rax+16]
  00346	0f 11 44 24 60	 movups	 XMMWORD PTR _Tmp$8$[rsp], xmm0
  0034b	0f 11 45 90	 movups	 XMMWORD PTR _Tmp$1[rbp-232], xmm0

; 4596 :         _My_data._Mysize = 0;

  0034f	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00353	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0035b	66 89 08	 mov	 WORD PTR [rax], cx
  0035e	41 8b 44 24 28	 mov	 eax, DWORD PTR [r12+40]
  00363	89 44 24 20	 mov	 DWORD PTR _Tmp$4$[rsp], eax
  00367	89 45 a0	 mov	 DWORD PTR _Tmp$1[rbp-216], eax
  0036a	49 8b 44 24 30	 mov	 rax, QWORD PTR [r12+48]
  0036f	48 89 44 24 38	 mov	 QWORD PTR _Tmp$3$[rsp], rax
  00374	48 89 45 a8	 mov	 QWORD PTR _Tmp$1[rbp-208], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 105  :     _Left    = _STD move(_Right);

  00378	49 8b d5	 mov	 rdx, r13
  0037b	49 8b cc	 mov	 rcx, r12
  0037e	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
  00383	45 89 75 00	 mov	 DWORD PTR [r13], r14d
  00387	41 89 77 fc	 mov	 DWORD PTR [r15-4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  0038b	48 8d 45 80	 lea	 rax, QWORD PTR _Tmp$1[rbp-248]
  0038f	4c 3b f8	 cmp	 r15, rax
  00392	74 30		 je	 SHORT $LN692@Partition_

; 2776 :         _Tidy_deallocate();

  00394	49 8b cf	 mov	 rcx, r15
  00397	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0039c	0f 10 44 24 50	 movups	 xmm0, XMMWORD PTR _Tmp$7$[rsp]
  003a1	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0
  003a5	0f 10 4c 24 60	 movups	 xmm1, XMMWORD PTR _Tmp$8$[rsp]
  003aa	41 0f 11 4f 10	 movups	 XMMWORD PTR [r15+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  003af	33 f6		 xor	 esi, esi
  003b1	48 89 75 90	 mov	 QWORD PTR _Tmp$1[rbp-232], rsi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  003b5	b8 07 00 00 00	 mov	 eax, 7
  003ba	48 89 45 98	 mov	 QWORD PTR _Tmp$1[rbp-224], rax

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003be	66 89 75 80	 mov	 WORD PTR _Tmp$1[rbp-248], si

; 2850 :         if (this != _STD addressof(_Right)) {

  003c2	eb 06		 jmp	 SHORT $LN99@Partition_
$LN692@Partition_:
  003c4	48 8b 45 98	 mov	 rax, QWORD PTR _Tmp$1[rbp-224]
  003c8	33 f6		 xor	 esi, esi
$LN99@Partition_:
  003ca	8b 4c 24 20	 mov	 ecx, DWORD PTR _Tmp$4$[rsp]
  003ce	41 89 4f 20	 mov	 DWORD PTR [r15+32], ecx
  003d2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tmp$3$[rsp]
  003d7	49 89 4f 28	 mov	 QWORD PTR [r15+40], rcx

; 2319 :         return _BUF_SIZE <= _Myres;

  003db	48 83 f8 08	 cmp	 rax, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003df	72 36		 jb	 SHORT $LN138@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003e1	48 8d 14 45 02
	00 00 00	 lea	 rdx, QWORD PTR [rax*2+2]
  003e9	48 8b 4d 80	 mov	 rcx, QWORD PTR _Tmp$1[rbp-248]
  003ed	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003f0	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  003f7	72 19		 jb	 SHORT $LN137@Partition_

; 155  :     _Bytes += _Non_user_size;

  003f9	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003fd	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00401	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00404	48 83 c0 f8	 add	 rax, -8
  00408	48 83 f8 1f	 cmp	 rax, 31
  0040c	0f 87 3a 08 00
	00		 ja	 $LN652@Partition_
$LN137@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00412	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN138@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00417	48 89 75 90	 mov	 QWORD PTR _Tmp$1[rbp-232], rsi

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0041b	48 c7 45 98 07
	00 00 00	 mov	 QWORD PTR _Tmp$1[rbp-224], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00423	66 89 75 80	 mov	 WORD PTR _Tmp$1[rbp-248], si
$LN19@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7315 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00427	49 83 c4 38	 add	 r12, 56			; 00000038H
  0042b	48 83 44 24 28
	38		 add	 QWORD PTR tv4832[rsp], 56 ; 00000038H
$LN9@Partition_:
  00431	49 83 c5 38	 add	 r13, 56			; 00000038H
  00435	49 83 c7 38	 add	 r15, 56			; 00000038H
  00439	4c 3b 6c 24 40	 cmp	 r13, QWORD PTR _Last$GSCopy$1$[rsp]
  0043e	0f 82 3c fe ff
	ff		 jb	 $LL11@Partition_
$LN699@Partition_:

; 7328 :         for (; _First < _Glast; --_Glast) {

  00444	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
$LN668@Partition_:
  00449	48 8b 44 24 48	 mov	 rax, QWORD PTR _First$GSCopy$1$[rsp]
  0044e	48 3b c8	 cmp	 rcx, rax
  00451	0f 86 dc 01 00
	00		 jbe	 $LN704@Partition_
  00457	4c 8d 79 d0	 lea	 r15, QWORD PTR [rcx-48]
  0045b	0f 1f 44 00 00	 npad	 5
$LL14@Partition_:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00460	49 63 57 fc	 movsxd	 rdx, DWORD PTR [r15-4]
  00464	49 63 4f f8	 movsxd	 rcx, DWORD PTR [r15-8]
  00468	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0046c	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00471	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00474	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  00478	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  0047b	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0047f	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00484	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00487	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0048c	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00491	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  00497	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7329 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  0049e	0f 8f 60 01 00
	00		 jg	 $LN12@Partition_
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  004a4	48 63 57 04	 movsxd	 rdx, DWORD PTR [rdi+4]
  004a8	48 63 0f	 movsxd	 rcx, DWORD PTR [rdi]
  004ab	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  004af	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  004b4	4c 8b f0	 mov	 r14, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  004b7	49 63 57 fc	 movsxd	 rdx, DWORD PTR [r15-4]
  004bb	49 63 4f f8	 movsxd	 rcx, DWORD PTR [r15-8]
  004bf	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  004c3	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  004c8	48 8b f0	 mov	 rsi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  004cb	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  004d0	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  004d5	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [rsi+220]
  004db	41 39 86 dc 00
	00 00		 cmp	 DWORD PTR [r14+220], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7331 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  004e2	0f 8f 3e 01 00
	00		 jg	 $LN698@Partition_

; 7332 :                 break;
; 7333 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  004e8	48 83 ef 38	 sub	 rdi, 56			; 00000038H
  004ec	49 8d 47 f8	 lea	 rax, QWORD PTR [r15-8]
  004f0	48 3b f8	 cmp	 rdi, rax
  004f3	0f 84 0b 01 00
	00		 je	 $LN12@Partition_
  004f9	44 8b 37	 mov	 r14d, DWORD PTR [rdi]
  004fc	44 89 75 b0	 mov	 DWORD PTR _Tmp$2[rbp-256], r14d
  00500	8b 77 04	 mov	 esi, DWORD PTR [rdi+4]
  00503	89 75 b4	 mov	 DWORD PTR _Tmp$2[rbp-252], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00506	33 c9		 xor	 ecx, ecx
  00508	48 89 4d b8	 mov	 QWORD PTR _Tmp$2[rbp-248], rcx

; 2355 :     size_type _Mysize = 0; // current length of string

  0050c	48 89 4d c8	 mov	 QWORD PTR _Tmp$2[rbp-232], rcx

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00510	48 89 4d d0	 mov	 QWORD PTR _Tmp$2[rbp-224], rcx

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00514	0f 10 47 08	 movups	 xmm0, XMMWORD PTR [rdi+8]
  00518	0f 11 44 24 60	 movups	 XMMWORD PTR _Tmp$7$[rsp], xmm0
  0051d	0f 11 45 b8	 movups	 XMMWORD PTR _Tmp$2[rbp-248], xmm0
  00521	0f 10 47 18	 movups	 xmm0, XMMWORD PTR [rdi+24]
  00525	0f 11 44 24 50	 movups	 XMMWORD PTR _Tmp$8$[rsp], xmm0
  0052a	0f 11 45 c8	 movups	 XMMWORD PTR _Tmp$2[rbp-232], xmm0

; 4596 :         _My_data._Mysize = 0;

  0052e	48 89 4f 18	 mov	 QWORD PTR [rdi+24], rcx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00532	48 c7 47 20 07
	00 00 00	 mov	 QWORD PTR [rdi+32], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0053a	66 89 4f 08	 mov	 WORD PTR [rdi+8], cx
  0053e	8b 4f 28	 mov	 ecx, DWORD PTR [rdi+40]
  00541	89 4c 24 20	 mov	 DWORD PTR _Tmp$3$[rsp], ecx
  00545	89 4d d8	 mov	 DWORD PTR _Tmp$2[rbp-216], ecx
  00548	48 8b 4f 30	 mov	 rcx, QWORD PTR [rdi+48]
  0054c	48 89 4c 24 38	 mov	 QWORD PTR _Tmp$4$[rsp], rcx
  00551	48 89 4d e0	 mov	 QWORD PTR _Tmp$2[rbp-208], rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 105  :     _Left    = _STD move(_Right);

  00555	48 8b d0	 mov	 rdx, rax
  00558	48 8b cf	 mov	 rcx, rdi
  0055b	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
  00560	45 89 77 f8	 mov	 DWORD PTR [r15-8], r14d
  00564	41 89 77 fc	 mov	 DWORD PTR [r15-4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  00568	48 8d 45 b8	 lea	 rax, QWORD PTR _Tmp$2[rbp-248]
  0056c	4c 3b f8	 cmp	 r15, rax
  0056f	74 30		 je	 SHORT $LN693@Partition_

; 2776 :         _Tidy_deallocate();

  00571	49 8b cf	 mov	 rcx, r15
  00574	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00579	0f 10 44 24 60	 movups	 xmm0, XMMWORD PTR _Tmp$7$[rsp]
  0057e	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0
  00582	0f 10 4c 24 50	 movups	 xmm1, XMMWORD PTR _Tmp$8$[rsp]
  00587	41 0f 11 4f 10	 movups	 XMMWORD PTR [r15+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  0058c	33 f6		 xor	 esi, esi
  0058e	48 89 75 c8	 mov	 QWORD PTR _Tmp$2[rbp-232], rsi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00592	ba 07 00 00 00	 mov	 edx, 7
  00597	48 89 55 d0	 mov	 QWORD PTR _Tmp$2[rbp-224], rdx

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0059b	66 89 75 b8	 mov	 WORD PTR _Tmp$2[rbp-248], si

; 2850 :         if (this != _STD addressof(_Right)) {

  0059f	eb 06		 jmp	 SHORT $LN191@Partition_
$LN693@Partition_:
  005a1	48 8b 55 d0	 mov	 rdx, QWORD PTR _Tmp$2[rbp-224]
  005a5	33 f6		 xor	 esi, esi
$LN191@Partition_:
  005a7	8b 44 24 20	 mov	 eax, DWORD PTR _Tmp$3$[rsp]
  005ab	41 89 47 20	 mov	 DWORD PTR [r15+32], eax
  005af	48 8b 44 24 38	 mov	 rax, QWORD PTR _Tmp$4$[rsp]
  005b4	49 89 47 28	 mov	 QWORD PTR [r15+40], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  005b8	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005bc	72 36		 jb	 SHORT $LN230@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005be	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  005c6	48 8b 4d b8	 mov	 rcx, QWORD PTR _Tmp$2[rbp-248]
  005ca	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  005cd	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  005d4	72 19		 jb	 SHORT $LN229@Partition_

; 155  :     _Bytes += _Non_user_size;

  005d6	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  005da	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  005de	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005e1	48 83 c0 f8	 add	 rax, -8
  005e5	48 83 f8 1f	 cmp	 rax, 31
  005e9	0f 87 5d 06 00
	00		 ja	 $LN652@Partition_
$LN229@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  005ef	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN230@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  005f4	48 89 75 c8	 mov	 QWORD PTR _Tmp$2[rbp-232], rsi

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005f8	48 c7 45 d0 07
	00 00 00	 mov	 QWORD PTR _Tmp$2[rbp-224], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00600	66 89 75 b8	 mov	 WORD PTR _Tmp$2[rbp-248], si
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7328 :         for (; _First < _Glast; --_Glast) {

  00604	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  00609	48 83 e9 38	 sub	 rcx, 56			; 00000038H
  0060d	48 89 4c 24 30	 mov	 QWORD PTR _Glast$1$[rsp], rcx
  00612	49 83 ef 38	 sub	 r15, 56			; 00000038H
  00616	48 8b 44 24 48	 mov	 rax, QWORD PTR _First$GSCopy$1$[rsp]
  0061b	48 3b c1	 cmp	 rax, rcx
  0061e	0f 82 3c fe ff
	ff		 jb	 $LL14@Partition_

; 7331 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00624	eb 0a		 jmp	 SHORT $LN669@Partition_
$LN698@Partition_:
  00626	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  0062b	48 8b 44 24 48	 mov	 rax, QWORD PTR _First$GSCopy$1$[rsp]
$LN669@Partition_:

; 7334 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 7335 :             }
; 7336 :         }
; 7337 : 
; 7338 :         if (_Glast == _First && _Gfirst == _Last) {

  00630	48 3b c8	 cmp	 rcx, rax
$LN704@Partition_:
  00633	0f 85 ff 03 00
	00		 jne	 $LN27@Partition_
  00639	4c 3b 6c 24 40	 cmp	 r13, QWORD PTR _Last$GSCopy$1$[rsp]
  0063e	0f 84 cc 05 00
	00		 je	 $LN670@Partition_

; 7339 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);
; 7340 :         }
; 7341 : 
; 7342 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 7343 :             if (_Plast != _Gfirst) {

  00644	45 33 c0	 xor	 r8d, r8d
  00647	4d 3b e5	 cmp	 r12, r13
  0064a	0f 84 ea 01 00
	00		 je	 $LN391@Partition_
  00650	44 8b 3f	 mov	 r15d, DWORD PTR [rdi]
  00653	44 89 7d e8	 mov	 DWORD PTR _Tmp$3[rbp-256], r15d
  00657	8b 4f 04	 mov	 ecx, DWORD PTR [rdi+4]
  0065a	89 4c 24 20	 mov	 DWORD PTR _Tmp$2$[rsp], ecx
  0065e	89 4d ec	 mov	 DWORD PTR _Tmp$3[rbp-252], ecx
  00661	4c 8d 77 08	 lea	 r14, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00665	4c 89 45 f0	 mov	 QWORD PTR _Tmp$3[rbp-248], r8

; 2355 :     size_type _Mysize = 0; // current length of string

  00669	4c 89 45 00	 mov	 QWORD PTR _Tmp$3[rbp-232], r8

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0066d	4c 89 45 08	 mov	 QWORD PTR _Tmp$3[rbp-224], r8

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00671	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  00675	0f 11 44 24 60	 movups	 XMMWORD PTR _Tmp$7$[rsp], xmm0
  0067a	0f 11 45 f0	 movups	 XMMWORD PTR _Tmp$3[rbp-248], xmm0
  0067e	41 0f 10 46 10	 movups	 xmm0, XMMWORD PTR [r14+16]
  00683	0f 11 44 24 50	 movups	 XMMWORD PTR _Tmp$8$[rsp], xmm0
  00688	0f 11 45 00	 movups	 XMMWORD PTR _Tmp$3[rbp-232], xmm0

; 4596 :         _My_data._Mysize = 0;

  0068c	4d 89 46 10	 mov	 QWORD PTR [r14+16], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00690	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00698	66 45 89 06	 mov	 WORD PTR [r14], r8w
  0069c	8b 47 28	 mov	 eax, DWORD PTR [rdi+40]
  0069f	89 44 24 28	 mov	 DWORD PTR _Tmp$3$[rsp], eax
  006a3	89 45 10	 mov	 DWORD PTR _Tmp$3[rbp-216], eax
  006a6	48 8b 47 30	 mov	 rax, QWORD PTR [rdi+48]
  006aa	48 89 44 24 38	 mov	 QWORD PTR _Tmp$4$[rsp], rax
  006af	48 89 45 18	 mov	 QWORD PTR _Tmp$3[rbp-208], rax
  006b3	41 8b 04 24	 mov	 eax, DWORD PTR [r12]
  006b7	89 07		 mov	 DWORD PTR [rdi], eax
  006b9	41 8b 44 24 04	 mov	 eax, DWORD PTR [r12+4]
  006be	89 47 04	 mov	 DWORD PTR [rdi+4], eax
  006c1	49 8d 74 24 08	 lea	 rsi, QWORD PTR [r12+8]

; 2850 :         if (this != _STD addressof(_Right)) {

  006c6	4c 3b f6	 cmp	 r14, rsi
  006c9	74 76		 je	 SHORT $LN687@Partition_

; 2319 :         return _BUF_SIZE <= _Myres;

  006cb	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  006cf	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006d3	72 3c		 jb	 SHORT $LN296@Partition_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  006d5	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006d8	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006e0	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  006e7	72 1c		 jb	 SHORT $LN295@Partition_

; 155  :     _Bytes += _Non_user_size;

  006e9	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006ed	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  006f1	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006f4	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  006f8	48 83 f8 1f	 cmp	 rax, 31
  006fc	0f 87 50 05 00
	00		 ja	 $LN340@Partition_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00702	49 8b c8	 mov	 rcx, r8
$LN295@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00705	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0070a	8b 4c 24 20	 mov	 ecx, DWORD PTR _Tmp$2$[rsp]
  0070e	45 33 c0	 xor	 r8d, r8d
$LN296@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00711	4d 89 46 10	 mov	 QWORD PTR [r14+16], r8

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00715	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0071d	66 45 89 06	 mov	 WORD PTR [r14], r8w

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00721	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  00724	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
  00728	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  0072c	41 0f 11 4e 10	 movups	 XMMWORD PTR [r14+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00731	4c 89 46 10	 mov	 QWORD PTR [rsi+16], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00735	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0073d	66 44 89 06	 mov	 WORD PTR [rsi], r8w
$LN687@Partition_:
  00741	41 8b 44 24 28	 mov	 eax, DWORD PTR [r12+40]
  00746	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  00749	49 8b 44 24 30	 mov	 rax, QWORD PTR [r12+48]
  0074e	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax
  00752	45 89 3c 24	 mov	 DWORD PTR [r12], r15d
  00756	41 89 4c 24 04	 mov	 DWORD PTR [r12+4], ecx

; 2850 :         if (this != _STD addressof(_Right)) {

  0075b	48 8d 45 f0	 lea	 rax, QWORD PTR _Tmp$3[rbp-248]
  0075f	48 3b f0	 cmp	 rsi, rax
  00762	74 6f		 je	 SHORT $LN694@Partition_

; 2319 :         return _BUF_SIZE <= _Myres;

  00764	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  00768	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0076c	72 38		 jb	 SHORT $LN344@Partition_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0076e	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00771	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00779	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00780	72 1c		 jb	 SHORT $LN343@Partition_

; 155  :     _Bytes += _Non_user_size;

  00782	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00786	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0078a	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0078d	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00791	48 83 f8 1f	 cmp	 rax, 31
  00795	0f 87 b7 04 00
	00		 ja	 $LN340@Partition_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0079b	49 8b c8	 mov	 rcx, r8
$LN343@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0079e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  007a3	45 33 c0	 xor	 r8d, r8d
$LN344@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  007a6	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  007ae	0f 10 44 24 60	 movups	 xmm0, XMMWORD PTR _Tmp$7$[rsp]
  007b3	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  007b6	0f 10 4c 24 50	 movups	 xmm1, XMMWORD PTR _Tmp$8$[rsp]
  007bb	0f 11 4e 10	 movups	 XMMWORD PTR [rsi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  007bf	4c 89 45 00	 mov	 QWORD PTR _Tmp$3[rbp-232], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  007c3	ba 07 00 00 00	 mov	 edx, 7
  007c8	48 89 55 08	 mov	 QWORD PTR _Tmp$3[rbp-224], rdx

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  007cc	66 44 89 45 f0	 mov	 WORD PTR _Tmp$3[rbp-248], r8w

; 2850 :         if (this != _STD addressof(_Right)) {

  007d1	eb 04		 jmp	 SHORT $LN348@Partition_
$LN694@Partition_:
  007d3	48 8b 55 08	 mov	 rdx, QWORD PTR _Tmp$3[rbp-224]
$LN348@Partition_:
  007d7	8b 44 24 28	 mov	 eax, DWORD PTR _Tmp$3$[rsp]
  007db	41 89 44 24 28	 mov	 DWORD PTR [r12+40], eax
  007e0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Tmp$4$[rsp]
  007e5	49 89 44 24 30	 mov	 QWORD PTR [r12+48], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  007ea	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007ee	72 39		 jb	 SHORT $LN389@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007f0	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  007f8	48 8b 4d f0	 mov	 rcx, QWORD PTR _Tmp$3[rbp-248]
  007fc	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007ff	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00806	72 19		 jb	 SHORT $LN388@Partition_

; 155  :     _Bytes += _Non_user_size;

  00808	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0080c	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00810	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00813	48 83 c0 f8	 add	 rax, -8
  00817	48 83 f8 1f	 cmp	 rax, 31
  0081b	0f 87 2b 04 00
	00		 ja	 $LN652@Partition_
$LN388@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00821	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00826	45 33 c0	 xor	 r8d, r8d
$LN389@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00829	4c 89 45 00	 mov	 QWORD PTR _Tmp$3[rbp-232], r8

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0082d	48 c7 45 08 07
	00 00 00	 mov	 QWORD PTR _Tmp$3[rbp-224], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00835	66 44 89 45 f0	 mov	 WORD PTR _Tmp$3[rbp-248], r8w
$LN391@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7347 :             ++_Plast;

  0083a	49 83 c4 38	 add	 r12, 56			; 00000038H
  0083e	44 8b 3f	 mov	 r15d, DWORD PTR [rdi]
  00841	44 89 7d 20	 mov	 DWORD PTR _Tmp$4[rbp-256], r15d
  00845	8b 4f 04	 mov	 ecx, DWORD PTR [rdi+4]
  00848	89 4c 24 28	 mov	 DWORD PTR _Tmp$2$[rsp], ecx
  0084c	89 4d 24	 mov	 DWORD PTR _Tmp$4[rbp-252], ecx
  0084f	4c 8d 77 08	 lea	 r14, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00853	4c 89 45 28	 mov	 QWORD PTR _Tmp$4[rbp-248], r8

; 2355 :     size_type _Mysize = 0; // current length of string

  00857	4c 89 45 38	 mov	 QWORD PTR _Tmp$4[rbp-232], r8

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0085b	4c 89 45 40	 mov	 QWORD PTR _Tmp$4[rbp-224], r8

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0085f	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  00863	0f 11 44 24 60	 movups	 XMMWORD PTR _Tmp$7$[rsp], xmm0
  00868	0f 11 45 28	 movups	 XMMWORD PTR _Tmp$4[rbp-248], xmm0
  0086c	41 0f 10 46 10	 movups	 xmm0, XMMWORD PTR [r14+16]
  00871	0f 11 44 24 50	 movups	 XMMWORD PTR _Tmp$8$[rsp], xmm0
  00876	0f 11 45 38	 movups	 XMMWORD PTR _Tmp$4[rbp-232], xmm0

; 4596 :         _My_data._Mysize = 0;

  0087a	4d 89 46 10	 mov	 QWORD PTR [r14+16], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0087e	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00886	66 45 89 06	 mov	 WORD PTR [r14], r8w
  0088a	8b 47 28	 mov	 eax, DWORD PTR [rdi+40]
  0088d	89 44 24 20	 mov	 DWORD PTR _Tmp$3$[rsp], eax
  00891	89 45 48	 mov	 DWORD PTR _Tmp$4[rbp-216], eax
  00894	48 8b 47 30	 mov	 rax, QWORD PTR [rdi+48]
  00898	48 89 44 24 38	 mov	 QWORD PTR _Tmp$4$[rsp], rax
  0089d	48 89 45 50	 mov	 QWORD PTR _Tmp$4[rbp-208], rax
  008a1	41 8b 45 00	 mov	 eax, DWORD PTR [r13]
  008a5	89 07		 mov	 DWORD PTR [rdi], eax
  008a7	41 8b 45 04	 mov	 eax, DWORD PTR [r13+4]
  008ab	89 47 04	 mov	 DWORD PTR [rdi+4], eax
  008ae	49 8d 75 08	 lea	 rsi, QWORD PTR [r13+8]

; 2850 :         if (this != _STD addressof(_Right)) {

  008b2	4c 3b f6	 cmp	 r14, rsi
  008b5	74 76		 je	 SHORT $LN688@Partition_

; 2319 :         return _BUF_SIZE <= _Myres;

  008b7	49 8b 56 18	 mov	 rdx, QWORD PTR [r14+24]
  008bb	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008bf	72 3c		 jb	 SHORT $LN452@Partition_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  008c1	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008c4	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  008cc	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  008d3	72 1c		 jb	 SHORT $LN451@Partition_

; 155  :     _Bytes += _Non_user_size;

  008d5	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  008d9	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  008dd	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  008e0	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  008e4	48 83 f8 1f	 cmp	 rax, 31
  008e8	0f 87 6a 03 00
	00		 ja	 $LN496@Partition_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  008ee	49 8b c8	 mov	 rcx, r8
$LN451@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  008f1	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  008f6	8b 4c 24 28	 mov	 ecx, DWORD PTR _Tmp$2$[rsp]
  008fa	45 33 c0	 xor	 r8d, r8d
$LN452@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  008fd	4d 89 46 10	 mov	 QWORD PTR [r14+16], r8

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00901	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00909	66 45 89 06	 mov	 WORD PTR [r14], r8w

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0090d	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  00910	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
  00914	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  00918	41 0f 11 4e 10	 movups	 XMMWORD PTR [r14+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  0091d	4c 89 46 10	 mov	 QWORD PTR [rsi+16], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00921	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00929	66 44 89 06	 mov	 WORD PTR [rsi], r8w
$LN688@Partition_:
  0092d	41 8b 45 28	 mov	 eax, DWORD PTR [r13+40]
  00931	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  00934	49 8b 45 30	 mov	 rax, QWORD PTR [r13+48]
  00938	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax
  0093c	45 89 7d 00	 mov	 DWORD PTR [r13], r15d
  00940	41 89 4d 04	 mov	 DWORD PTR [r13+4], ecx

; 2850 :         if (this != _STD addressof(_Right)) {

  00944	48 8d 45 28	 lea	 rax, QWORD PTR _Tmp$4[rbp-248]
  00948	48 3b f0	 cmp	 rsi, rax
  0094b	74 6f		 je	 SHORT $LN695@Partition_

; 2319 :         return _BUF_SIZE <= _Myres;

  0094d	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  00951	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00955	72 38		 jb	 SHORT $LN500@Partition_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00957	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0095a	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00962	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00969	72 1c		 jb	 SHORT $LN499@Partition_

; 155  :     _Bytes += _Non_user_size;

  0096b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0096f	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00973	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00976	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0097a	48 83 f8 1f	 cmp	 rax, 31
  0097e	0f 87 d4 02 00
	00		 ja	 $LN496@Partition_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00984	49 8b c8	 mov	 rcx, r8
$LN499@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00987	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0098c	45 33 c0	 xor	 r8d, r8d
$LN500@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0098f	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00997	0f 10 44 24 60	 movups	 xmm0, XMMWORD PTR _Tmp$7$[rsp]
  0099c	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  0099f	0f 10 4c 24 50	 movups	 xmm1, XMMWORD PTR _Tmp$8$[rsp]
  009a4	0f 11 4e 10	 movups	 XMMWORD PTR [rsi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  009a8	4c 89 45 38	 mov	 QWORD PTR _Tmp$4[rbp-232], r8

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  009ac	ba 07 00 00 00	 mov	 edx, 7
  009b1	48 89 55 40	 mov	 QWORD PTR _Tmp$4[rbp-224], rdx

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  009b5	66 44 89 45 28	 mov	 WORD PTR _Tmp$4[rbp-248], r8w

; 2850 :         if (this != _STD addressof(_Right)) {

  009ba	eb 04		 jmp	 SHORT $LN504@Partition_
$LN695@Partition_:
  009bc	48 8b 55 40	 mov	 rdx, QWORD PTR _Tmp$4[rbp-224]
$LN504@Partition_:
  009c0	8b 44 24 20	 mov	 eax, DWORD PTR _Tmp$3$[rsp]
  009c4	41 89 45 28	 mov	 DWORD PTR [r13+40], eax
  009c8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Tmp$4$[rsp]
  009cd	49 89 45 30	 mov	 QWORD PTR [r13+48], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  009d1	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009d5	72 39		 jb	 SHORT $LN545@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009d7	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  009df	48 8b 4d 28	 mov	 rcx, QWORD PTR _Tmp$4[rbp-248]
  009e3	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  009e6	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  009ed	72 19		 jb	 SHORT $LN544@Partition_

; 155  :     _Bytes += _Non_user_size;

  009ef	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  009f3	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  009f7	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  009fa	48 83 c0 f8	 add	 rax, -8
  009fe	48 83 f8 1f	 cmp	 rax, 31
  00a02	0f 87 44 02 00
	00		 ja	 $LN652@Partition_
$LN544@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a08	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00a0d	45 33 c0	 xor	 r8d, r8d
$LN545@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00a10	4c 89 45 38	 mov	 QWORD PTR _Tmp$4[rbp-232], r8

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a14	48 c7 45 40 07
	00 00 00	 mov	 QWORD PTR _Tmp$4[rbp-224], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a1c	66 44 89 45 28	 mov	 WORD PTR _Tmp$4[rbp-248], r8w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7349 :             ++_Pfirst;

  00a21	48 83 c7 38	 add	 rdi, 56			; 00000038H

; 7350 :             ++_Gfirst;

  00a25	49 83 c5 38	 add	 r13, 56			; 00000038H
  00a29	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  00a2e	4c 8b 7c 24 40	 mov	 r15, QWORD PTR _Last$GSCopy$1$[rsp]
  00a33	e9 28 f8 ff ff	 jmp	 $LL6@Partition_
$LN27@Partition_:

; 7351 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00a38	48 83 c1 c8	 add	 rcx, -56		; ffffffffffffffc8H
  00a3c	48 89 4c 24 30	 mov	 QWORD PTR _Glast$1$[rsp], rcx
  00a41	4c 8b 7c 24 40	 mov	 r15, QWORD PTR _Last$GSCopy$1$[rsp]
  00a46	4d 3b ef	 cmp	 r13, r15
  00a49	0f 85 a3 01 00
	00		 jne	 $LN30@Partition_

; 7352 :             if (--_Glast != --_Pfirst) {

  00a4f	48 83 ef 38	 sub	 rdi, 56			; 00000038H
  00a53	48 3b cf	 cmp	 rcx, rdi
  00a56	0f 84 7d 01 00
	00		 je	 $LN658@Partition_
  00a5c	44 8b 39	 mov	 r15d, DWORD PTR [rcx]
  00a5f	44 89 7d 58	 mov	 DWORD PTR _Tmp$5[rbp-256], r15d
  00a63	44 8b 41 04	 mov	 r8d, DWORD PTR [rcx+4]
  00a67	44 89 44 24 28	 mov	 DWORD PTR _Tmp$2$[rsp], r8d
  00a6c	44 89 45 5c	 mov	 DWORD PTR _Tmp$5[rbp-252], r8d
  00a70	48 8d 71 08	 lea	 rsi, QWORD PTR [rcx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a74	45 33 c9	 xor	 r9d, r9d
  00a77	4c 89 4d 60	 mov	 QWORD PTR _Tmp$5[rbp-248], r9

; 2355 :     size_type _Mysize = 0; // current length of string

  00a7b	4c 89 4d 70	 mov	 QWORD PTR _Tmp$5[rbp-232], r9

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00a7f	4c 89 4d 78	 mov	 QWORD PTR _Tmp$5[rbp-224], r9

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00a83	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  00a86	0f 11 45 60	 movups	 XMMWORD PTR _Tmp$5[rbp-248], xmm0
  00a8a	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  00a8e	0f 11 4d 70	 movups	 XMMWORD PTR _Tmp$5[rbp-232], xmm1

; 4596 :         _My_data._Mysize = 0;

  00a92	4c 89 4e 10	 mov	 QWORD PTR [rsi+16], r9

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00a96	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00a9e	66 44 89 0e	 mov	 WORD PTR [rsi], r9w
  00aa2	8b 41 28	 mov	 eax, DWORD PTR [rcx+40]
  00aa5	89 85 80 00 00
	00		 mov	 DWORD PTR _Tmp$5[rbp-216], eax
  00aab	48 8b 41 30	 mov	 rax, QWORD PTR [rcx+48]
  00aaf	48 89 85 88 00
	00 00		 mov	 QWORD PTR _Tmp$5[rbp-208], rax
  00ab6	8b 07		 mov	 eax, DWORD PTR [rdi]
  00ab8	89 01		 mov	 DWORD PTR [rcx], eax
  00aba	8b 47 04	 mov	 eax, DWORD PTR [rdi+4]
  00abd	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00ac0	4c 8d 77 08	 lea	 r14, QWORD PTR [rdi+8]

; 2850 :         if (this != _STD addressof(_Right)) {

  00ac4	49 3b f6	 cmp	 rsi, r14
  00ac7	0f 84 80 00 00
	00		 je	 $LN700@Partition_

; 2319 :         return _BUF_SIZE <= _Myres;

  00acd	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  00ad1	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ad5	72 42		 jb	 SHORT $LN608@Partition_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00ad7	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ada	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ae2	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00ae9	72 1c		 jb	 SHORT $LN607@Partition_

; 155  :     _Bytes += _Non_user_size;

  00aeb	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00aef	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00af3	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00af6	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00afa	48 83 f8 1f	 cmp	 rax, 31
  00afe	0f 87 42 01 00
	00		 ja	 $LN604@Partition_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00b04	49 8b c8	 mov	 rcx, r8
$LN607@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00b07	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00b0c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  00b11	44 8b 44 24 28	 mov	 r8d, DWORD PTR _Tmp$2$[rsp]
  00b16	45 33 c9	 xor	 r9d, r9d
$LN608@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00b19	4c 89 4e 10	 mov	 QWORD PTR [rsi+16], r9

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b1d	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00b25	66 44 89 0e	 mov	 WORD PTR [rsi], r9w

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00b29	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  00b2d	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  00b30	41 0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [r14+16]
  00b35	0f 11 4e 10	 movups	 XMMWORD PTR [rsi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00b39	33 f6		 xor	 esi, esi
  00b3b	49 89 76 10	 mov	 QWORD PTR [r14+16], rsi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00b3f	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00b47	66 41 89 36	 mov	 WORD PTR [r14], si

; 2850 :         if (this != _STD addressof(_Right)) {

  00b4b	eb 02		 jmp	 SHORT $LN612@Partition_
$LN700@Partition_:
  00b4d	33 f6		 xor	 esi, esi
$LN612@Partition_:
  00b4f	8b 47 28	 mov	 eax, DWORD PTR [rdi+40]
  00b52	89 41 28	 mov	 DWORD PTR [rcx+40], eax
  00b55	48 8b 47 30	 mov	 rax, QWORD PTR [rdi+48]
  00b59	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
  00b5d	44 89 3f	 mov	 DWORD PTR [rdi], r15d
  00b60	44 89 47 04	 mov	 DWORD PTR [rdi+4], r8d
  00b64	48 8d 55 60	 lea	 rdx, QWORD PTR _Tmp$5[rbp-248]
  00b68	49 8b ce	 mov	 rcx, r14
  00b6b	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  00b70	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR _Tmp$5[rbp-216]
  00b76	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  00b79	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Tmp$5[rbp-208]
  00b80	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  00b84	48 8b 55 78	 mov	 rdx, QWORD PTR _Tmp$5[rbp-224]
  00b88	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b8c	72 36		 jb	 SHORT $LN656@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b8e	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  00b96	48 8b 4d 60	 mov	 rcx, QWORD PTR _Tmp$5[rbp-248]
  00b9a	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00b9d	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00ba4	72 19		 jb	 SHORT $LN655@Partition_

; 155  :     _Bytes += _Non_user_size;

  00ba6	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00baa	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00bae	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00bb1	48 83 c0 f8	 add	 rax, -8
  00bb5	48 83 f8 1f	 cmp	 rax, 31
  00bb9	0f 87 8d 00 00
	00		 ja	 $LN652@Partition_
$LN655@Partition_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00bbf	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN656@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00bc4	48 89 75 70	 mov	 QWORD PTR _Tmp$5[rbp-232], rsi

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00bc8	48 c7 45 78 07
	00 00 00	 mov	 QWORD PTR _Tmp$5[rbp-224], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00bd0	66 89 75 60	 mov	 WORD PTR _Tmp$5[rbp-248], si
  00bd4	4c 8b 7c 24 40	 mov	 r15, QWORD PTR _Last$GSCopy$1$[rsp]
$LN658@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7356 :             _STD iter_swap(_Pfirst, --_Plast);

  00bd9	49 83 ec 38	 sub	 r12, 56			; 00000038H
  00bdd	49 8b d4	 mov	 rdx, r12
  00be0	48 8b cf	 mov	 rcx, rdi
  00be3	e8 00 00 00 00	 call	 ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>

; 7357 :         } else {

  00be8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  00bed	e9 6e f6 ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:

; 7358 :             _STD iter_swap(_Gfirst, --_Glast);

  00bf2	48 89 4c 24 30	 mov	 QWORD PTR _Glast$1$[rsp], rcx
  00bf7	48 8b d1	 mov	 rdx, rcx
  00bfa	49 8b cd	 mov	 rcx, r13
  00bfd	e8 00 00 00 00	 call	 ??$iter_swap@PEAUTaskLstFnStatus@@PEAU1@@std@@YAXPEAUTaskLstFnStatus@@0@Z ; std::iter_swap<TaskLstFnStatus *,TaskLstFnStatus *>

; 7359 :             ++_Gfirst;

  00c02	49 83 c5 38	 add	 r13, 56			; 00000038H

; 7360 :         }
; 7361 :     }

  00c06	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Glast$1$[rsp]
  00c0b	e9 50 f6 ff ff	 jmp	 $LL6@Partition_
$LN670@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c10	48 8b 44 24 70	 mov	 rax, QWORD PTR __$ReturnUdt$GSCopy$1$[rsp]
  00c15	48 89 38	 mov	 QWORD PTR [rax], rdi
  00c18	4c 89 60 08	 mov	 QWORD PTR [rax+8], r12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7362 : }

  00c1c	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-256]
  00c23	48 33 cc	 xor	 rcx, rsp
  00c26	e8 00 00 00 00	 call	 __security_check_cookie
  00c2b	48 8b 9c 24 f8
	01 00 00	 mov	 rbx, QWORD PTR [rsp+504]
  00c33	48 81 c4 a0 01
	00 00		 add	 rsp, 416		; 000001a0H
  00c3a	41 5f		 pop	 r15
  00c3c	41 5e		 pop	 r14
  00c3e	41 5d		 pop	 r13
  00c40	41 5c		 pop	 r12
  00c42	5f		 pop	 rdi
  00c43	5e		 pop	 rsi
  00c44	5d		 pop	 rbp
  00c45	c3		 ret	 0
$LN604@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00c46	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00c4b	90		 npad	 1
$LN652@Partition_:
  00c4c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00c51	90		 npad	 1
$LN340@Partition_:
  00c52	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00c57	90		 npad	 1
$LN496@Partition_:
  00c58	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00c5d	cc		 int	 3
$LN702@Partition_:
??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$1@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$0@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$2@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$4@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$4
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$3@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$3
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$3@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$5@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$5
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$7@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$7
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$6@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$6
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$6@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$8@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$8
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$10@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$10
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$9@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$9
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$9@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$9
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$11@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$11
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$11
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$13@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$13
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$13@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$13
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$12@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$12
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$12@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$12
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$14@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$14
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$14@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$1@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$0@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$2@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$4@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$4
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$3@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$3
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$3@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$5@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$5
  00000	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$7@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$7
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$6@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$6
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$6@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$8@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$8
  00000	48 8d 8a e8 00
	00 00		 lea	 rcx, QWORD PTR _Tmp$3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$10@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$10
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$9@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$9
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$9@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$11@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$11
  00000	48 8d 8a 20 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$4[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$13@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$13
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$13@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$12@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$12
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$12@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Tmp$3$ = 32
_Tmp$2$ = 32
_Tmp$3$ = 32
_Tmp$4$ = 32
_Tmp$2$ = 40
_Tmp$2$ = 40
_Tmp$3$ = 40
tv4832 = 40
_Glast$1$ = 48
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$4$ = 56
_Tmp$3$ = 56
_Last$GSCopy$1$ = 64
_First$GSCopy$1$ = 72
_Tmp$7$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 80
_Tmp$8$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
_Tmp$7$ = 96
__$ReturnUdt$GSCopy$1$ = 112
_Tmp$1 = 120
_Tmp$2 = 176
_Tmp$3 = 232
_Tmp$4 = 288
_Tmp$5 = 344
__$ArrayPad$ = 400
__$ReturnUdt$ = 480
_First$ = 488
_Last$ = 496
_Pred$ = 504
?dtor$14@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$14
  00000	48 8d 8a 58 01
	00 00		 lea	 rcx, QWORD PTR _Tmp$5[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$14@?0???$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 5843 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

$LN165:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001e	48 33 c4	 xor	 rax, rsp
  00021	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00029	49 8b d8	 mov	 rbx, r8
  0002c	4c 8b e9	 mov	 r13, rcx

; 5844 :     // make [_First, _Last) into a heap
; 5845 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 5846 :     _Diff _Bottom = _Last - _First;

  0002f	48 2b d1	 sub	 rdx, rcx
  00032	48 b8 25 49 92
	24 49 92 24 49	 mov	 rax, 5270498306774157605 ; 4924924924924925H
  0003c	48 f7 ea	 imul	 rdx
  0003f	48 c1 fa 04	 sar	 rdx, 4
  00043	48 8b c2	 mov	 rax, rdx
  00046	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  0004a	48 03 d0	 add	 rdx, rax
  0004d	48 89 54 24 40	 mov	 QWORD PTR _Bottom$1$[rsp], rdx

; 5847 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00052	4c 8b e2	 mov	 r12, rdx
  00055	49 d1 fc	 sar	 r12, 1
  00058	4d 85 e4	 test	 r12, r12
  0005b	0f 8e a6 03 00
	00		 jle	 $LN157@Make_heap_
  00061	48 8d 6a ff	 lea	 rbp, QWORD PTR [rdx-1]
  00065	48 89 6c 24 48	 mov	 QWORD PTR tv1308[rsp], rbp
  0006a	48 8b cd	 mov	 rcx, rbp
  0006d	48 d1 f9	 sar	 rcx, 1
  00070	48 89 4c 24 38	 mov	 QWORD PTR _Max_sequence_non_leaf$1$[rsp], rcx

; 5843 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00075	49 6b c4 38	 imul	 rax, r12, 56		; 00000038H
  00079	48 83 c0 20	 add	 rax, 32			; 00000020H
  0007d	49 03 c5	 add	 rax, r13
  00080	45 33 f6	 xor	 r14d, r14d
$LL2@Make_heap_:

; 5848 :         // reheap top half, bottom to top
; 5849 :         --_Hole;

  00083	49 ff cc	 dec	 r12
  00086	4c 89 64 24 28	 mov	 QWORD PTR _Hole$1$[rsp], r12
  0008b	48 83 e8 38	 sub	 rax, 56			; 00000038H
  0008f	48 89 44 24 60	 mov	 QWORD PTR tv1298[rsp], rax
  00094	8b 70 e0	 mov	 esi, DWORD PTR [rax-32]
  00097	89 74 24 20	 mov	 DWORD PTR _Val$2$[rsp], esi
  0009b	89 b4 24 88 00
	00 00		 mov	 DWORD PTR _Val$1[rsp], esi
  000a2	8b 78 e4	 mov	 edi, DWORD PTR [rax-28]
  000a5	89 7c 24 24	 mov	 DWORD PTR _Val$1$[rsp], edi
  000a9	89 bc 24 8c 00
	00 00		 mov	 DWORD PTR _Val$1[rsp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000b0	4c 89 b4 24 90
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+8], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  000b8	4c 89 b4 24 a0
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+24], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  000c0	4c 89 b4 24 a8
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+32], r14

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000c8	0f 10 40 e8	 movups	 xmm0, XMMWORD PTR [rax-24]
  000cc	0f 11 44 24 68	 movups	 XMMWORD PTR _Val$7$[rsp], xmm0
  000d1	0f 11 84 24 90
	00 00 00	 movups	 XMMWORD PTR _Val$1[rsp+8], xmm0
  000d9	0f 10 40 f8	 movups	 xmm0, XMMWORD PTR [rax-8]
  000dd	0f 11 44 24 78	 movups	 XMMWORD PTR _Val$8$[rsp], xmm0
  000e2	0f 11 84 24 a0
	00 00 00	 movups	 XMMWORD PTR _Val$1[rsp+24], xmm0

; 4596 :         _My_data._Mysize = 0;

  000ea	4c 89 70 f8	 mov	 QWORD PTR [rax-8], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000ee	48 c7 00 07 00
	00 00		 mov	 QWORD PTR [rax], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f5	66 44 89 70 e8	 mov	 WORD PTR [rax-24], r14w
  000fa	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  000fe	44 89 44 24 30	 mov	 DWORD PTR _Val$3$[rsp], r8d
  00103	44 89 84 24 b0
	00 00 00	 mov	 DWORD PTR _Val$1[rsp+40], r8d
  0010b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0010f	48 89 44 24 58	 mov	 QWORD PTR _Val$4$[rsp], rax
  00114	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+48], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5851 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  0011c	4d 8b fc	 mov	 r15, r12

; 5683 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0011f	4c 3b e1	 cmp	 r12, rcx
  00122	0f 8d e7 00 00
	00		 jge	 $LN162@Make_heap_
  00128	eb 09		 jmp	 SHORT $LN33@Make_heap_
  0012a	66 0f 1f 44 00
	00		 npad	 6
$LL160@Make_heap_:
  00130	45 33 f6	 xor	 r14d, r14d
$LN33@Make_heap_:

; 5684 :         _Idx = 2 * _Idx + 2;

  00133	4b 8d 2c 24	 lea	 rbp, QWORD PTR [r12+r12]

; 5685 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00137	48 6b fd 38	 imul	 rdi, rbp, 56		; 00000038H
  0013b	49 03 fd	 add	 rdi, r13
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  0013e	48 63 57 74	 movsxd	 rdx, DWORD PTR [rdi+116]
  00142	48 63 4f 70	 movsxd	 rcx, DWORD PTR [rdi+112]
  00146	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0014a	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  0014f	48 8b f0	 mov	 rsi, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00152	48 63 57 3c	 movsxd	 rdx, DWORD PTR [rdi+60]
  00156	48 63 4f 38	 movsxd	 rcx, DWORD PTR [rdi+56]
  0015a	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  0015e	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00163	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00166	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0016b	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5688 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00170	49 8b d6	 mov	 rdx, r14
  00173	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  00179	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
  0017f	0f 9e c2	 setle	 dl
  00182	4c 8d 62 01	 lea	 r12, QWORD PTR [rdx+1]
  00186	4c 03 e5	 add	 r12, rbp
  00189	4d 6b f4 38	 imul	 r14, r12, 56		; 00000038H
  0018d	4d 03 f5	 add	 r14, r13
  00190	4d 6b ff 38	 imul	 r15, r15, 56		; 00000038H
  00194	4d 03 fd	 add	 r15, r13
  00197	41 8b 06	 mov	 eax, DWORD PTR [r14]
  0019a	41 89 07	 mov	 DWORD PTR [r15], eax
  0019d	41 8b 46 04	 mov	 eax, DWORD PTR [r14+4]
  001a1	41 89 47 04	 mov	 DWORD PTR [r15+4], eax
  001a5	49 8d 7e 08	 lea	 rdi, QWORD PTR [r14+8]
  001a9	49 8d 77 08	 lea	 rsi, QWORD PTR [r15+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  001ad	48 3b f7	 cmp	 rsi, rdi
  001b0	74 27		 je	 SHORT $LN49@Make_heap_

; 2776 :         _Tidy_deallocate();

  001b2	48 8b ce	 mov	 rcx, rsi
  001b5	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001ba	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  001bd	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  001c0	0f 10 4f 10	 movups	 xmm1, XMMWORD PTR [rdi+16]
  001c4	0f 11 4e 10	 movups	 XMMWORD PTR [rsi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  001c8	33 c0		 xor	 eax, eax
  001ca	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001ce	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001d6	66 89 07	 mov	 WORD PTR [rdi], ax
$LN49@Make_heap_:
  001d9	41 8b 46 28	 mov	 eax, DWORD PTR [r14+40]
  001dd	41 89 47 28	 mov	 DWORD PTR [r15+40], eax
  001e1	49 8b 46 30	 mov	 rax, QWORD PTR [r14+48]
  001e5	49 89 47 30	 mov	 QWORD PTR [r15+48], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5689 :         _Hole             = _Idx;

  001e9	4d 8b fc	 mov	 r15, r12

; 5571 : }
; 5572 : 
; 5573 : template <class _RanIt, class _Pr>
; 5574 : _CONSTEXPR20 void push_heap(_RanIt _First, _RanIt _Last, _Pr _Pred) {
; 5575 :     // push *(_Last - 1) onto heap at [_First, _Last - 1)
; 5576 :     _Adl_verify_range(_First, _Last);
; 5577 :     const auto _UFirst = _Get_unwrapped(_First);
; 5578 :     auto _ULast        = _Get_unwrapped(_Last);
; 5579 :     using _Diff        = _Iter_diff_t<_RanIt>;
; 5580 :     _Diff _Count       = _ULast - _UFirst;
; 5581 :     if (2 <= _Count) {
; 5582 :         _Iter_value_t<_RanIt> _Val = _STD move(*--_ULast);
; 5583 :         _Push_heap_by_index(_UFirst, --_Count, _Diff(0), _STD move(_Val), _Pass_fn(_Pred));
; 5584 :     }
; 5585 : }
; 5586 : 
; 5587 : template <class _RanIt>
; 5588 : _CONSTEXPR20 void push_heap(_RanIt _First, _RanIt _Last) {
; 5589 :     // push *(_Last - 1) onto heap at [_First, _Last - 1)
; 5590 :     _STD push_heap(_First, _Last, less<>{});
; 5591 : }
; 5592 : 
; 5593 : #ifdef __cpp_lib_concepts
; 5594 : namespace ranges {
; 5595 :     // VARIABLE ranges::push_heap
; 5596 :     // clang-format off
; 5597 :     template <random_access_iterator _It, class _Ty, class _Pr, class _Pj1, class _Pj2>
; 5598 :         requires sortable<_It, _Pr, _Pj1> && indirectly_writable<_It, _Ty>
; 5599 :             && indirect_strict_weak_order<_Pr, projected<_It, _Pj1>, projected<remove_reference_t<_Ty>*, _Pj2>>
; 5600 :     constexpr void _Push_heap_by_index(const _It _First, iter_difference_t<_It> _Hole,
; 5601 :         const iter_difference_t<_It> _Top, _Ty&& _Val, _Pr _Pred, _Pj1 _Proj1, _Pj2 _Proj2) {
; 5602 :         // clang-format on
; 5603 :         // percolate _Hole to _Top or where _Val belongs
; 5604 :         while (_Top < _Hole) {
; 5605 :             const auto _Idx = static_cast<iter_difference_t<_It>>((_Hole - 1) >> 1); // shift for codegen
; 5606 :             if (!_STD invoke(_Pred, _STD invoke(_Proj1, *(_First + _Idx)), _STD invoke(_Proj2, _Val))) {
; 5607 :                 break;
; 5608 :             }
; 5609 : 
; 5610 :             // move _Hole up to parent
; 5611 :             *(_First + _Hole) = _RANGES iter_move(_First + _Idx);
; 5612 :             _Hole             = _Idx;
; 5613 :         }
; 5614 : 
; 5615 :         *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole
; 5616 :     }
; 5617 : 
; 5618 :     class _Push_heap_fn : private _Not_quite_object {
; 5619 :     public:
; 5620 :         using _Not_quite_object::_Not_quite_object;
; 5621 : 
; 5622 :         // clang-format off
; 5623 :         template <random_access_iterator _It, sentinel_for<_It> _Se, class _Pr = ranges::less, class _Pj = identity>
; 5624 :             requires sortable<_It, _Pr, _Pj>
; 5625 :         constexpr _It operator()(_It _First, _Se _Last, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 5626 :             _Adl_verify_range(_First, _Last);
; 5627 :             auto _UFirst = _Get_unwrapped(_STD move(_First));
; 5628 :             auto _ULast = _Get_final_iterator_unwrapped<_It>(_UFirst, _STD move(_Last));
; 5629 :             _Seek_wrapped(_First, _ULast);
; 5630 :             _Push_heap_unchecked(_STD move(_UFirst), _STD move(_ULast), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 5631 :             return _First;
; 5632 :         }
; 5633 : 
; 5634 :         template <random_access_range _Rng, class _Pr = ranges::less, class _Pj = identity>
; 5635 :             requires sortable<iterator_t<_Rng>, _Pr, _Pj>
; 5636 :         constexpr borrowed_iterator_t<_Rng> operator()(_Rng&& _Range, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 5637 :             if constexpr (common_range<_Rng>) {
; 5638 :                 _Push_heap_unchecked(_Ubegin(_Range), _Uend(_Range), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 5639 :                 return _RANGES end(_Range);
; 5640 :             } else {
; 5641 :                 auto _ULast = _Get_final_iterator_unwrapped(_Range);
; 5642 :                 _Push_heap_unchecked(_Ubegin(_Range), _ULast, _Pass_fn(_Pred), _Pass_fn(_Proj));
; 5643 :                 return _Rewrap_iterator(_Range, _STD move(_ULast));
; 5644 :             }
; 5645 :         }
; 5646 :         // clang-format on
; 5647 :     private:
; 5648 :         template <class _It, class _Pr, class _Pj>
; 5649 :         static constexpr void _Push_heap_unchecked(_It _First, _It _Last, _Pr _Pred, _Pj _Proj) {
; 5650 :             _STL_INTERNAL_STATIC_ASSERT(random_access_iterator<_It>);
; 5651 :             _STL_INTERNAL_STATIC_ASSERT(sortable<_It, _Pr, _Pj>);
; 5652 : 
; 5653 :             const auto _Count = _Last - _First;
; 5654 :             if (_Count < 2) {
; 5655 :                 return;
; 5656 :             }
; 5657 : 
; 5658 :             --_Last;
; 5659 :             iter_value_t<_It> _Val = _RANGES iter_move(_Last);
; 5660 :             // NB: if _Proj is a _Ref_fn, this aliases the _Proj1 and _Proj2 parameters of _Push_heap_by_index
; 5661 :             _RANGES _Push_heap_by_index(_STD move(_First), _Count - 1, 0, _STD move(_Val), _Pred, _Proj, _Proj);
; 5662 :         }
; 5663 :     };
; 5664 : 
; 5665 :     inline constexpr _Push_heap_fn push_heap{_Not_quite_object::_Construct_tag{}};
; 5666 : } // namespace ranges
; 5667 : #endif // __cpp_lib_concepts
; 5668 : 
; 5669 : // FUNCTION TEMPLATE pop_heap
; 5670 : template <class _RanIt, class _Ty, class _Pr>
; 5671 : _CONSTEXPR20 void _Pop_heap_hole_by_index(
; 5672 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {
; 5673 :     // percolate _Hole to _Bottom, then push _Val
; 5674 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 5675 : 
; 5676 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 5677 :     const _Diff _Top = _Hole;
; 5678 :     _Diff _Idx       = _Hole;
; 5679 : 
; 5680 :     // Check whether _Idx can have a child before calculating that child's index, since
; 5681 :     // calculating the child's index can trigger integer overflows
; 5682 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 5683 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  001ec	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Max_sequence_non_leaf$1$[rsp]
  001f1	4c 3b e1	 cmp	 r12, rcx
  001f4	0f 8c 36 ff ff
	ff		 jl	 $LL160@Make_heap_
  001fa	8b 74 24 20	 mov	 esi, DWORD PTR _Val$2$[rsp]
  001fe	8b 7c 24 24	 mov	 edi, DWORD PTR _Val$1$[rsp]
  00202	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Bottom$1$[rsp]
  00207	48 8b 6c 24 48	 mov	 rbp, QWORD PTR tv1308[rsp]

; 5690 :     }
; 5691 : 
; 5692 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0020c	4c 3b e1	 cmp	 r12, rcx
$LN162@Make_heap_:
  0020f	75 1f		 jne	 SHORT $LN36@Make_heap_
  00211	f6 c2 01	 test	 dl, 1
  00214	75 1a		 jne	 SHORT $LN36@Make_heap_

; 5693 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00216	48 6b c2 38	 imul	 rax, rdx, 56		; 00000038H
  0021a	49 8d 55 c8	 lea	 rdx, QWORD PTR [r13-56]
  0021e	48 03 d0	 add	 rdx, rax
  00221	49 6b cf 38	 imul	 rcx, r15, 56		; 00000038H
  00225	49 03 cd	 add	 rcx, r13
  00228	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z

; 5694 :         _Hole             = _Bottom - 1;

  0022d	4c 8b fd	 mov	 r15, rbp
$LN36@Make_heap_:

; 5562 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00230	49 8d 6f ff	 lea	 rbp, QWORD PTR [r15-1]
  00234	48 d1 fd	 sar	 rbp, 1

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00237	4c 8b 64 24 28	 mov	 r12, QWORD PTR _Hole$1$[rsp]
  0023c	4d 3b e7	 cmp	 r12, r15
  0023f	0f 8d cf 00 00
	00		 jge	 $LN65@Make_heap_
  00245	48 63 ff	 movsxd	 rdi, edi
  00248	48 89 7c 24 50	 mov	 QWORD PTR tv1302[rsp], rdi
  0024d	48 63 c6	 movsxd	 rax, esi
  00250	48 8d 04 c3	 lea	 rax, QWORD PTR [rbx+rax*8]
  00254	48 89 44 24 28	 mov	 QWORD PTR tv1299[rsp], rax
  00259	0f 1f 80 00 00
	00 00		 npad	 7
$LL66@Make_heap_:
  00260	4c 6b f5 38	 imul	 r14, rbp, 56		; 00000038H
  00264	4d 03 f5	 add	 r14, r13
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00267	49 63 56 04	 movsxd	 rdx, DWORD PTR [r14+4]
  0026b	49 63 0e	 movsxd	 rcx, DWORD PTR [r14]
  0026e	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00272	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00277	48 8b f0	 mov	 rsi, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  0027a	48 8b d7	 mov	 rdx, rdi
  0027d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv1299[rsp]
  00282	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00285	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  0028a	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  0028d	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  00292	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00297	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  0029d	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  002a3	7e 6f		 jle	 SHORT $LN65@Make_heap_

; 5565 :         // move _Hole up to parent
; 5566 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  002a5	49 6b ff 38	 imul	 rdi, r15, 56		; 00000038H
  002a9	49 03 fd	 add	 rdi, r13
  002ac	41 8b 06	 mov	 eax, DWORD PTR [r14]
  002af	89 07		 mov	 DWORD PTR [rdi], eax
  002b1	41 8b 46 04	 mov	 eax, DWORD PTR [r14+4]
  002b5	89 47 04	 mov	 DWORD PTR [rdi+4], eax
  002b8	49 8d 76 08	 lea	 rsi, QWORD PTR [r14+8]
  002bc	4c 8d 7f 08	 lea	 r15, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  002c0	4c 3b fe	 cmp	 r15, rsi
  002c3	74 29		 je	 SHORT $LN79@Make_heap_

; 2776 :         _Tidy_deallocate();

  002c5	49 8b cf	 mov	 rcx, r15
  002c8	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  002cd	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  002d0	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0
  002d4	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  002d8	41 0f 11 4f 10	 movups	 XMMWORD PTR [r15+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  002dd	33 c0		 xor	 eax, eax
  002df	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002e3	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002eb	66 89 06	 mov	 WORD PTR [rsi], ax
$LN79@Make_heap_:
  002ee	41 8b 46 28	 mov	 eax, DWORD PTR [r14+40]
  002f2	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  002f5	49 8b 46 30	 mov	 rax, QWORD PTR [r14+48]
  002f9	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5567 :         _Hole             = _Idx;

  002fd	4c 8b fd	 mov	 r15, rbp

; 5564 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen

  00300	48 ff cd	 dec	 rbp
  00303	48 d1 fd	 sar	 rbp, 1

; 5563 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00306	4d 3b e7	 cmp	 r12, r15
  00309	48 8b 7c 24 50	 mov	 rdi, QWORD PTR tv1302[rsp]
  0030e	0f 8c 4c ff ff
	ff		 jl	 $LL66@Make_heap_
$LN65@Make_heap_:

; 5568 :     }
; 5569 : 
; 5570 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00314	49 6b ff 38	 imul	 rdi, r15, 56		; 00000038H
  00318	49 03 fd	 add	 rdi, r13
  0031b	8b 44 24 20	 mov	 eax, DWORD PTR _Val$2$[rsp]
  0031f	89 07		 mov	 DWORD PTR [rdi], eax
  00321	8b 44 24 24	 mov	 eax, DWORD PTR _Val$1$[rsp]
  00325	89 47 04	 mov	 DWORD PTR [rdi+4], eax
  00328	48 8d 77 08	 lea	 rsi, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  0032c	48 8d 84 24 90
	00 00 00	 lea	 rax, QWORD PTR _Val$1[rsp+8]
  00334	48 3b f0	 cmp	 rsi, rax
  00337	74 3c		 je	 SHORT $LN158@Make_heap_

; 2776 :         _Tidy_deallocate();

  00339	48 8b ce	 mov	 rcx, rsi
  0033c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00341	0f 10 44 24 68	 movups	 xmm0, XMMWORD PTR _Val$7$[rsp]
  00346	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  00349	0f 10 4c 24 78	 movups	 xmm1, XMMWORD PTR _Val$8$[rsp]
  0034e	0f 11 4e 10	 movups	 XMMWORD PTR [rsi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00352	45 33 f6	 xor	 r14d, r14d
  00355	4c 89 b4 24 a0
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+24], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0035d	ba 07 00 00 00	 mov	 edx, 7
  00362	48 89 94 24 a8
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+32], rdx

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0036a	66 44 89 b4 24
	90 00 00 00	 mov	 WORD PTR _Val$1[rsp+8], r14w

; 2850 :         if (this != _STD addressof(_Right)) {

  00373	eb 0b		 jmp	 SHORT $LN100@Make_heap_
$LN158@Make_heap_:
  00375	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR _Val$1[rsp+32]
  0037d	45 33 f6	 xor	 r14d, r14d
$LN100@Make_heap_:
  00380	8b 44 24 30	 mov	 eax, DWORD PTR _Val$3$[rsp]
  00384	89 47 28	 mov	 DWORD PTR [rdi+40], eax
  00387	48 8b 44 24 58	 mov	 rax, QWORD PTR _Val$4$[rsp]
  0038c	48 89 47 30	 mov	 QWORD PTR [rdi+48], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  00390	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00394	72 36		 jb	 SHORT $LN139@Make_heap_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00396	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0039e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Val$1[rsp+8]
  003a6	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003a9	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  003b0	72 15		 jb	 SHORT $LN138@Make_heap_

; 155  :     _Bytes += _Non_user_size;

  003b2	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003b6	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  003ba	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003bd	48 83 c0 f8	 add	 rax, -8
  003c1	48 83 f8 1f	 cmp	 rax, 31
  003c5	77 6b		 ja	 SHORT $LN135@Make_heap_
$LN138@Make_heap_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  003c7	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN139@Make_heap_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  003cc	4c 89 b4 24 a0
	00 00 00	 mov	 QWORD PTR _Val$1[rsp+24], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003d4	48 c7 84 24 a8
	00 00 00 07 00
	00 00		 mov	 QWORD PTR _Val$1[rsp+32], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003e0	66 44 89 b4 24
	90 00 00 00	 mov	 WORD PTR _Val$1[rsp+8], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5847 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  003e9	4d 85 e4	 test	 r12, r12
  003ec	7e 19		 jle	 SHORT $LN157@Make_heap_
  003ee	48 8b 44 24 60	 mov	 rax, QWORD PTR tv1298[rsp]
  003f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Max_sequence_non_leaf$1$[rsp]
  003f8	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Bottom$1$[rsp]
  003fd	48 8b 6c 24 48	 mov	 rbp, QWORD PTR tv1308[rsp]
  00402	e9 7c fc ff ff	 jmp	 $LL2@Make_heap_
$LN157@Make_heap_:

; 5853 : }

  00407	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0040f	48 33 cc	 xor	 rcx, rsp
  00412	e8 00 00 00 00	 call	 __security_check_cookie
  00417	48 8b 9c 24 20
	01 00 00	 mov	 rbx, QWORD PTR [rsp+288]
  0041f	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00426	41 5f		 pop	 r15
  00428	41 5e		 pop	 r14
  0042a	41 5d		 pop	 r13
  0042c	41 5c		 pop	 r12
  0042e	5f		 pop	 rdi
  0042f	5e		 pop	 rsi
  00430	5d		 pop	 rbp
  00431	c3		 ret	 0
$LN135@Make_heap_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00432	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00437	cc		 int	 3
$LN161@Make_heap_:
??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$1@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$0@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$2@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$1@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$0@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$2$ = 32
_Val$1$ = 36
tv1299 = 40
_Hole$1$ = 40
_Val$3$ = 48
_Max_sequence_non_leaf$1$ = 56
_Bottom$1$ = 64
tv1308 = 72
tv1302 = 80
_Val$4$ = 88
tv1298 = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 272
_Last$ = 280
_Pred$ = 288
?dtor$2@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 7238 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

$LN210:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	55		 push	 rbp
  00010	41 54		 push	 r12
  00012	41 55		 push	 r13
  00014	41 56		 push	 r14
  00016	41 57		 push	 r15
  00018	48 8d 6c 24 c9	 lea	 rbp, QWORD PTR [rsp-55]
  0001d	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 45 27	 mov	 QWORD PTR __$ArrayPad$[rbp-153], rax
  00032	49 8b d8	 mov	 rbx, r8
  00035	48 8b c2	 mov	 rax, rdx
  00038	48 89 55 c7	 mov	 QWORD PTR _Last$1$[rbp-153], rdx
  0003c	4c 8b e9	 mov	 r13, rcx
  0003f	48 89 4d bf	 mov	 QWORD PTR _First$GSCopy$1$[rbp-153], rcx

; 7239 :     // insertion sort [_First, _Last)
; 7240 :     if (_First != _Last) {

  00043	48 3b ca	 cmp	 rcx, rdx
  00046	0f 84 ae 03 00
	00		 je	 $LN204@Insertion_

; 7241 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  0004c	4c 8d 61 38	 lea	 r12, QWORD PTR [rcx+56]
  00050	4c 89 65 97	 mov	 QWORD PTR _Mid$1$[rbp-153], r12
  00054	4c 3b e2	 cmp	 r12, rdx
  00057	0f 84 9d 03 00
	00		 je	 $LN204@Insertion_
  0005d	4c 8d 71 58	 lea	 r14, QWORD PTR [rcx+88]
  00061	4c 89 75 9f	 mov	 QWORD PTR tv1656[rbp-153], r14
  00065	33 d2		 xor	 edx, edx
  00067	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2@Insertion_:

; 7242 :             _BidIt _Hole               = _Mid;

  00070	4d 8b fc	 mov	 r15, r12
  00073	49 63 04 24	 movsxd	 rax, DWORD PTR [r12]
  00077	89 45 87	 mov	 DWORD PTR _Val$1$[rbp-153], eax
  0007a	89 45 ef	 mov	 DWORD PTR _Val$1[rbp-153], eax
  0007d	49 63 4e e4	 movsxd	 rcx, DWORD PTR [r14-28]
  00081	89 4d 8b	 mov	 DWORD PTR _Val$3$[rbp-153], ecx
  00084	89 4d f3	 mov	 DWORD PTR _Val$1[rbp-149], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00087	48 89 55 f7	 mov	 QWORD PTR _Val$1[rbp-145], rdx

; 2355 :     size_type _Mysize = 0; // current length of string

  0008b	48 89 55 07	 mov	 QWORD PTR _Val$1[rbp-129], rdx

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0008f	48 89 55 0f	 mov	 QWORD PTR _Val$1[rbp-121], rdx

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00093	41 0f 10 46 e8	 movups	 xmm0, XMMWORD PTR [r14-24]
  00098	0f 11 45 cf	 movups	 XMMWORD PTR _Val$7$[rbp-153], xmm0
  0009c	0f 11 45 f7	 movups	 XMMWORD PTR _Val$1[rbp-145], xmm0
  000a0	41 0f 10 46 f8	 movups	 xmm0, XMMWORD PTR [r14-8]
  000a5	0f 11 45 df	 movups	 XMMWORD PTR _Val$8$[rbp-153], xmm0
  000a9	0f 11 45 07	 movups	 XMMWORD PTR _Val$1[rbp-129], xmm0

; 4596 :         _My_data._Mysize = 0;

  000ad	49 89 56 f8	 mov	 QWORD PTR [r14-8], rdx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000b1	49 c7 06 07 00
	00 00		 mov	 QWORD PTR [r14], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000b8	66 41 89 56 e8	 mov	 WORD PTR [r14-24], dx
  000bd	41 8b 56 08	 mov	 edx, DWORD PTR [r14+8]
  000c1	89 55 8f	 mov	 DWORD PTR _Val$2$[rbp-153], edx
  000c4	89 55 17	 mov	 DWORD PTR _Val$1[rbp-113], edx
  000c7	49 8b 56 10	 mov	 rdx, QWORD PTR [r14+16]
  000cb	48 89 55 b7	 mov	 QWORD PTR _Val$4$[rbp-153], rdx
  000cf	48 89 55 1f	 mov	 QWORD PTR _Val$1[rbp-105], rdx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7243 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000d3	48 89 4d a7	 mov	 QWORD PTR tv1667[rbp-153], rcx
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  000d7	48 8d 04 c3	 lea	 rax, QWORD PTR [rbx+rax*8]
  000db	48 89 45 af	 mov	 QWORD PTR tv1662[rbp-153], rax
  000df	48 8b d1	 mov	 rdx, rcx
  000e2	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000e5	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  000ea	48 8b f0	 mov	 rsi, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  000ed	49 63 55 04	 movsxd	 rdx, DWORD PTR [r13+4]
  000f1	49 63 4d 00	 movsxd	 rcx, DWORD PTR [r13]
  000f5	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  000f9	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  000fe	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  00101	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  00106	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  0010b	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  00111	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7245 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  00117	0f 8e e2 00 00
	00		 jle	 $LN9@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4466 :     while (_First != _Last) {

  0011d	4d 3b e5	 cmp	 r12, r13
  00120	74 6c		 je	 SHORT $LN44@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7246 :                 _Move_backward_unchecked(_First, _Mid, ++_Hole);

  00122	49 8d 7e 20	 lea	 rdi, QWORD PTR [r14+32]
  00126	45 33 e4	 xor	 r12d, r12d
  00129	0f 1f 80 00 00
	00 00		 npad	 7
$LL197@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4467 :         *--_Dest = _STD move(*--_Last);

  00130	48 83 ef 38	 sub	 rdi, 56			; 00000038H
  00134	4c 8d 77 c0	 lea	 r14, QWORD PTR [rdi-64]
  00138	41 8b 06	 mov	 eax, DWORD PTR [r14]
  0013b	89 47 f8	 mov	 DWORD PTR [rdi-8], eax
  0013e	8b 47 c4	 mov	 eax, DWORD PTR [rdi-60]
  00141	89 47 fc	 mov	 DWORD PTR [rdi-4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  00144	48 8d 77 c8	 lea	 rsi, QWORD PTR [rdi-56]
  00148	48 3b fe	 cmp	 rdi, rsi
  0014b	74 26		 je	 SHORT $LN53@Insertion_

; 2776 :         _Tidy_deallocate();

  0014d	48 8b cf	 mov	 rcx, rdi
  00150	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00155	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  00158	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  0015b	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  0015f	0f 11 4f 10	 movups	 XMMWORD PTR [rdi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00163	4c 89 67 d8	 mov	 QWORD PTR [rdi-40], r12

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00167	48 c7 47 e0 07
	00 00 00	 mov	 QWORD PTR [rdi-32], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0016f	66 44 89 26	 mov	 WORD PTR [rsi], r12w
$LN53@Insertion_:
  00173	8b 47 e8	 mov	 eax, DWORD PTR [rdi-24]
  00176	89 47 20	 mov	 DWORD PTR [rdi+32], eax
  00179	48 8b 47 f0	 mov	 rax, QWORD PTR [rdi-16]
  0017d	48 89 47 28	 mov	 QWORD PTR [rdi+40], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4466 :     while (_First != _Last) {

  00181	4d 3b f5	 cmp	 r14, r13
  00184	75 aa		 jne	 SHORT $LL197@Insertion_
  00186	4c 8b 75 9f	 mov	 r14, QWORD PTR tv1656[rbp-153]
  0018a	4c 8b 65 97	 mov	 r12, QWORD PTR _Mid$1$[rbp-153]
$LN44@Insertion_:
  0018e	8b 45 87	 mov	 eax, DWORD PTR _Val$1$[rbp-153]
  00191	41 89 45 00	 mov	 DWORD PTR [r13], eax
  00195	8b 45 8b	 mov	 eax, DWORD PTR _Val$3$[rbp-153]
  00198	41 89 45 04	 mov	 DWORD PTR [r13+4], eax
  0019c	49 8d 7d 08	 lea	 rdi, QWORD PTR [r13+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  001a0	48 8d 45 f7	 lea	 rax, QWORD PTR _Val$1[rbp-145]
  001a4	48 3b f8	 cmp	 rdi, rax
  001a7	74 3e		 je	 SHORT $LN205@Insertion_

; 2776 :         _Tidy_deallocate();

  001a9	48 8b cf	 mov	 rcx, rdi
  001ac	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001b1	0f 10 45 cf	 movups	 xmm0, XMMWORD PTR _Val$7$[rbp-153]
  001b5	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  001b8	0f 10 4d df	 movups	 xmm1, XMMWORD PTR _Val$8$[rbp-153]
  001bc	0f 11 4f 10	 movups	 XMMWORD PTR [rdi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  001c0	33 c9		 xor	 ecx, ecx
  001c2	48 89 4d 07	 mov	 QWORD PTR _Val$1[rbp-129], rcx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001c6	b8 07 00 00 00	 mov	 eax, 7
  001cb	48 89 45 0f	 mov	 QWORD PTR _Val$1[rbp-121], rax

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001cf	66 89 4d f7	 mov	 WORD PTR _Val$1[rbp-145], cx
  001d3	8b 4d 8f	 mov	 ecx, DWORD PTR _Val$2$[rbp-153]
  001d6	41 89 4d 28	 mov	 DWORD PTR [r13+40], ecx
  001da	48 8b 4d b7	 mov	 rcx, QWORD PTR _Val$4$[rbp-153]
  001de	49 89 4d 30	 mov	 QWORD PTR [r13+48], rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7248 :             } else { // look for insertion point after first

  001e2	e9 ac 01 00 00	 jmp	 $LN159@Insertion_
$LN205@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  001e7	48 8b 45 0f	 mov	 rax, QWORD PTR _Val$1[rbp-121]
  001eb	8b 4d 8f	 mov	 ecx, DWORD PTR _Val$2$[rbp-153]
  001ee	41 89 4d 28	 mov	 DWORD PTR [r13+40], ecx
  001f2	48 8b 4d b7	 mov	 rcx, QWORD PTR _Val$4$[rbp-153]
  001f6	49 89 4d 30	 mov	 QWORD PTR [r13+48], rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7248 :             } else { // look for insertion point after first

  001fa	e9 94 01 00 00	 jmp	 $LN159@Insertion_
$LN9@Insertion_:

; 7249 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001ff	4d 8d 66 a8	 lea	 r12, QWORD PTR [r14-88]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  00203	48 8b 55 a7	 mov	 rdx, QWORD PTR tv1667[rbp-153]
  00207	48 8b 4d af	 mov	 rcx, QWORD PTR tv1662[rbp-153]
  0020b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0020e	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00213	48 8b f0	 mov	 rsi, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  00216	49 63 56 ac	 movsxd	 rdx, DWORD PTR [r14-84]
  0021a	49 63 0c 24	 movsxd	 rcx, DWORD PTR [r12]
  0021e	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  00222	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  00227	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  0022a	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  0022f	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  00234	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  0023a	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7249 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00240	0f 8e b1 00 00
	00		 jle	 $LN6@Insertion_
  00246	49 83 c6 b0	 add	 r14, -80		; ffffffffffffffb0H
  0024a	4c 8b 6d a7	 mov	 r13, QWORD PTR tv1667[rbp-153]
  0024e	66 90		 npad	 2
$LL7@Insertion_:
  00250	41 8b 04 24	 mov	 eax, DWORD PTR [r12]
  00254	41 89 07	 mov	 DWORD PTR [r15], eax
  00257	41 8b 46 fc	 mov	 eax, DWORD PTR [r14-4]
  0025b	41 89 47 04	 mov	 DWORD PTR [r15+4], eax
  0025f	49 8d 7f 08	 lea	 rdi, QWORD PTR [r15+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  00263	49 3b fe	 cmp	 rdi, r14
  00266	74 2a		 je	 SHORT $LN99@Insertion_

; 2776 :         _Tidy_deallocate();

  00268	48 8b cf	 mov	 rcx, rdi
  0026b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00270	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  00274	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  00277	41 0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [r14+16]
  0027c	0f 11 4f 10	 movups	 XMMWORD PTR [rdi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00280	33 c0		 xor	 eax, eax
  00282	49 89 46 10	 mov	 QWORD PTR [r14+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00286	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0028e	66 41 89 06	 mov	 WORD PTR [r14], ax
$LN99@Insertion_:
  00292	41 8b 46 20	 mov	 eax, DWORD PTR [r14+32]
  00296	41 89 47 28	 mov	 DWORD PTR [r15+40], eax
  0029a	49 8b 46 28	 mov	 rax, QWORD PTR [r14+40]
  0029e	49 89 47 30	 mov	 QWORD PTR [r15+48], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7249 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  002a2	4d 8b fc	 mov	 r15, r12
  002a5	49 83 ec 38	 sub	 r12, 56			; 00000038H
  002a9	49 83 ee 38	 sub	 r14, 56			; 00000038H
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 49   : 		BufferID lID = _views[l._iView]->getBufferByIndex(l._docIndex);

  002ad	49 8b d5	 mov	 rdx, r13
  002b0	48 8b 45 af	 mov	 rax, QWORD PTR tv1662[rbp-153]
  002b4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  002b7	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  002bc	48 8b f0	 mov	 rsi, rax

; 50   : 		BufferID rID = _views[r._iView]->getBufferByIndex(r._docIndex);

  002bf	49 63 56 fc	 movsxd	 rdx, DWORD PTR [r14-4]
  002c3	49 63 0c 24	 movsxd	 rcx, DWORD PTR [r12]
  002c7	48 8b 0c cb	 mov	 rcx, QWORD PTR [rbx+rcx*8]
  002cb	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  002d0	48 8b f8	 mov	 rdi, rax

; 51   : 		Buffer * bufL = MainFileManager.getBufferByID(lID);

  002d3	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 52   : 		Buffer * bufR = MainFileManager.getBufferByID(rID);

  002d8	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 53   : 		return bufL->getRecentTag() > bufR->getRecentTag();

  002dd	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [rdi+220]
  002e3	39 8e dc 00 00
	00		 cmp	 DWORD PTR [rsi+220], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7249 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  002e9	0f 8f 61 ff ff
	ff		 jg	 $LL7@Insertion_
  002ef	4c 8b 6d bf	 mov	 r13, QWORD PTR _First$GSCopy$1$[rbp-153]
  002f3	4c 8b 75 9f	 mov	 r14, QWORD PTR tv1656[rbp-153]
$LN6@Insertion_:
  002f7	8b 45 87	 mov	 eax, DWORD PTR _Val$1$[rbp-153]
  002fa	41 89 07	 mov	 DWORD PTR [r15], eax
  002fd	8b 45 8b	 mov	 eax, DWORD PTR _Val$3$[rbp-153]
  00300	41 89 47 04	 mov	 DWORD PTR [r15+4], eax
  00304	49 8d 7f 08	 lea	 rdi, QWORD PTR [r15+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  00308	48 8d 45 f7	 lea	 rax, QWORD PTR _Val$1[rbp-145]
  0030c	48 3b f8	 cmp	 rdi, rax
  0030f	74 6b		 je	 SHORT $LN206@Insertion_

; 2319 :         return _BUF_SIZE <= _Myres;

  00311	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  00315	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00319	72 35		 jb	 SHORT $LN140@Insertion_

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0031b	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0031e	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00326	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0032d	72 1c		 jb	 SHORT $LN139@Insertion_

; 155  :     _Bytes += _Non_user_size;

  0032f	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00333	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00337	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0033a	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0033e	48 83 f8 1f	 cmp	 rax, 31
  00342	0f 87 df 00 00
	00		 ja	 $LN136@Insertion_

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00348	49 8b c8	 mov	 rcx, r8
$LN139@Insertion_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0034b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN140@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00350	33 c9		 xor	 ecx, ecx

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00352	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0035a	0f 10 45 cf	 movups	 xmm0, XMMWORD PTR _Val$7$[rbp-153]
  0035e	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  00361	0f 10 4d df	 movups	 xmm1, XMMWORD PTR _Val$8$[rbp-153]
  00365	0f 11 4f 10	 movups	 XMMWORD PTR [rdi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00369	48 89 4d 07	 mov	 QWORD PTR _Val$1[rbp-129], rcx

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0036d	b8 07 00 00 00	 mov	 eax, 7
  00372	48 89 45 0f	 mov	 QWORD PTR _Val$1[rbp-121], rax

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00376	66 89 4d f7	 mov	 WORD PTR _Val$1[rbp-145], cx

; 2850 :         if (this != _STD addressof(_Right)) {

  0037a	eb 04		 jmp	 SHORT $LN144@Insertion_
$LN206@Insertion_:
  0037c	48 8b 45 0f	 mov	 rax, QWORD PTR _Val$1[rbp-121]
$LN144@Insertion_:
  00380	8b 4d 8f	 mov	 ecx, DWORD PTR _Val$2$[rbp-153]
  00383	41 89 4f 28	 mov	 DWORD PTR [r15+40], ecx
  00387	48 8b 4d b7	 mov	 rcx, QWORD PTR _Val$4$[rbp-153]
  0038b	49 89 4f 30	 mov	 QWORD PTR [r15+48], rcx
  0038f	4c 8b 65 97	 mov	 r12, QWORD PTR _Mid$1$[rbp-153]
$LN159@Insertion_:

; 2319 :         return _BUF_SIZE <= _Myres;

  00393	48 83 f8 08	 cmp	 rax, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00397	72 32		 jb	 SHORT $LN186@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00399	48 8d 14 45 02
	00 00 00	 lea	 rdx, QWORD PTR [rax*2+2]
  003a1	48 8b 4d f7	 mov	 rcx, QWORD PTR _Val$1[rbp-145]
  003a5	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003a8	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  003af	72 15		 jb	 SHORT $LN185@Insertion_

; 155  :     _Bytes += _Non_user_size;

  003b1	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003b5	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  003b9	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003bc	48 83 c0 f8	 add	 rax, -8
  003c0	48 83 f8 1f	 cmp	 rax, 31
  003c4	77 67		 ja	 SHORT $LN182@Insertion_
$LN185@Insertion_:

; 264  :         ::operator delete(_Ptr, _Bytes);

  003c6	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN186@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  003cb	33 d2		 xor	 edx, edx
  003cd	48 89 55 07	 mov	 QWORD PTR _Val$1[rbp-129], rdx

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003d1	48 c7 45 0f 07
	00 00 00	 mov	 QWORD PTR _Val$1[rbp-121], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003d9	66 89 55 f7	 mov	 WORD PTR _Val$1[rbp-145], dx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7241 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  003dd	49 83 c4 38	 add	 r12, 56			; 00000038H
  003e1	4c 89 65 97	 mov	 QWORD PTR _Mid$1$[rbp-153], r12
  003e5	49 83 c6 38	 add	 r14, 56			; 00000038H
  003e9	4c 89 75 9f	 mov	 QWORD PTR tv1656[rbp-153], r14
  003ed	48 8b 45 c7	 mov	 rax, QWORD PTR _Last$1$[rbp-153]
  003f1	4c 3b e0	 cmp	 r12, rax
  003f4	0f 85 76 fc ff
	ff		 jne	 $LL2@Insertion_
$LN204@Insertion_:

; 7259 : }

  003fa	48 8b 4d 27	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-153]
  003fe	48 33 cc	 xor	 rcx, rsp
  00401	e8 00 00 00 00	 call	 __security_check_cookie
  00406	4c 8d 9c 24 d0
	00 00 00	 lea	 r11, QWORD PTR [rsp+208]
  0040e	49 8b 5b 38	 mov	 rbx, QWORD PTR [r11+56]
  00412	49 8b 73 40	 mov	 rsi, QWORD PTR [r11+64]
  00416	49 8b 7b 48	 mov	 rdi, QWORD PTR [r11+72]
  0041a	49 8b e3	 mov	 rsp, r11
  0041d	41 5f		 pop	 r15
  0041f	41 5e		 pop	 r14
  00421	41 5d		 pop	 r13
  00423	41 5c		 pop	 r12
  00425	5d		 pop	 rbp
  00426	c3		 ret	 0
$LN136@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00427	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0042c	90		 npad	 1
$LN182@Insertion_:
  0042d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00432	cc		 int	 3
$LN207@Insertion_:
??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$1@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$0@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$2@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$1@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$0@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Val$1$ = 32
_Val$3$ = 36
_Val$2$ = 40
_Mid$1$ = 48
tv1656 = 56
tv1667 = 64
tv1662 = 72
_Val$4$ = 80
_First$GSCopy$1$ = 88
_Last$1$ = 96
_Val$7$ = 104
_Val$8$ = 120
_Val$1 = 136
__$ArrayPad$ = 192
_First$ = 256
_Last$ = 264
_Pred$ = 272
?dtor$2@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Val$1[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 0
$T1 = 48
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z PROC ; std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >, COMDAT

; 1693 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN67:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b d2	 mov	 r10, rdx

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	4c 89 04 24	 mov	 QWORD PTR _Backout$[rsp], r8
  0000b	4c 89 44 24 08	 mov	 QWORD PTR _Backout$[rsp+8], r8
  00010	4c 89 4c 24 10	 mov	 QWORD PTR _Backout$[rsp+16], r9

; 1694 :     // move [_First, _Last) to raw _Dest, using _Al
; 1695 :     // note: only called internally from elsewhere in the STL
; 1696 :     using _Ptrval     = typename _Alloc::value_type*;
; 1697 :     auto _UFirst      = _Get_unwrapped(_First);
; 1698 :     const auto _ULast = _Get_unwrapped(_Last);
; 1699 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1700 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1701 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1702 :         if (!_STD is_constant_evaluated())
; 1703 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1704 :         {
; 1705 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1706 :             return _Dest + (_ULast - _UFirst);
; 1707 :         }
; 1708 :     }
; 1709 : 
; 1710 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1711 :     for (; _UFirst != _ULast; ++_UFirst) {

  00015	48 3b ca	 cmp	 rcx, rdx
  00018	74 6d		 je	 SHORT $LN3@Uninitiali

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0001a	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0001e	45 33 c9	 xor	 r9d, r9d
$LL4@Uninitiali:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00021	4c 89 44 24 30	 mov	 QWORD PTR $T1[rsp], r8
  00026	8b 41 d0	 mov	 eax, DWORD PTR [rcx-48]
  00029	41 89 00	 mov	 DWORD PTR [r8], eax
  0002c	48 8b 41 d8	 mov	 rax, QWORD PTR [rcx-40]
  00030	49 89 40 08	 mov	 QWORD PTR [r8+8], rax
  00034	48 8b 41 e0	 mov	 rax, QWORD PTR [rcx-32]
  00038	49 89 40 10	 mov	 QWORD PTR [r8+16], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0003c	4d 89 48 18	 mov	 QWORD PTR [r8+24], r9

; 2355 :     size_type _Mysize = 0; // current length of string

  00040	4d 89 48 28	 mov	 QWORD PTR [r8+40], r9

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00044	4d 89 48 30	 mov	 QWORD PTR [r8+48], r9

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00048	0f 10 41 e8	 movups	 xmm0, XMMWORD PTR [rcx-24]
  0004c	41 0f 11 40 18	 movups	 XMMWORD PTR [r8+24], xmm0
  00051	0f 10 49 f8	 movups	 xmm1, XMMWORD PTR [rcx-8]
  00055	41 0f 11 48 28	 movups	 XMMWORD PTR [r8+40], xmm1

; 4596 :         _My_data._Mysize = 0;

  0005a	4c 89 49 f8	 mov	 QWORD PTR [rcx-8], r9

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0005e	48 c7 01 07 00
	00 00		 mov	 QWORD PTR [rcx], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00065	66 44 89 49 e8	 mov	 WORD PTR [rcx-24], r9w
  0006a	8b 51 08	 mov	 edx, DWORD PTR [rcx+8]
  0006d	41 89 50 38	 mov	 DWORD PTR [r8+56], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1612 :         ++_Last;

  00071	49 83 c0 40	 add	 r8, 64			; 00000040H
  00075	4c 89 44 24 08	 mov	 QWORD PTR _Backout$[rsp+8], r8

; 1694 :     // move [_First, _Last) to raw _Dest, using _Al
; 1695 :     // note: only called internally from elsewhere in the STL
; 1696 :     using _Ptrval     = typename _Alloc::value_type*;
; 1697 :     auto _UFirst      = _Get_unwrapped(_First);
; 1698 :     const auto _ULast = _Get_unwrapped(_Last);
; 1699 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1700 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1701 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1702 :         if (!_STD is_constant_evaluated())
; 1703 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1704 :         {
; 1705 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1706 :             return _Dest + (_ULast - _UFirst);
; 1707 :         }
; 1708 :     }
; 1709 : 
; 1710 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1711 :     for (; _UFirst != _ULast; ++_UFirst) {

  0007a	48 8d 49 40	 lea	 rcx, QWORD PTR [rcx+64]
  0007e	48 8d 51 d0	 lea	 rdx, QWORD PTR [rcx-48]
  00082	49 3b d2	 cmp	 rdx, r10
  00085	75 9a		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1616 :         _First = _Last;

  00087	4c 89 04 24	 mov	 QWORD PTR _Backout$[rsp], r8

; 1712 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1713 :     }
; 1714 : 
; 1715 :     return _Backout._Release();

  0008b	49 8b c0	 mov	 rax, r8

; 1716 : }

  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	c3		 ret	 0
??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z ENDP ; std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 0
$T1 = 48
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
?dtor$0@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8d 8a 00 00
	00 00		 lea	 rcx, QWORD PTR _Backout$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$0@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 0
$T1 = 48
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
?dtor$1@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 0
$T1 = 48
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
?dtor$0@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8d 8a 00 00
	00 00		 lea	 rcx, QWORD PTR _Backout$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$0@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 0
$T1 = 48
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
?dtor$1@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN17:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00004	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00008	48 3b c1	 cmp	 rax, rcx
  0000b	76 27		 jbe	 SHORT $LN16@Allocate_m

; 85   :         return ::operator new(_Bytes);

  0000d	48 8b c8	 mov	 rcx, rax
  00010	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00015	48 8b c8	 mov	 rcx, rax

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00018	48 85 c0	 test	 rax, rax
  0001b	74 11		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0001d	48 83 c0 27	 add	 rax, 39			; 00000027H
  00021	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00025	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
$LN7@Allocate_m:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00033	cc		 int	 3
$LN16@Allocate_m:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  00034	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00039	cc		 int	 3
$LN14@Allocate_m:
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_First$ = 80
_First$1 = 80
this$ = 80
_First$ = 88
_Last$ = 96
__formal$ = 104
??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>, COMDAT

; 1138 :     _CONSTEXPR20_CONTAINER void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN89:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	41 54		 push	 r12
  00012	41 55		 push	 r13
  00014	41 56		 push	 r14
  00016	41 57		 push	 r15
  00018	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001c	4d 8b e8	 mov	 r13, r8
  0001f	4c 8b e2	 mov	 r12, rdx
  00022	48 8b f1	 mov	 rsi, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 1590 :         return _Last - _First; // assume the iterator will do debug checking

  00025	49 8b f8	 mov	 rdi, r8
  00028	48 2b fa	 sub	 rdi, rdx
  0002b	48 c1 ff 06	 sar	 rdi, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1164 :         auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0002f	4c 8b 79 08	 mov	 r15, QWORD PTR [rcx+8]
  00033	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00036	49 8b ef	 mov	 rbp, r15
  00039	48 2b eb	 sub	 rbp, rbx
  0003c	48 c1 fd 06	 sar	 rbp, 6

; 1165 : 
; 1166 :         if (_Newsize > _Oldsize) {

  00040	48 3b fd	 cmp	 rdi, rbp
  00043	0f 86 01 01 00
	00		 jbe	 $LN2@Assign_ran

; 1167 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00049	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  0004d	48 8b ca	 mov	 rcx, rdx
  00050	48 2b cb	 sub	 rcx, rbx
  00053	48 c1 f9 06	 sar	 rcx, 6

; 1168 :             if (_Newsize > _Oldcapacity) { // reallocate

  00057	48 3b f9	 cmp	 rdi, rcx
  0005a	0f 86 bd 00 00
	00		 jbe	 $LN4@Assign_ran

; 1350 :         if (_Newsize > max_size()) {

  00060	49 be ff ff ff
	ff ff ff ff 03	 mov	 r14, 288230376151711743	; 03ffffffffffffffH
  0006a	49 3b fe	 cmp	 rdi, r14
  0006d	0f 87 3b 01 00
	00		 ja	 $LN87@Assign_ran

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00073	4c 8b c1	 mov	 r8, rcx
  00076	49 d1 e8	 shr	 r8, 1
  00079	49 8b c6	 mov	 rax, r14
  0007c	49 2b c0	 sub	 rax, r8
  0007f	48 3b c8	 cmp	 rcx, rax
  00082	77 0b		 ja	 SHORT $LN14@Assign_ran

; 1689 :             return _Max; // geometric growth would overflow
; 1690 :         }
; 1691 : 
; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00084	4d 8d 34 08	 lea	 r14, QWORD PTR [r8+rcx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  00088	4c 3b f7	 cmp	 r14, rdi
  0008b	4c 0f 42 f7	 cmovb	 r14, rdi
$LN14@Assign_ran:

; 1356 :         if (_Myfirst) { // destroy and deallocate old array

  0008f	33 ed		 xor	 ebp, ebp
  00091	48 85 db	 test	 rbx, rbx
  00094	74 67		 je	 SHORT $LN10@Assign_ran

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00096	48 89 5c 24 50	 mov	 QWORD PTR _First$1[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0009b	49 3b df	 cmp	 rbx, r15
  0009e	74 1e		 je	 SHORT $LN22@Assign_ran
$LL23@Assign_ran:
  000a0	48 8d 4b 18	 lea	 rcx, QWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  000a4	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  000a9	48 83 c3 40	 add	 rbx, 64			; 00000040H
  000ad	48 89 5c 24 50	 mov	 QWORD PTR _First$1[rsp], rbx
  000b2	49 3b df	 cmp	 rbx, r15
  000b5	75 e9		 jne	 SHORT $LL23@Assign_ran
  000b7	48 8b 56 10	 mov	 rdx, QWORD PTR [rsi+16]
  000bb	48 8b 1e	 mov	 rbx, QWORD PTR [rsi]
$LN22@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1358 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000be	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	48 83 e2 c0	 and	 rdx, -64		; ffffffffffffffc0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000c5	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000cc	72 1c		 jb	 SHORT $LN49@Assign_ran

; 155  :     _Bytes += _Non_user_size;

  000ce	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000d2	48 8b 4b f8	 mov	 rcx, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000d6	48 2b d9	 sub	 rbx, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d9	48 8d 43 f8	 lea	 rax, QWORD PTR [rbx-8]
  000dd	48 83 f8 1f	 cmp	 rax, 31
  000e1	0f 87 c1 00 00
	00		 ja	 $LN46@Assign_ran

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000e7	48 8b d9	 mov	 rbx, rcx
$LN49@Assign_ran:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ea	48 8b cb	 mov	 rcx, rbx
  000ed	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1360 :             _Myfirst = nullptr;

  000f2	48 89 2e	 mov	 QWORD PTR [rsi], rbp

; 1361 :             _Mylast  = nullptr;

  000f5	48 89 6e 08	 mov	 QWORD PTR [rsi+8], rbp

; 1362 :             _Myend   = nullptr;

  000f9	48 89 6e 10	 mov	 QWORD PTR [rsi+16], rbp
$LN10@Assign_ran:

; 1711 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  000fd	49 8b d6	 mov	 rdx, r14
  00100	48 8b ce	 mov	 rcx, rsi
  00103	e8 00 00 00 00	 call	 ?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::allocate
  00108	48 8b d8	 mov	 rbx, rax

; 1712 :         _Myfirst           = _Newvec;

  0010b	48 89 06	 mov	 QWORD PTR [rsi], rax

; 1713 :         _Mylast            = _Newvec;

  0010e	48 89 46 08	 mov	 QWORD PTR [rsi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  00112	49 c1 e6 06	 shl	 r14, 6
  00116	4c 03 f0	 add	 r14, rax
  00119	4c 89 76 10	 mov	 QWORD PTR [rsi+16], r14
$LN4@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 1561 :         _Where += _Off;

  0011d	48 c1 e5 06	 shl	 rbp, 6
  00121	49 03 ec	 add	 rbp, r12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1175 :             _Copy_unchecked(_First, _Mid, _Myfirst);

  00124	4c 8b c3	 mov	 r8, rbx
  00127	48 8b d5	 mov	 rdx, rbp
  0012a	49 8b cc	 mov	 rcx, r12
  0012d	e8 00 00 00 00	 call	 ??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z ; std::_Copy_unchecked<recordedMacroStep *,recordedMacroStep *>

; 1176 :             _Mylast = _Ucopy(_Mid, _Last, _Mylast);

  00132	4c 8b 4e 08	 mov	 r9, QWORD PTR [rsi+8]
  00136	4d 8b c5	 mov	 r8, r13
  00139	48 8b d5	 mov	 rdx, rbp
  0013c	48 8b ce	 mov	 rcx, rsi
  0013f	e8 00 00 00 00	 call	 ??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>
  00144	48 89 46 08	 mov	 QWORD PTR [rsi+8], rax

; 1177 :         } else {

  00148	eb 41		 jmp	 SHORT $LN3@Assign_ran
$LN2@Assign_ran:

; 1178 :             const pointer _Newlast = _Myfirst + _Newsize;

  0014a	48 c1 e7 06	 shl	 rdi, 6
  0014e	48 03 fb	 add	 rdi, rbx

; 1179 :             _Copy_unchecked(_First, _Last, _Myfirst);

  00151	4c 8b c3	 mov	 r8, rbx
  00154	49 8b d5	 mov	 rdx, r13
  00157	49 8b cc	 mov	 rcx, r12
  0015a	e8 00 00 00 00	 call	 ??$_Copy_unchecked@PEAUrecordedMacroStep@@PEAU1@@std@@YAPEAUrecordedMacroStep@@PEAU1@00@Z ; std::_Copy_unchecked<recordedMacroStep *,recordedMacroStep *>

; 1180 :             _Destroy(_Newlast, _Mylast);

  0015f	48 8b 6e 08	 mov	 rbp, QWORD PTR [rsi+8]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00163	48 8b df	 mov	 rbx, rdi
  00166	48 89 5c 24 50	 mov	 QWORD PTR _First$[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0016b	48 3b fd	 cmp	 rdi, rbp
  0016e	74 17		 je	 SHORT $LN64@Assign_ran
$LL65@Assign_ran:
  00170	48 8d 4b 18	 lea	 rcx, QWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00174	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00179	48 83 c3 40	 add	 rbx, 64			; 00000040H
  0017d	48 89 5c 24 50	 mov	 QWORD PTR _First$[rsp], rbx
  00182	48 3b dd	 cmp	 rbx, rbp
  00185	75 e9		 jne	 SHORT $LL65@Assign_ran
$LN64@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1181 :             _Mylast = _Newlast;

  00187	48 89 7e 08	 mov	 QWORD PTR [rsi+8], rdi
$LN3@Assign_ran:

; 1182 :         }
; 1183 :     }

  0018b	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00190	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
  00195	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  0019a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0019e	41 5f		 pop	 r15
  001a0	41 5e		 pop	 r14
  001a2	41 5d		 pop	 r13
  001a4	41 5c		 pop	 r12
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
$LN46@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001a8	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001ad	cc		 int	 3
$LN87@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1351 :             _Xlength();

  001ae	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Xlength
  001b3	cc		 int	 3
$LN85@Assign_ran:
??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 80
_First$1 = 80
this$ = 80
_First$ = 88
_Last$ = 96
__formal$ = 104
?dtor$0@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$0
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR _First$1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 80
_First$1 = 80
this$ = 80
_First$ = 88
_Last$ = 96
__formal$ = 104
?dtor$1@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$1
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 80
_First$1 = 80
this$ = 80
_First$ = 88
_Last$ = 96
__formal$ = 104
?dtor$0@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$0
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR _First$1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 80
_First$1 = 80
this$ = 80
_First$ = 88
_Last$ = 96
__formal$ = 104
?dtor$1@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$1
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z PROC ; std::_Copy_memmove<HWND__ * *,HWND__ * *>, COMDAT

; 4153 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8

; 4154 :     auto _FirstPtr              = _To_address(_First);
; 4155 :     auto _LastPtr               = _To_address(_Last);
; 4156 :     auto _DestPtr               = _To_address(_Dest);
; 4157 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4158 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4159 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00010	48 2b d9	 sub	 rbx, rcx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 4162 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4163 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]

; 4164 :     } else {
; 4165 :         return _Dest + (_LastPtr - _FirstPtr);
; 4166 :     }
; 4167 : }

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Copy_memmove@PEAPEAUHWND__@@PEAPEAU1@@std@@YAPEAPEAUHWND__@@PEAPEAU1@00@Z ENDP ; std::_Copy_memmove<HWND__ * *,HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
;	COMDAT ??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z
_TEXT	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z PROC ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >, COMDAT

; 7365 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

$LN94:
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 56		 push	 r14
  00009	41 57		 push	 r15
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00019	48 33 c4	 xor	 rax, rsp
  0001c	48 89 44 24 78	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00021	49 8b d9	 mov	 rbx, r9
  00024	49 8b e8	 mov	 rbp, r8
  00027	48 8b fa	 mov	 rdi, rdx
  0002a	48 8b f1	 mov	 rsi, rcx

; 7366 :     // order [_First, _Last)
; 7367 :     for (;;) {
; 7368 :         if (_Last - _First <= _ISORT_MAX) { // small

  0002d	48 8b c2	 mov	 rax, rdx
  00030	48 2b c1	 sub	 rax, rcx
  00033	48 3d 38 07 00
	00		 cmp	 rax, 1848		; 00000738H
  00039	0f 8c b6 00 00
	00		 jl	 $LN82@Sort_unche
  0003f	49 bc 25 49 92
	24 49 92 24 49	 mov	 r12, 5270498306774157605 ; 4924924924924925H
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@Sort_unche:

; 7370 :             return;
; 7371 :         }
; 7372 : 
; 7373 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00050	48 85 ed	 test	 rbp, rbp
  00053	0f 8e c9 00 00
	00		 jle	 $LN83@Sort_unche

; 7375 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 7376 :             return;
; 7377 :         }
; 7378 : 
; 7379 :         // divide and conquer by quicksort
; 7380 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00059	4c 8b cb	 mov	 r9, rbx
  0005c	4c 8b c7	 mov	 r8, rdi
  0005f	48 8b d6	 mov	 rdx, rsi
  00062	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Mid$1[rsp]
  00067	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YA?AU?$pair@PEAUTaskLstFnStatus@@PEAU1@@0@PEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Partition_by_median_guess_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7381 : 
; 7382 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions

  0006c	48 8b cd	 mov	 rcx, rbp
  0006f	48 c1 f9 02	 sar	 rcx, 2
  00073	48 d1 fd	 sar	 rbp, 1
  00076	48 03 e9	 add	 rbp, rcx

; 7383 : 
; 7384 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00079	48 8b cf	 mov	 rcx, rdi
  0007c	4c 8b 74 24 38	 mov	 r14, QWORD PTR _Mid$1[rsp+8]
  00081	49 2b ce	 sub	 rcx, r14
  00084	49 8b c4	 mov	 rax, r12
  00087	48 f7 e9	 imul	 rcx
  0008a	4c 8b c2	 mov	 r8, rdx
  0008d	49 c1 f8 04	 sar	 r8, 4
  00091	49 8b c0	 mov	 rax, r8
  00094	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00098	4c 03 c0	 add	 r8, rax
  0009b	4c 8b 7c 24 30	 mov	 r15, QWORD PTR _Mid$1[rsp]
  000a0	49 8b d7	 mov	 rdx, r15
  000a3	48 2b d6	 sub	 rdx, rsi
  000a6	49 8b c4	 mov	 rax, r12
  000a9	48 f7 ea	 imul	 rdx
  000ac	48 c1 fa 04	 sar	 rdx, 4
  000b0	48 8b c2	 mov	 rax, rdx
  000b3	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  000b7	48 03 d0	 add	 rdx, rax
  000ba	4c 8b cb	 mov	 r9, rbx
  000bd	49 3b d0	 cmp	 rdx, r8
  000c0	4c 8b c5	 mov	 r8, rbp
  000c3	7d 10		 jge	 SHORT $LN7@Sort_unche

; 7385 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  000c5	49 8b d7	 mov	 rdx, r15
  000c8	48 8b ce	 mov	 rcx, rsi
  000cb	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7386 :             _First = _Mid.second;

  000d0	49 8b f6	 mov	 rsi, r14

; 7387 :         } else { // loop on first half

  000d3	eb 0e		 jmp	 SHORT $LN8@Sort_unche
$LN7@Sort_unche:

; 7388 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  000d5	48 8b d7	 mov	 rdx, rdi
  000d8	49 8b ce	 mov	 rcx, r14
  000db	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 7389 :             _Last = _Mid.first;

  000e0	49 8b ff	 mov	 rdi, r15
$LN8@Sort_unche:

; 7366 :     // order [_First, _Last)
; 7367 :     for (;;) {
; 7368 :         if (_Last - _First <= _ISORT_MAX) { // small

  000e3	48 8b c7	 mov	 rax, rdi
  000e6	48 2b c6	 sub	 rax, rsi
  000e9	48 3d 38 07 00
	00		 cmp	 rax, 1848		; 00000738H
  000ef	0f 8d 5b ff ff
	ff		 jge	 $LL2@Sort_unche
$LN82@Sort_unche:

; 7369 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

  000f5	4c 8b c3	 mov	 r8, rbx
  000f8	48 8b d7	 mov	 rdx, rdi
  000fb	48 8b ce	 mov	 rcx, rsi
  000fe	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAPEAUTaskLstFnStatus@@QEAU1@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Insertion_sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
$LN12@Sort_unche:

; 7392 : }

  00103	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00108	48 33 cc	 xor	 rcx, rsp
  0010b	e8 00 00 00 00	 call	 __security_check_cookie
  00110	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00117	41 5f		 pop	 r15
  00119	41 5e		 pop	 r14
  0011b	41 5c		 pop	 r12
  0011d	5f		 pop	 rdi
  0011e	5e		 pop	 rsi
  0011f	5d		 pop	 rbp
  00120	5b		 pop	 rbx
  00121	c3		 ret	 0
$LN83@Sort_unche:

; 7374 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00122	4c 8b c3	 mov	 r8, rbx
  00125	48 8b d7	 mov	 rdx, rdi
  00128	48 8b ce	 mov	 rcx, rsi
  0012b	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Make_heap_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >

; 6078 :     for (; _Last - _First >= 2; --_Last) {

  00130	48 8b c7	 mov	 rax, rdi
  00133	48 2b c6	 sub	 rax, rsi
  00136	48 83 f8 70	 cmp	 rax, 112		; 00000070H
  0013a	7c c7		 jl	 SHORT $LN12@Sort_unche

; 7374 :             _Make_heap_unchecked(_First, _Last, _Pred);

  0013c	48 83 c7 e8	 add	 rdi, -24
  00140	49 c7 c7 e0 ff
	ff ff		 mov	 r15, -32		; ffffffffffffffe0H
  00147	4c 2b fe	 sub	 r15, rsi
  0014a	41 be 18 00 00
	00		 mov	 r14d, 24
  00150	4c 2b f6	 sub	 r14, rsi
  00153	33 ed		 xor	 ebp, ebp
  00155	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL13@Sort_unche:

; 5714 :     if (2 <= _Last - _First) {

  00160	49 8d 0c 3e	 lea	 rcx, QWORD PTR [r14+rdi]
  00164	49 8b c4	 mov	 rax, r12
  00167	48 f7 e9	 imul	 rcx
  0016a	48 c1 fa 04	 sar	 rdx, 4
  0016e	48 8b c2	 mov	 rax, rdx
  00171	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00175	48 03 d0	 add	 rdx, rax
  00178	48 83 fa 02	 cmp	 rdx, 2
  0017c	0f 8c d7 00 00
	00		 jl	 $LN11@Sort_unche
  00182	48 8d 4f e0	 lea	 rcx, QWORD PTR [rdi-32]
  00186	8b 01		 mov	 eax, DWORD PTR [rcx]
  00188	89 44 24 40	 mov	 DWORD PTR _Val$2[rsp], eax
  0018c	8b 47 e4	 mov	 eax, DWORD PTR [rdi-28]
  0018f	89 44 24 44	 mov	 DWORD PTR _Val$2[rsp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00193	48 89 6c 24 48	 mov	 QWORD PTR _Val$2[rsp+8], rbp

; 2355 :     size_type _Mysize = 0; // current length of string

  00198	48 89 6c 24 58	 mov	 QWORD PTR _Val$2[rsp+24], rbp

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0019d	48 89 6c 24 60	 mov	 QWORD PTR _Val$2[rsp+32], rbp

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001a2	0f 10 47 e8	 movups	 xmm0, XMMWORD PTR [rdi-24]
  001a6	0f 11 44 24 48	 movups	 XMMWORD PTR _Val$2[rsp+8], xmm0
  001ab	0f 10 4f f8	 movups	 xmm1, XMMWORD PTR [rdi-8]
  001af	0f 11 4c 24 58	 movups	 XMMWORD PTR _Val$2[rsp+24], xmm1

; 4596 :         _My_data._Mysize = 0;

  001b4	48 89 6f f8	 mov	 QWORD PTR [rdi-8], rbp

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001b8	48 c7 07 07 00
	00 00		 mov	 QWORD PTR [rdi], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001bf	66 89 6f e8	 mov	 WORD PTR [rdi-24], bp
  001c3	8b 47 08	 mov	 eax, DWORD PTR [rdi+8]
  001c6	89 44 24 68	 mov	 DWORD PTR _Val$2[rsp+40], eax
  001ca	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  001ce	48 89 44 24 70	 mov	 QWORD PTR _Val$2[rsp+48], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 5705 :     *_Dest      = _STD move(*_First);

  001d3	48 8b d6	 mov	 rdx, rsi
  001d6	e8 00 00 00 00	 call	 ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z

; 5706 :     using _Diff = _Iter_diff_t<_RanIt>;
; 5707 :     _Pop_heap_hole_by_index(

  001db	49 8d 0c 3f	 lea	 rcx, QWORD PTR [r15+rdi]
  001df	49 8b c4	 mov	 rax, r12
  001e2	48 f7 e9	 imul	 rcx
  001e5	48 c1 fa 04	 sar	 rdx, 4
  001e9	4c 8b c2	 mov	 r8, rdx
  001ec	49 c1 e8 3f	 shr	 r8, 63			; 0000003fH
  001f0	4c 03 c2	 add	 r8, rdx
  001f3	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  001f8	4c 8d 4c 24 40	 lea	 r9, QWORD PTR _Val$2[rsp]
  001fd	33 d2		 xor	 edx, edx
  001ff	48 8b ce	 mov	 rcx, rsi
  00202	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PEAUTaskLstFnStatus@@U1@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@_J1$$QEAU1@U?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Pop_heap_hole_by_index<TaskLstFnStatus *,TaskLstFnStatus,std::_Ref_fn<SortTaskListPred> >
  00207	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00208	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Val$2[rsp+32]
  0020d	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00211	72 33		 jb	 SHORT $LN71@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00213	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0021b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val$2[rsp+8]
  00220	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00223	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0022a	72 15		 jb	 SHORT $LN70@Sort_unche

; 155  :     _Bytes += _Non_user_size;

  0022c	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00230	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00234	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00237	48 83 c0 f8	 add	 rax, -8
  0023b	48 83 f8 1f	 cmp	 rax, 31
  0023f	77 2f		 ja	 SHORT $LN67@Sort_unche
$LN70@Sort_unche:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00241	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN71@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00246	48 89 6c 24 58	 mov	 QWORD PTR _Val$2[rsp+24], rbp

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0024b	48 c7 44 24 60
	07 00 00 00	 mov	 QWORD PTR _Val$2[rsp+32], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00254	66 89 6c 24 48	 mov	 WORD PTR _Val$2[rsp+8], bp
$LN11@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 6078 :     for (; _Last - _First >= 2; --_Last) {

  00259	48 83 ef 38	 sub	 rdi, 56			; 00000038H
  0025d	49 8d 04 3e	 lea	 rax, QWORD PTR [r14+rdi]
  00261	48 83 f8 70	 cmp	 rax, 112		; 00000070H
  00265	0f 8c 98 fe ff
	ff		 jl	 $LN12@Sort_unche
  0026b	e9 f0 fe ff ff	 jmp	 $LL13@Sort_unche
$LN67@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00270	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00275	cc		 int	 3
$LN91@Sort_unche:
??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z ENDP ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$1@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$0@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$2@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$1@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$0@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1TaskLstFnStatus@@QEAA@XZ
?dtor$0@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
?dtor$2@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA PROC ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Val$2[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z@4HA ENDP ; `std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20_DYNALLOC void* _Allocate(const size_t _Bytes) {

$LN24:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())
; 235  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00004	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0000b	72 2a		 jb	 SHORT $LN2@Allocate

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0000d	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00011	48 3b c1	 cmp	 rax, rcx
  00014	76 36		 jbe	 SHORT $LN23@Allocate

; 85   :         return ::operator new(_Bytes);

  00016	48 8b c8	 mov	 rcx, rax
  00019	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0001e	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00021	48 85 c0	 test	 rax, rax
  00024	74 2c		 je	 SHORT $LN11@Allocate

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00026	48 83 c0 27	 add	 rax, 39			; 00000027H
  0002a	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  0002e	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 248  : }

  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	c3		 ret	 0
$LN2@Allocate:

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00037	48 85 c9	 test	 rcx, rcx
  0003a	74 09		 je	 SHORT $LN3@Allocate

; 248  : }

  0003c	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 85   :         return ::operator new(_Bytes);

  00040	e9 00 00 00 00	 jmp	 ??2@YAPEAX_K@Z		; operator new
$LN3@Allocate:

; 244  :         return _Traits::_Allocate(_Bytes);
; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00045	33 c0		 xor	 eax, eax

; 248  : }

  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	c3		 ret	 0
$LN23@Allocate:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0004c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00051	cc		 int	 3
$LN11@Allocate:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00052	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00057	cc		 int	 3
$LN21@Allocate:
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z
_TEXT	SEGMENT
_Backout$1 = 32
$T2 = 80
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>, COMDAT

; 1652 :     _CONSTEXPR20_CONTAINER pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) {

$LN47:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	49 8b f9	 mov	 rdi, r9
  00012	49 8b f0	 mov	 rsi, r8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00015	4c 89 4c 24 20	 mov	 QWORD PTR _Backout$1[rsp], r9
  0001a	4c 89 4c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], r9
  0001f	48 89 4c 24 30	 mov	 QWORD PTR _Backout$1[rsp+16], rcx

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  00024	49 3b d0	 cmp	 rdx, r8
  00027	74 4a		 je	 SHORT $LN5@Ucopy

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00029	48 8d 5a 10	 lea	 rbx, QWORD PTR [rdx+16]
  0002d	0f 1f 00	 npad	 3
$LL6@Ucopy:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00030	48 89 7c 24 50	 mov	 QWORD PTR $T2[rsp], rdi
  00035	8b 43 f0	 mov	 eax, DWORD PTR [rbx-16]
  00038	89 07		 mov	 DWORD PTR [rdi], eax
  0003a	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]
  0003e	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
  00042	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00045	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
  00049	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0004d	48 8d 4f 18	 lea	 rcx, QWORD PTR [rdi+24]
  00051	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00056	90		 npad	 1
  00057	8b 4b 28	 mov	 ecx, DWORD PTR [rbx+40]
  0005a	89 4f 38	 mov	 DWORD PTR [rdi+56], ecx

; 1612 :         ++_Last;

  0005d	48 83 c7 40	 add	 rdi, 64			; 00000040H
  00061	48 89 7c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], rdi

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  00066	48 8d 5b 40	 lea	 rbx, QWORD PTR [rbx+64]
  0006a	48 8d 4b f0	 lea	 rcx, QWORD PTR [rbx-16]
  0006e	48 3b ce	 cmp	 rcx, rsi
  00071	75 bd		 jne	 SHORT $LL6@Ucopy
$LN5@Ucopy:

; 1616 :         _First = _Last;

  00073	48 89 7c 24 20	 mov	 QWORD PTR _Backout$1[rsp], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  00078	48 8b c7	 mov	 rax, rdi

; 1655 :     }

  0007b	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00080	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  00085	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00089	5f		 pop	 rdi
  0008a	c3		 ret	 0
??$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
$T2 = 80
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?dtor$0@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$0@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
$T2 = 80
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?dtor$1@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$1
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR $T2[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
$T2 = 80
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?dtor$0@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$0@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
$T2 = 80
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?dtor$1@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$1
  00000	48 8b 8a 50 00
	00 00		 mov	 rcx, QWORD PTR $T2[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Ucopy@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAPEAUrecordedMacroStep@@PEAU2@00@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Ucopy<recordedMacroStep *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >::~_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >::~_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z
_TEXT	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>, COMDAT

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN99:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	53		 push	 rbx
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 54		 push	 r12
  0000f	41 55		 push	 r13
  00011	41 56		 push	 r14
  00013	41 57		 push	 r15
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	4d 8b f0	 mov	 r14, r8
  0001c	48 8b f9	 mov	 rdi, rcx

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0001f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00022	48 8b da	 mov	 rbx, rdx
  00025	48 2b d8	 sub	 rbx, rax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00028	4c 8b 61 08	 mov	 r12, QWORD PTR [rcx+8]
  0002c	4c 2b e0	 sub	 r12, rax
  0002f	49 c1 fc 06	 sar	 r12, 6

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00033	48 be ff ff ff
	ff ff ff ff 03	 mov	 rsi, 288230376151711743	; 03ffffffffffffffH
  0003d	4c 3b e6	 cmp	 r12, rsi
  00040	0f 84 91 01 00
	00		 je	 $LN98@Emplace_re

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00046	49 ff c4	 inc	 r12

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00049	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004d	48 2b c8	 sub	 rcx, rax
  00050	48 c1 f9 06	 sar	 rcx, 6

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00054	48 8b d1	 mov	 rdx, rcx
  00057	48 d1 ea	 shr	 rdx, 1
  0005a	48 8b c6	 mov	 rax, rsi
  0005d	48 2b c2	 sub	 rax, rdx
  00060	48 3b c8	 cmp	 rcx, rax
  00063	77 0b		 ja	 SHORT $LN96@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow
; 1690 :         }
; 1691 : 
; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00065	48 8d 34 0a	 lea	 rsi, QWORD PTR [rdx+rcx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  00069	49 3b f4	 cmp	 rsi, r12
  0006c	49 0f 42 f4	 cmovb	 rsi, r12
$LN96@Emplace_re:

; 782  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 783  : 
; 784  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  00070	48 89 b4 24 98
	00 00 00	 mov	 QWORD PTR _Newcapacity$[rsp], rsi
  00078	48 8b d6	 mov	 rdx, rsi
  0007b	48 8b cf	 mov	 rcx, rdi
  0007e	e8 00 00 00 00	 call	 ?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::allocate
  00083	4c 8b e8	 mov	 r13, rax
  00086	48 89 44 24 30	 mov	 QWORD PTR _Newvec$[rsp], rax

; 785  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  0008b	48 83 e3 c0	 and	 rbx, -64		; ffffffffffffffc0H
  0008f	4c 8d 3c 03	 lea	 r15, QWORD PTR [rbx+rax]
  00093	49 8d 5f 40	 lea	 rbx, QWORD PTR [r15+64]
  00097	48 89 5c 24 28	 mov	 QWORD PTR _Constructed_last$[rsp], rbx

; 786  :         pointer _Constructed_first      = _Constructed_last;

  0009c	48 89 5c 24 20	 mov	 QWORD PTR _Constructed_first$[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  000a1	4c 89 7c 24 38	 mov	 QWORD PTR $T1[rsp], r15
  000a6	41 8b 06	 mov	 eax, DWORD PTR [r14]
  000a9	41 89 07	 mov	 DWORD PTR [r15], eax
  000ac	49 8b 46 08	 mov	 rax, QWORD PTR [r14+8]
  000b0	49 89 47 08	 mov	 QWORD PTR [r15+8], rax
  000b4	49 8b 46 10	 mov	 rax, QWORD PTR [r14+16]
  000b8	49 89 47 10	 mov	 QWORD PTR [r15+16], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000bc	33 c0		 xor	 eax, eax
  000be	49 89 47 18	 mov	 QWORD PTR [r15+24], rax

; 2355 :     size_type _Mysize = 0; // current length of string

  000c2	49 89 47 28	 mov	 QWORD PTR [r15+40], rax

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  000c6	49 89 47 30	 mov	 QWORD PTR [r15+48], rax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000ca	41 0f 10 46 18	 movups	 xmm0, XMMWORD PTR [r14+24]
  000cf	41 0f 11 47 18	 movups	 XMMWORD PTR [r15+24], xmm0
  000d4	41 0f 10 4e 28	 movups	 xmm1, XMMWORD PTR [r14+40]
  000d9	41 0f 11 4f 28	 movups	 XMMWORD PTR [r15+40], xmm1

; 4596 :         _My_data._Mysize = 0;

  000de	49 89 46 28	 mov	 QWORD PTR [r14+40], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000e2	49 c7 46 30 07
	00 00 00	 mov	 QWORD PTR [r14+48], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000ea	66 41 89 46 18	 mov	 WORD PTR [r14+24], ax
  000ef	41 8b 46 38	 mov	 eax, DWORD PTR [r14+56]
  000f3	41 89 47 38	 mov	 DWORD PTR [r15+56], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 790  :         _Constructed_first = _Newvec + _Whereoff;

  000f7	4c 89 7c 24 20	 mov	 QWORD PTR _Constructed_first$[rsp], r15

; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000fc	48 8b 57 08	 mov	 rdx, QWORD PTR [rdi+8]
  00100	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00103	4c 8b b4 24 88
	00 00 00	 mov	 r14, QWORD PTR _Whereptr$[rsp]
  0010b	4c 3b f2	 cmp	 r14, rdx
  0010e	75 05		 jne	 SHORT $LN4@Emplace_re

; 1664 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00110	49 8b dd	 mov	 rbx, r13

; 793  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 794  :         } else { // provide basic guarantee

  00113	eb 1a		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1659 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00115	4c 8b cf	 mov	 r9, rdi
  00118	4d 8b c5	 mov	 r8, r13
  0011b	49 8b d6	 mov	 rdx, r14
  0011e	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z ; std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;

  00123	4c 89 6c 24 20	 mov	 QWORD PTR _Constructed_first$[rsp], r13

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00128	48 8b 57 08	 mov	 rdx, QWORD PTR [rdi+8]

; 1659 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0012c	49 8b ce	 mov	 rcx, r14
$LN5@Emplace_re:

; 798  :         }
; 799  :         _CATCH_ALL

  0012f	4c 8b cf	 mov	 r9, rdi
  00132	4c 8b c3	 mov	 r8, rbx
  00135	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@YAPEAUrecordedMacroStep@@QEAU1@0PEAU1@AEAV?$allocator@UrecordedMacroStep@@@0@@Z ; std::_Uninitialized_move<recordedMacroStep *,std::allocator<recordedMacroStep> >
  0013a	90		 npad	 1

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0013b	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
  0013e	48 85 db	 test	 rbx, rbx
  00141	74 62		 je	 SHORT $LN87@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);

  00143	4c 8b 77 08	 mov	 r14, QWORD PTR [rdi+8]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00147	48 89 9c 24 88
	00 00 00	 mov	 QWORD PTR _First$2[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0014f	49 3b de	 cmp	 rbx, r14
  00152	74 1d		 je	 SHORT $LN59@Emplace_re
$LL60@Emplace_re:
  00154	48 8d 4b 18	 lea	 rcx, QWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00158	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0015d	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00161	48 89 9c 24 88
	00 00 00	 mov	 QWORD PTR _First$2[rsp], rbx
  00169	49 3b de	 cmp	 rbx, r14
  0016c	75 e6		 jne	 SHORT $LL60@Emplace_re
  0016e	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN59@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00171	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  00175	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00178	48 83 e2 c0	 and	 rdx, -64		; ffffffffffffffc0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0017c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00183	72 18		 jb	 SHORT $LN86@Emplace_re

; 155  :     _Bytes += _Non_user_size;

  00185	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00189	48 8b 4b f8	 mov	 rcx, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0018d	48 2b d9	 sub	 rbx, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00190	48 8d 43 f8	 lea	 rax, QWORD PTR [rbx-8]
  00194	48 83 f8 1f	 cmp	 rax, 31
  00198	77 37		 ja	 SHORT $LN83@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0019a	48 8b d9	 mov	 rbx, rcx
$LN86@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0019d	48 8b cb	 mov	 rcx, rbx
  001a0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN87@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1750 :         _Myfirst = _Newvec;

  001a5	4c 89 2f	 mov	 QWORD PTR [rdi], r13

; 1751 :         _Mylast  = _Newvec + _Newsize;

  001a8	49 c1 e4 06	 shl	 r12, 6
  001ac	4d 03 e5	 add	 r12, r13
  001af	4c 89 67 08	 mov	 QWORD PTR [rdi+8], r12

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  001b3	48 c1 e6 06	 shl	 rsi, 6
  001b7	49 03 f5	 add	 rsi, r13
  001ba	48 89 77 10	 mov	 QWORD PTR [rdi+16], rsi

; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  001be	49 8b c7	 mov	 rax, r15

; 807  :     }

  001c1	48 83 c4 40	 add	 rsp, 64			; 00000040H
  001c5	41 5f		 pop	 r15
  001c7	41 5e		 pop	 r14
  001c9	41 5d		 pop	 r13
  001cb	41 5c		 pop	 r12
  001cd	5f		 pop	 rdi
  001ce	5e		 pop	 rsi
  001cf	5b		 pop	 rbx
  001d0	c3		 ret	 0
$LN83@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001d1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001d6	cc		 int	 3
$LN98@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 778  :             _Xlength();

  001d7	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Xlength
  001dc	cc		 int	 3
$LN95@Emplace_re:
??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?dtor$0@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::catch$2

; 798  :         }
; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	55		 push	 rbp
  00007	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000b	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z$0:

; 800  :         _Destroy(_Constructed_first, _Constructed_last);

  0000e	4c 8b 45 28	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00012	48 8b 55 20	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  00016	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy

; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  00022	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00029	48 8b 55 30	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::deallocate

; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;

  00039	33 d2		 xor	 edx, edx
  0003b	33 c9		 xor	 ecx, ecx
  0003d	e8 00 00 00 00	 call	 _CxxThrowException
  00042	90		 npad	 1
?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::catch$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?dtor$1@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$1
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR _First$2[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?dtor$0@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::catch$2

; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	55		 push	 rbp
  00007	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000b	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z$0:

; 800  :         _Destroy(_Constructed_first, _Constructed_last);

  0000e	4c 8b 45 28	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00012	48 8b 55 20	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  00016	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy

; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  00022	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00029	48 8b 55 30	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::deallocate

; 802  :         _RERAISE;

  00039	33 d2		 xor	 edx, edx
  0003b	33 c9		 xor	 ecx, ecx
  0003d	e8 00 00 00 00	 call	 _CxxThrowException
  00042	90		 npad	 1
?catch$2@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Constructed_first$ = 32
_Constructed_last$ = 40
_Newvec$ = 48
$T1 = 56
this$ = 128
_First$2 = 136
_Whereptr$ = 136
<_Val_0>$ = 144
_Newcapacity$ = 152
?dtor$1@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$1
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR _First$2[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z
_TEXT	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>, COMDAT

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN120:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	53		 push	 rbx
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 54		 push	 r12
  0000f	41 55		 push	 r13
  00011	41 56		 push	 r14
  00013	41 57		 push	 r15
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	4c 8b fa	 mov	 r15, rdx
  0001c	48 8b f9	 mov	 rdi, rcx

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0001f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00022	4d 8b e7	 mov	 r12, r15
  00025	4c 2b e2	 sub	 r12, rdx
  00028	49 c1 fc 03	 sar	 r12, 3

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00030	48 2b c2	 sub	 rax, rdx
  00033	48 c1 f8 03	 sar	 rax, 3

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00037	49 b9 ff ff ff
	ff ff ff ff 1f	 mov	 r9, 2305843009213693951	; 1fffffffffffffffH
  00041	49 3b c1	 cmp	 rax, r9
  00044	0f 84 49 01 00
	00		 je	 $LN119@Emplace_re

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0004a	4c 8d 68 01	 lea	 r13, QWORD PTR [rax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 2b ca	 sub	 rcx, rdx
  00055	48 c1 f9 03	 sar	 rcx, 3

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00059	48 8b d1	 mov	 rdx, rcx
  0005c	48 d1 ea	 shr	 rdx, 1
  0005f	49 8b c1	 mov	 rax, r9
  00062	48 2b c2	 sub	 rax, rdx
  00065	48 3b c8	 cmp	 rcx, rax
  00068	0f 87 1f 01 00
	00		 ja	 $LN114@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow
; 1690 :         }
; 1691 : 
; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006e	48 8d 04 0a	 lea	 rax, QWORD PTR [rdx+rcx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00072	49 8b f5	 mov	 rsi, r13
  00075	49 3b c5	 cmp	 rax, r13
  00078	48 0f 43 f0	 cmovae	 rsi, rax
  0007c	49 3b f1	 cmp	 rsi, r9
  0007f	0f 87 08 01 00
	00		 ja	 $LN114@Emplace_re

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00085	4c 8d 34 f5 00
	00 00 00	 lea	 r14, QWORD PTR [rsi*8]
  0008d	48 89 74 24 68	 mov	 QWORD PTR _Newcapacity$[rsp], rsi

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	49 81 fe 00 10
	00 00		 cmp	 r14, 4096		; 00001000H
  00099	72 2e		 jb	 SHORT $LN24@Emplace_re

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0009b	49 8d 4e 27	 lea	 rcx, QWORD PTR [r14+39]

; 137  :     if (_Block_size <= _Bytes) {

  0009f	49 3b ce	 cmp	 rcx, r14
  000a2	0f 86 e5 00 00
	00		 jbe	 $LN114@Emplace_re

; 85   :         return ::operator new(_Bytes);

  000a8	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000ad	48 85 c0	 test	 rax, rax
  000b0	0f 84 e3 00 00
	00		 je	 $LN105@Emplace_re

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000b6	48 8d 58 27	 lea	 rbx, QWORD PTR [rax+39]
  000ba	48 83 e3 e0	 and	 rbx, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000be	48 89 43 f8	 mov	 QWORD PTR [rbx-8], rax

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c2	4c 8b 44 24 70	 mov	 r8, QWORD PTR <_Val_0>$[rsp]
  000c7	eb 1e		 jmp	 SHORT $LN116@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000c9	4d 85 f6	 test	 r14, r14
  000cc	74 12		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  000ce	49 8b ce	 mov	 rcx, r14
  000d1	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000d6	48 8b d8	 mov	 rbx, rax

; 244  :         return _Traits::_Allocate(_Bytes);

  000d9	4c 8b 44 24 70	 mov	 r8, QWORD PTR <_Val_0>$[rsp]
  000de	eb 02		 jmp	 SHORT $LN117@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000e0	33 db		 xor	 ebx, ebx
$LN117@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 788  :         _TRY_BEGIN

  000e2	48 89 74 24 68	 mov	 QWORD PTR _Newcapacity$[rsp], rsi
$LN116@Emplace_re:
  000e7	48 89 5c 24 78	 mov	 QWORD PTR $T1[rsp], rbx

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000ec	4a 8d 34 e3	 lea	 rsi, QWORD PTR [rbx+r12*8]
  000f0	49 8b 00	 mov	 rax, QWORD PTR [r8]
  000f3	48 89 06	 mov	 QWORD PTR [rsi], rax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000f6	4c 8b 47 08	 mov	 r8, QWORD PTR [rdi+8]
  000fa	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  000fd	48 8b cb	 mov	 rcx, rbx
  00100	4d 3b f8	 cmp	 r15, r8
  00103	75 0a		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00105	4c 2b c2	 sub	 r8, rdx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00108	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 794  :         } else { // provide basic guarantee

  0010d	eb 1f		 jmp	 SHORT $LN78@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  0010f	4d 8b c7	 mov	 r8, r15
  00112	4c 2b c2	 sub	 r8, rdx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00115	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0011a	48 8d 4e 08	 lea	 rcx, QWORD PTR [rsi+8]

; 1659 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0011e	4c 8b 47 08	 mov	 r8, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00122	4d 2b c7	 sub	 r8, r15

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00125	49 8b d7	 mov	 rdx, r15
  00128	e8 00 00 00 00	 call	 memmove
  0012d	90		 npad	 1
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0012e	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00131	48 85 c9	 test	 rcx, rcx
  00134	74 31		 je	 SHORT $LN109@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00136	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  0013a	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013d	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00141	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00148	72 18		 jb	 SHORT $LN108@Emplace_re

; 155  :     _Bytes += _Non_user_size;

  0014a	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0014e	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00152	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00155	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00159	48 83 f8 1f	 cmp	 rax, 31
  0015d	77 3a		 ja	 SHORT $LN105@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0015f	49 8b c8	 mov	 rcx, r8
$LN108@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00162	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN109@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1750 :         _Myfirst = _Newvec;

  00167	48 89 1f	 mov	 QWORD PTR [rdi], rbx

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0016a	4a 8d 0c eb	 lea	 rcx, QWORD PTR [rbx+r13*8]
  0016e	48 89 4f 08	 mov	 QWORD PTR [rdi+8], rcx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00172	49 8d 0c 1e	 lea	 rcx, QWORD PTR [r14+rbx]
  00176	48 89 4f 10	 mov	 QWORD PTR [rdi+16], rcx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  0017a	48 8b c6	 mov	 rax, rsi

; 807  :     }

  0017d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00181	41 5f		 pop	 r15
  00183	41 5e		 pop	 r14
  00185	41 5d		 pop	 r13
  00187	41 5c		 pop	 r12
  00189	5f		 pop	 rdi
  0018a	5e		 pop	 rsi
  0018b	5b		 pop	 rbx
  0018c	c3		 ret	 0
$LN114@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0018d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00192	cc		 int	 3
$LN119@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 778  :             _Xlength();

  00193	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlength
  00198	cc		 int	 3
$LN105@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00199	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0019e	cc		 int	 3
$LN115@Emplace_re:
??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA PROC ; `std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>'::`1'::catch$0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 798  :         }
; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z$0:

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00011	48 8b 55 78	 mov	 rdx, QWORD PTR $T1[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z ; std::allocator<HWND__ *>::deallocate

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA ENDP ; `std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA PROC ; `std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>'::`1'::catch$0

; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z$0:

; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00011	48 8b 55 78	 mov	 rdx, QWORD PTR $T1[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z ; std::allocator<HWND__ *>::deallocate

; 802  :         _RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0???$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z@4HA ENDP ; `std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >::~_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >::~_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >::~_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >::~_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >::~_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >::~_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::~_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::~_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >::~_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >::~_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z
_TEXT	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z PROC ; std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>, COMDAT

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN120:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	53		 push	 rbx
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 54		 push	 r12
  0000f	41 55		 push	 r13
  00011	41 56		 push	 r14
  00013	41 57		 push	 r15
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	4c 8b fa	 mov	 r15, rdx
  0001c	48 8b f9	 mov	 rdi, rcx

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0001f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00022	4d 8b e7	 mov	 r12, r15
  00025	4c 2b e2	 sub	 r12, rdx
  00028	49 c1 fc 03	 sar	 r12, 3

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00030	48 2b c2	 sub	 rax, rdx
  00033	48 c1 f8 03	 sar	 rax, 3

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00037	49 b9 ff ff ff
	ff ff ff ff 1f	 mov	 r9, 2305843009213693951	; 1fffffffffffffffH
  00041	49 3b c1	 cmp	 rax, r9
  00044	0f 84 49 01 00
	00		 je	 $LN119@Emplace_re

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0004a	4c 8d 68 01	 lea	 r13, QWORD PTR [rax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 2b ca	 sub	 rcx, rdx
  00055	48 c1 f9 03	 sar	 rcx, 3

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00059	48 8b d1	 mov	 rdx, rcx
  0005c	48 d1 ea	 shr	 rdx, 1
  0005f	49 8b c1	 mov	 rax, r9
  00062	48 2b c2	 sub	 rax, rdx
  00065	48 3b c8	 cmp	 rcx, rax
  00068	0f 87 1f 01 00
	00		 ja	 $LN114@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow
; 1690 :         }
; 1691 : 
; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006e	48 8d 04 0a	 lea	 rax, QWORD PTR [rdx+rcx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00072	49 8b f5	 mov	 rsi, r13
  00075	49 3b c5	 cmp	 rax, r13
  00078	48 0f 43 f0	 cmovae	 rsi, rax
  0007c	49 3b f1	 cmp	 rsi, r9
  0007f	0f 87 08 01 00
	00		 ja	 $LN114@Emplace_re

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00085	4c 8d 34 f5 00
	00 00 00	 lea	 r14, QWORD PTR [rsi*8]
  0008d	48 89 74 24 68	 mov	 QWORD PTR _Newcapacity$[rsp], rsi

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	49 81 fe 00 10
	00 00		 cmp	 r14, 4096		; 00001000H
  00099	72 2e		 jb	 SHORT $LN24@Emplace_re

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0009b	49 8d 4e 27	 lea	 rcx, QWORD PTR [r14+39]

; 137  :     if (_Block_size <= _Bytes) {

  0009f	49 3b ce	 cmp	 rcx, r14
  000a2	0f 86 e5 00 00
	00		 jbe	 $LN114@Emplace_re

; 85   :         return ::operator new(_Bytes);

  000a8	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000ad	48 85 c0	 test	 rax, rax
  000b0	0f 84 e3 00 00
	00		 je	 $LN105@Emplace_re

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000b6	48 8d 58 27	 lea	 rbx, QWORD PTR [rax+39]
  000ba	48 83 e3 e0	 and	 rbx, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000be	48 89 43 f8	 mov	 QWORD PTR [rbx-8], rax

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c2	4c 8b 44 24 70	 mov	 r8, QWORD PTR <_Val_0>$[rsp]
  000c7	eb 1e		 jmp	 SHORT $LN116@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000c9	4d 85 f6	 test	 r14, r14
  000cc	74 12		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  000ce	49 8b ce	 mov	 rcx, r14
  000d1	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000d6	48 8b d8	 mov	 rbx, rax

; 244  :         return _Traits::_Allocate(_Bytes);

  000d9	4c 8b 44 24 70	 mov	 r8, QWORD PTR <_Val_0>$[rsp]
  000de	eb 02		 jmp	 SHORT $LN117@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000e0	33 db		 xor	 ebx, ebx
$LN117@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 788  :         _TRY_BEGIN

  000e2	48 89 74 24 68	 mov	 QWORD PTR _Newcapacity$[rsp], rsi
$LN116@Emplace_re:
  000e7	48 89 5c 24 78	 mov	 QWORD PTR $T1[rsp], rbx

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000ec	4a 8d 34 e3	 lea	 rsi, QWORD PTR [rbx+r12*8]
  000f0	49 8b 00	 mov	 rax, QWORD PTR [r8]
  000f3	48 89 06	 mov	 QWORD PTR [rsi], rax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000f6	4c 8b 47 08	 mov	 r8, QWORD PTR [rdi+8]
  000fa	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  000fd	48 8b cb	 mov	 rcx, rbx
  00100	4d 3b f8	 cmp	 r15, r8
  00103	75 0a		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00105	4c 2b c2	 sub	 r8, rdx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00108	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 794  :         } else { // provide basic guarantee

  0010d	eb 1f		 jmp	 SHORT $LN78@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  0010f	4d 8b c7	 mov	 r8, r15
  00112	4c 2b c2	 sub	 r8, rdx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00115	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0011a	48 8d 4e 08	 lea	 rcx, QWORD PTR [rsi+8]

; 1659 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0011e	4c 8b 47 08	 mov	 r8, QWORD PTR [rdi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00122	4d 2b c7	 sub	 r8, r15

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00125	49 8b d7	 mov	 rdx, r15
  00128	e8 00 00 00 00	 call	 memmove
  0012d	90		 npad	 1
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0012e	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00131	48 85 c9	 test	 rcx, rcx
  00134	74 31		 je	 SHORT $LN109@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00136	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  0013a	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013d	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00141	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00148	72 18		 jb	 SHORT $LN108@Emplace_re

; 155  :     _Bytes += _Non_user_size;

  0014a	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0014e	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00152	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00155	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00159	48 83 f8 1f	 cmp	 rax, 31
  0015d	77 3a		 ja	 SHORT $LN105@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0015f	49 8b c8	 mov	 rcx, r8
$LN108@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00162	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN109@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1750 :         _Myfirst = _Newvec;

  00167	48 89 1f	 mov	 QWORD PTR [rdi], rbx

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0016a	4a 8d 0c eb	 lea	 rcx, QWORD PTR [rbx+r13*8]
  0016e	48 89 4f 08	 mov	 QWORD PTR [rdi+8], rcx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00172	49 8d 0c 1e	 lea	 rcx, QWORD PTR [r14+rbx]
  00176	48 89 4f 10	 mov	 QWORD PTR [rdi+16], rcx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  0017a	48 8b c6	 mov	 rax, rsi

; 807  :     }

  0017d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00181	41 5f		 pop	 r15
  00183	41 5e		 pop	 r14
  00185	41 5d		 pop	 r13
  00187	41 5c		 pop	 r12
  00189	5f		 pop	 rdi
  0018a	5e		 pop	 rsi
  0018b	5b		 pop	 rbx
  0018c	c3		 ret	 0
$LN114@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0018d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00192	cc		 int	 3
$LN119@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 778  :             _Xlength();

  00193	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ ; std::vector<Buffer *,std::allocator<Buffer *> >::_Xlength
  00198	cc		 int	 3
$LN105@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00199	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0019e	cc		 int	 3
$LN115@Emplace_re:
??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z ENDP ; std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA PROC ; `std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>'::`1'::catch$0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 798  :         }
; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z$0:

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00011	48 8b 55 78	 mov	 rdx, QWORD PTR $T1[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z ; std::allocator<Buffer *>::deallocate

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA ENDP ; `std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 96
_Newcapacity$ = 104
_Whereptr$ = 104
<_Val_0>$ = 112
$T1 = 120
?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA PROC ; `std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>'::`1'::catch$0

; 799  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z$0:

; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00011	48 8b 55 78	 mov	 rdx, QWORD PTR $T1[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z ; std::allocator<Buffer *>::deallocate

; 802  :         _RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0???$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z@4HA ENDP ; `std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >::~_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >::~_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >::~_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >, COMDAT

; 35   :         if (_Target) {

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
$LN2@Tidy_guard:

; 36   :             _Target->_Tidy();
; 37   :         }
; 38   :     }

  0000c	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >::~_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
;	COMDAT ?CharacterIs@@YAH_WPEB_W@Z
_TEXT	SEGMENT
c$ = 8
any$ = 16
?CharacterIs@@YAH_WPEB_W@Z PROC				; CharacterIs, COMDAT

; 136  : 	int i;
; 137  : 	for (i = 0; any[i] != 0; i++)

  00000	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00003	66 85 c0	 test	 ax, ax
  00006	74 1b		 je	 SHORT $LN3@CharacterI
  00008	45 33 c0	 xor	 r8d, r8d
  0000b	0f 1f 44 00 00	 npad	 5
$LL4@CharacterI:

; 138  : 	{
; 139  : 		if (any[i] == c) return TRUE;

  00010	66 3b c1	 cmp	 ax, cx
  00013	74 11		 je	 SHORT $LN8@CharacterI

; 136  : 	int i;
; 137  : 	for (i = 0; any[i] != 0; i++)

  00015	42 0f b7 44 42
	02		 movzx	 eax, WORD PTR [rdx+r8*2+2]
  0001b	49 ff c0	 inc	 r8
  0001e	66 85 c0	 test	 ax, ax
  00021	75 ed		 jne	 SHORT $LL4@CharacterI
$LN3@CharacterI:

; 140  : 	}
; 141  : 	return FALSE;

  00023	33 c0		 xor	 eax, eax

; 142  : }

  00025	c3		 ret	 0
$LN8@CharacterI:

; 138  : 	{
; 139  : 		if (any[i] == c) return TRUE;

  00026	b8 01 00 00 00	 mov	 eax, 1

; 142  : }

  0002b	c3		 ret	 0
?CharacterIs@@YAH_WPEB_W@Z ENDP				; CharacterIs
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GShortcutMapper@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GShortcutMapper@@UEAAPEAXI@Z PROC			; ShortcutMapper::`scalar deleting destructor', COMDAT
$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx
  0000f	e8 00 00 00 00	 call	 ??1ShortcutMapper@@UEAA@XZ ; ShortcutMapper::~ShortcutMapper
  00014	f6 c3 01	 test	 bl, 1
  00017	74 0d		 je	 SHORT $LN4@scalar
  00019	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  0001e	48 8b cf	 mov	 rcx, rdi
  00021	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@scalar:
  00026	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002b	48 8b c7	 mov	 rax, rdi
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??_GShortcutMapper@@UEAAPEAXI@Z ENDP			; ShortcutMapper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ PROC ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ENDP ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
;	COMDAT ?destroy@ShortcutMapper@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?destroy@ShortcutMapper@@UEAAXXZ PROC			; ShortcutMapper::destroy, COMDAT

; 40   : 	void destroy() {};

  00000	c2 00 00	 ret	 0
?destroy@ShortcutMapper@@UEAAXXZ ENDP			; ShortcutMapper::destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
;	COMDAT ??1ShortcutMapper@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ShortcutMapper@@UEAA@XZ PROC				; ShortcutMapper::~ShortcutMapper, COMDAT

; 33   : 	~ShortcutMapper() = default;

$LN119:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b d9	 mov	 rbx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 89 d0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+464]
  00019	33 ff		 xor	 edi, edi
  0001b	48 85 c9	 test	 rcx, rcx
  0001e	74 55		 je	 SHORT $LN16@ShortcutMa

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00020	48 8b 83 e0 01
	00 00		 mov	 rax, QWORD PTR [rbx+480]
  00027	48 2b c1	 sub	 rax, rcx
  0002a	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00036	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0003d	72 1c		 jb	 SHORT $LN32@ShortcutMa

; 155  :     _Bytes += _Non_user_size;

  0003f	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00043	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00047	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004a	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0004e	48 83 f8 1f	 cmp	 rax, 31
  00052	0f 87 a8 01 00
	00		 ja	 $LN29@ShortcutMa

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00058	49 8b c8	 mov	 rcx, r8
$LN32@ShortcutMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0005b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00060	48 89 bb d0 01
	00 00		 mov	 QWORD PTR [rbx+464], rdi

; 1768 :             _Mylast  = nullptr;

  00067	48 89 bb d8 01
	00 00		 mov	 QWORD PTR [rbx+472], rdi

; 1769 :             _Myend   = nullptr;

  0006e	48 89 bb e0 01
	00 00		 mov	 QWORD PTR [rbx+480], rdi
$LN16@ShortcutMa:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 33   : 	~ShortcutMapper() = default;

  00075	48 8d 8b b0 01
	00 00		 lea	 rcx, QWORD PTR [rbx+432]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  0007c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00081	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 33   : 	~ShortcutMapper() = default;

  00082	48 8d 8b 90 01
	00 00		 lea	 rcx, QWORD PTR [rbx+400]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00089	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  0008e	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0008f	48 8b 8b 78 01
	00 00		 mov	 rcx, QWORD PTR [rbx+376]
  00096	48 85 c9	 test	 rcx, rcx
  00099	74 55		 je	 SHORT $LN45@ShortcutMa

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0009b	48 8b 83 88 01
	00 00		 mov	 rax, QWORD PTR [rbx+392]
  000a2	48 2b c1	 sub	 rax, rcx
  000a5	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a9	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b1	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000b8	72 1c		 jb	 SHORT $LN61@ShortcutMa

; 155  :     _Bytes += _Non_user_size;

  000ba	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000be	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c2	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c5	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  000c9	48 83 f8 1f	 cmp	 rax, 31
  000cd	0f 87 33 01 00
	00		 ja	 $LN58@ShortcutMa

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000d3	49 8b c8	 mov	 rcx, r8
$LN61@ShortcutMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000d6	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  000db	48 89 bb 78 01
	00 00		 mov	 QWORD PTR [rbx+376], rdi

; 1768 :             _Mylast  = nullptr;

  000e2	48 89 bb 80 01
	00 00		 mov	 QWORD PTR [rbx+384], rdi

; 1769 :             _Myend   = nullptr;

  000e9	48 89 bb 88 01
	00 00		 mov	 QWORD PTR [rbx+392], rdi
$LN45@ShortcutMa:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  000f0	48 8b 8b 60 01
	00 00		 mov	 rcx, QWORD PTR [rbx+352]
  000f7	48 85 c9	 test	 rcx, rcx
  000fa	74 55		 je	 SHORT $LN69@ShortcutMa

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000fc	48 8b 83 70 01
	00 00		 mov	 rax, QWORD PTR [rbx+368]
  00103	48 2b c1	 sub	 rax, rcx
  00106	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010a	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00112	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00119	72 1c		 jb	 SHORT $LN85@ShortcutMa

; 155  :     _Bytes += _Non_user_size;

  0011b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0011f	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00123	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0012a	48 83 f8 1f	 cmp	 rax, 31
  0012e	0f 87 c0 00 00
	00		 ja	 $LN82@ShortcutMa

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00134	49 8b c8	 mov	 rcx, r8
$LN85@ShortcutMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00137	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0013c	48 89 bb 60 01
	00 00		 mov	 QWORD PTR [rbx+352], rdi

; 1768 :             _Mylast  = nullptr;

  00143	48 89 bb 68 01
	00 00		 mov	 QWORD PTR [rbx+360], rdi

; 1769 :             _Myend   = nullptr;

  0014a	48 89 bb 70 01
	00 00		 mov	 QWORD PTR [rbx+368], rdi
$LN69@ShortcutMa:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00151	48 8b 8b 48 01
	00 00		 mov	 rcx, QWORD PTR [rbx+328]
  00158	48 85 c9	 test	 rcx, rcx
  0015b	74 51		 je	 SHORT $LN93@ShortcutMa

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0015d	48 8b 83 58 01
	00 00		 mov	 rax, QWORD PTR [rbx+344]
  00164	48 2b c1	 sub	 rax, rcx
  00167	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0016b	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00173	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0017a	72 18		 jb	 SHORT $LN109@ShortcutMa

; 155  :     _Bytes += _Non_user_size;

  0017c	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00180	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00184	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00187	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0018b	48 83 f8 1f	 cmp	 rax, 31
  0018f	77 69		 ja	 SHORT $LN106@ShortcutMa

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00191	49 8b c8	 mov	 rcx, r8
$LN109@ShortcutMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00194	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00199	48 89 bb 48 01
	00 00		 mov	 QWORD PTR [rbx+328], rdi

; 1768 :             _Mylast  = nullptr;

  001a0	48 89 bb 50 01
	00 00		 mov	 QWORD PTR [rbx+336], rdi

; 1769 :             _Myend   = nullptr;

  001a7	48 89 bb 58 01
	00 00		 mov	 QWORD PTR [rbx+344], rdi
$LN93@ShortcutMa:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 33   : 	~ShortcutMapper() = default;

  001ae	48 8d 8b 28 01
	00 00		 lea	 rcx, QWORD PTR [rbx+296]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  001b5	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  001ba	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 33   : 	~ShortcutMapper() = default;

  001bb	48 8d 8b 88 00
	00 00		 lea	 rcx, QWORD PTR [rbx+136]
  001c2	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  001c9	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  001ce	44 8d 42 e5	 lea	 r8d, QWORD PTR [rdx-27]
  001d2	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  001d7	90		 npad	 1
  001d8	48 8d 4b 50	 lea	 rcx, QWORD PTR [rbx+80]
  001dc	e8 00 00 00 00	 call	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
  001e1	90		 npad	 1
  001e2	48 8b cb	 mov	 rcx, rbx
  001e5	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  001ea	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001ee	5f		 pop	 rdi
  001ef	e9 00 00 00 00	 jmp	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
$LN82@ShortcutMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001f4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001f9	90		 npad	 1
$LN106@ShortcutMa:
  001fa	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001ff	90		 npad	 1
$LN29@ShortcutMa:
  00200	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00205	90		 npad	 1
$LN58@ShortcutMa:
  00206	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0020b	cc		 int	 3
$LN116@ShortcutMa:
??1ShortcutMapper@@UEAA@XZ ENDP				; ShortcutMapper::~ShortcutMapper
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
?dtor$0@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0000b	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$1@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  00014	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001b	41 b8 05 00 00
	00		 mov	 r8d, 5
  00021	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00026	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 48 01
	00 00		 add	 rcx, 328		; 00000148H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$4@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 60 01
	00 00		 add	 rcx, 352		; 00000160H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$5@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 78 01
	00 00		 add	 rcx, 376		; 00000178H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$6@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 01
	00 00		 add	 rcx, 400		; 00000190H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$8@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$8
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 01
	00 00		 add	 rcx, 432		; 000001b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$9@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$9
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 01
	00 00		 add	 rcx, 464		; 000001d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
?dtor$9@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
?dtor$0@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0000b	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$1@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  00014	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001b	41 b8 05 00 00
	00		 mov	 r8d, 5
  00021	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00026	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 48 01
	00 00		 add	 rcx, 328		; 00000148H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$4@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 60 01
	00 00		 add	 rcx, 352		; 00000160H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$5@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 78 01
	00 00		 add	 rcx, 376		; 00000178H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$6@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 01
	00 00		 add	 rcx, 400		; 00000190H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$8@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$8
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 01
	00 00		 add	 rcx, 432		; 000001b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$9@?0???1ShortcutMapper@@UEAA@XZ@4HA PROC		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$9
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 01
	00 00		 add	 rcx, 464		; 000001d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
?dtor$9@?0???1ShortcutMapper@@UEAA@XZ@4HA ENDP		; `ShortcutMapper::~ShortcutMapper'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\BabyGridWrapper.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h
;	COMDAT ??0ShortcutMapper@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
this$ = 72
??0ShortcutMapper@@QEAA@XZ PROC				; ShortcutMapper::ShortcutMapper, COMDAT

; 29   : 	ShortcutMapper() : _currentState(STATE_MENU), StaticDialog() {

$LN92:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b d9	 mov	 rbx, rcx
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
  00018	0f 11 41 10	 movups	 XMMWORD PTR [rcx+16], xmm0
  0001c	0f 11 41 20	 movups	 XMMWORD PTR [rcx+32], xmm0
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h

; 123  : 	HINSTANCE _hInst = NULL;

  00020	33 ff		 xor	 edi, edi
  00022	48 89 79 08	 mov	 QWORD PTR [rcx+8], rdi

; 124  : 	HWND _hParent = NULL;

  00026	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 125  : 	HWND _hSelf = NULL;

  0002a	48 89 79 18	 mov	 QWORD PTR [rcx+24], rdi
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7StaticDialog@@6B@
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 29   : 	ShortcutMapper() : _currentState(STATE_MENU), StaticDialog() {

  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ShortcutMapper@@6B@
  0003f	48 89 01	 mov	 QWORD PTR [rcx], rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h

; 123  : 	HINSTANCE _hInst = NULL;

  00042	48 89 79 38	 mov	 QWORD PTR [rcx+56], rdi

; 124  : 	HWND _hParent = NULL;

  00046	48 89 79 40	 mov	 QWORD PTR [rcx+64], rdi

; 125  : 	HWND _hSelf = NULL;

  0004a	48 89 79 48	 mov	 QWORD PTR [rcx+72], rdi
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\BabyGridWrapper.h

; 27   : 	BabyGridWrapper() = default;

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7BabyGridWrapper@@6B@
  00055	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 29   : 	ShortcutMapper() : _currentState(STATE_MENU), StaticDialog() {

  00059	48 8d 41 50	 lea	 rax, QWORD PTR [rcx+80]
  0005d	48 89 44 24 48	 mov	 QWORD PTR this$[rsp], rax
  00062	48 89 38	 mov	 QWORD PTR [rax], rdi
  00065	48 89 78 08	 mov	 QWORD PTR [rax+8], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00069	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
  0006d	48 89 78 18	 mov	 QWORD PTR [rax+24], rdi
  00071	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 29   : 	ShortcutMapper() : _currentState(STATE_MENU), StaticDialog() {

  00075	89 79 78	 mov	 DWORD PTR [rcx+120], edi

; 33   : 	~ShortcutMapper() = default;
; 34   : 
; 35   : 	void init(HINSTANCE hInst, HWND parent, GridState initState = STATE_MENU) {
; 36   :         Window::init(hInst, parent);
; 37   :         _currentState = initState;
; 38   :     };
; 39   : 
; 40   : 	void destroy() {};
; 41   : 	void doDialog(bool isRTL = false) {
; 42   : 		if (isRTL)
; 43   : 		{
; 44   : 			DLGTEMPLATE *pMyDlgTemplate = NULL;
; 45   : 			HGLOBAL hMyDlgTemplate = makeRTLResource(IDD_SHORTCUTMAPPER_DLG, &pMyDlgTemplate);
; 46   : 			::DialogBoxIndirectParam(_hInst, pMyDlgTemplate, _hParent, dlgProc, reinterpret_cast<LPARAM>(this));
; 47   : 			::GlobalFree(hMyDlgTemplate);
; 48   : 		}
; 49   : 		else
; 50   : 			::DialogBoxParam(_hInst, MAKEINTRESOURCE(IDD_SHORTCUTMAPPER_DLG), _hParent, dlgProc, reinterpret_cast<LPARAM>(this));
; 51   : 	};
; 52   : 	void getClientRect(RECT & rc) const;
; 53   : 
; 54   : 	bool findKeyConflicts(__inout_opt generic_string * const keyConflictLocation,
; 55   : 							const KeyCombo & itemKeyCombo, const size_t & itemIndex) const;
; 56   : 
; 57   : 	generic_string getTextFromCombo(HWND hCombo);
; 58   : 	bool isFilterValid(Shortcut);
; 59   : 	bool isFilterValid(PluginCmdShortcut sc);
; 60   : 
; 61   : protected :
; 62   : 	INT_PTR CALLBACK run_dlgProc(UINT message, WPARAM wParam, LPARAM lParam);
; 63   : 
; 64   : private:
; 65   : 	BabyGridWrapper _babygrid;
; 66   : 	ContextMenu _rightClickMenu;
; 67   : 
; 68   : 	GridState _currentState;
; 69   : 	HWND _hTabCtrl = nullptr;

  00078	48 89 b9 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rdi

; 29   : 	ShortcutMapper() : _currentState(STATE_MENU), StaticDialog() {

  0007f	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  00086	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0008d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00092	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00099	8d 57 20	 lea	 edx, QWORD PTR [rdi+32]
  0009c	44 8d 47 05	 lea	 r8d, QWORD PTR [rdi+5]
  000a0	e8 00 00 00 00	 call	 ??_L@YAXPEAX_K1P6AX0@Z2@Z
  000a5	90		 npad	 1
  000a6	48 8d 8b 28 01
	00 00		 lea	 rcx, QWORD PTR [rbx+296]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000ad	48 89 39	 mov	 QWORD PTR [rcx], rdi

; 4596 :         _My_data._Mysize = 0;

  000b0	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000b4	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000bc	66 89 39	 mov	 WORD PTR [rcx], di
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000bf	48 89 bb 48 01
	00 00		 mov	 QWORD PTR [rbx+328], rdi
  000c6	48 89 bb 50 01
	00 00		 mov	 QWORD PTR [rbx+336], rdi
  000cd	48 89 bb 58 01
	00 00		 mov	 QWORD PTR [rbx+344], rdi
  000d4	48 89 bb 60 01
	00 00		 mov	 QWORD PTR [rbx+352], rdi
  000db	48 89 bb 68 01
	00 00		 mov	 QWORD PTR [rbx+360], rdi
  000e2	48 89 bb 70 01
	00 00		 mov	 QWORD PTR [rbx+368], rdi
  000e9	48 89 bb 78 01
	00 00		 mov	 QWORD PTR [rbx+376], rdi
  000f0	48 89 bb 80 01
	00 00		 mov	 QWORD PTR [rbx+384], rdi
  000f7	48 89 bb 88 01
	00 00		 mov	 QWORD PTR [rbx+392], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000fe	48 89 bb 90 01
	00 00		 mov	 QWORD PTR [rbx+400], rdi

; 4596 :         _My_data._Mysize = 0;

  00105	48 89 bb a0 01
	00 00		 mov	 QWORD PTR [rbx+416], rdi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0010c	48 c7 83 a8 01
	00 00 07 00 00
	00		 mov	 QWORD PTR [rbx+424], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00117	66 89 bb 90 01
	00 00		 mov	 WORD PTR [rbx+400], di

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0011e	48 89 bb b0 01
	00 00		 mov	 QWORD PTR [rbx+432], rdi

; 4596 :         _My_data._Mysize = 0;

  00125	48 89 bb c0 01
	00 00		 mov	 QWORD PTR [rbx+448], rdi

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0012c	48 c7 83 c8 01
	00 00 07 00 00
	00		 mov	 QWORD PTR [rbx+456], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00137	66 89 bb b0 01
	00 00		 mov	 WORD PTR [rbx+432], di
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0013e	48 89 bb d0 01
	00 00		 mov	 QWORD PTR [rbx+464], rdi
  00145	48 89 bb d8 01
	00 00		 mov	 QWORD PTR [rbx+472], rdi
  0014c	48 89 bb e0 01
	00 00		 mov	 QWORD PTR [rbx+480], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00153	45 33 c0	 xor	 r8d, r8d
  00156	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0015d	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\ShortcutMapper.h

; 31   : 		_dialogInitDone = false;

  00162	40 88 bb f8 01
	00 00		 mov	 BYTE PTR [rbx+504], dil

; 32   : 	};

  00169	48 8b c3	 mov	 rax, rbx
  0016c	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00171	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00175	5f		 pop	 rdi
  00176	c3		 ret	 0
??0ShortcutMapper@@QEAA@XZ ENDP				; ShortcutMapper::ShortcutMapper
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$0@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
?dtor$0@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$10@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$10
  00000	48 8b 8a 48 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
?dtor$10@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$1@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0000b	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$1@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  00014	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001b	41 b8 05 00 00
	00		 mov	 r8d, 5
  00021	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00026	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$3@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$3
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$4@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$4
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 48 01
	00 00		 add	 rcx, 328		; 00000148H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$4@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$5@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$5
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 60 01
	00 00		 add	 rcx, 352		; 00000160H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$5@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$6@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$6
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 78 01
	00 00		 add	 rcx, 376		; 00000178H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$6@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$7@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$7
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 01
	00 00		 add	 rcx, 400		; 00000190H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$8@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$8
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 01
	00 00		 add	 rcx, 432		; 000001b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$9@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$9
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 01
	00 00		 add	 rcx, 464		; 000001d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
?dtor$9@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$0@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
?dtor$0@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$10@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$10
  00000	48 8b 8a 48 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
?dtor$10@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$1@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$1
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0000b	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$1@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0000d	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  00014	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001b	41 b8 05 00 00
	00		 mov	 r8d, 5
  00021	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00026	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$3@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$3
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$4@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$4
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 48 01
	00 00		 add	 rcx, 328		; 00000148H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$4@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$5@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$5
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 60 01
	00 00		 add	 rcx, 352		; 00000160H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$5@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$6@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$6
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 78 01
	00 00		 add	 rcx, 376		; 00000178H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$6@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$7@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$7
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 01
	00 00		 add	 rcx, 400		; 00000190H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$8@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$8
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 01
	00 00		 add	 rcx, 432		; 000001b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
this$ = 72
?dtor$9@?0???0ShortcutMapper@@QEAA@XZ@4HA PROC		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$9
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 01
	00 00		 add	 rcx, 464		; 000001d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHFONT__@@V?$allocator@PEAUHFONT__@@@std@@@std@@QEAA@XZ ; std::vector<HFONT__ *,std::allocator<HFONT__ *> >::~vector<HFONT__ *,std::allocator<HFONT__ *> >
?dtor$9@?0???0ShortcutMapper@@QEAA@XZ@4HA ENDP		; `ShortcutMapper::ShortcutMapper'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GBabyGridWrapper@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBabyGridWrapper@@UEAAPEAXI@Z PROC			; BabyGridWrapper::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	f6 c2 01	 test	 dl, 1
  0000c	74 0a		 je	 SHORT $LN4@scalar
  0000e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@scalar:
  00018	48 8b c3	 mov	 rax, rbx
  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
??_GBabyGridWrapper@@UEAAPEAXI@Z ENDP			; BabyGridWrapper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Grid\BabyGridWrapper.h
;	COMDAT ?destroy@BabyGridWrapper@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?destroy@BabyGridWrapper@@UEAAXXZ PROC			; BabyGridWrapper::destroy, COMDAT

; 32   : 		::DestroyWindow(_hSelf);

  00000	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00004	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_DestroyWindow
?destroy@BabyGridWrapper@@UEAAXXZ ENDP			; BabyGridWrapper::destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z PROC		; TaskLstFnStatus::operator=, COMDAT
$LN23:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	8b 02		 mov	 eax, DWORD PTR [rdx]
  00016	48 8d 72 08	 lea	 rsi, QWORD PTR [rdx+8]
  0001a	48 8d 69 08	 lea	 rbp, QWORD PTR [rcx+8]
  0001e	89 01		 mov	 DWORD PTR [rcx], eax
  00020	8b 42 04	 mov	 eax, DWORD PTR [rdx+4]
  00023	48 8b fa	 mov	 rdi, rdx
  00026	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00029	48 8b d9	 mov	 rbx, rcx

; 2850 :         if (this != _STD addressof(_Right)) {

  0002c	48 3b ee	 cmp	 rbp, rsi
  0002f	74 28		 je	 SHORT $LN8@operator

; 2776 :         _Tidy_deallocate();

  00031	48 8b cd	 mov	 rcx, rbp
  00034	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00039	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]

; 4596 :         _My_data._Mysize = 0;

  0003c	33 c0		 xor	 eax, eax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0003e	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  00042	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  00046	0f 11 4d 10	 movups	 XMMWORD PTR [rbp+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  0004a	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0004e	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00056	66 89 06	 mov	 WORD PTR [rsi], ax
$LN8@operator:
  00059	8b 47 28	 mov	 eax, DWORD PTR [rdi+40]
  0005c	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00061	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00066	89 43 28	 mov	 DWORD PTR [rbx+40], eax
  00069	48 8b 47 30	 mov	 rax, QWORD PTR [rdi+48]
  0006d	48 89 43 30	 mov	 QWORD PTR [rbx+48], rax
  00071	48 8b c3	 mov	 rax, rbx
  00074	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00079	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
??4TaskLstFnStatus@@QEAAAEAU0@$$QEAU0@@Z ENDP		; TaskLstFnStatus::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1TaskLstFnStatus@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1TaskLstFnStatus@@QEAA@XZ PROC			; TaskLstFnStatus::~TaskLstFnStatus, COMDAT
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 83 c1 08	 add	 rcx, 8
  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 3003 :         _Tidy_deallocate();

  00011	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1TaskLstFnStatus@@QEAA@XZ ENDP			; TaskLstFnStatus::~TaskLstFnStatus
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1TaskLstFnStatus@@QEAA@XZ@4HA PROC		; `TaskLstFnStatus::~TaskLstFnStatus'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1TaskLstFnStatus@@QEAA@XZ@4HA ENDP		; `TaskLstFnStatus::~TaskLstFnStatus'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1TaskLstFnStatus@@QEAA@XZ@4HA PROC		; `TaskLstFnStatus::~TaskLstFnStatus'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1TaskLstFnStatus@@QEAA@XZ@4HA ENDP		; `TaskLstFnStatus::~TaskLstFnStatus'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
;	COMDAT ?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwnd$GSCopy$ = 64
ex$1 = 72
rcClient$2 = 80
__$ArrayPad$ = 96
this$ = 144
hwnd$ = 152
message$ = 160
wParam$ = 168
lParam$ = 176
?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z PROC ; Notepad_plus_Window::runProc, COMDAT

; 90   : {

$LN16:
  00000	40 53		 push	 rbx
  00002	57		 push	 rdi
  00003	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00007	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000e	48 33 c4	 xor	 rax, rsp
  00011	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00016	48 8b fa	 mov	 rdi, rdx
  00019	48 8b d9	 mov	 rbx, rcx
  0001c	48 89 54 24 40	 mov	 QWORD PTR hwnd$GSCopy$[rsp], rdx

; 91   : 	switch (message)

  00021	41 83 f8 01	 cmp	 r8d, 1
  00025	74 34		 je	 SHORT $LN4@runProc

; 116  : 			}
; 117  : 			catch (std::exception& ex)
; 118  : 			{
; 119  : 				::MessageBoxA(hwnd, ex.what(), "Exception On WM_CREATE", MB_OK);
; 120  : 				exit(-1);
; 121  : 			}
; 122  : 			break;
; 123  : 		}
; 124  : 		default:
; 125  : 		{
; 126  : 			if (this)

  00027	48 85 c9	 test	 rcx, rcx
  0002a	74 2b		 je	 SHORT $LN8@runProc

; 127  : 				return _notepad_plus_plus_core.process(hwnd, message, wParam, lParam);

  0002c	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00030	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR lParam$[rsp]
  00038	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0003d	e8 00 00 00 00	 call	 ?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z ; Notepad_plus::process
  00042	90		 npad	 1
$LN1@runProc:

; 131  : }

  00043	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00048	48 33 cc	 xor	 rcx, rsp
  0004b	e8 00 00 00 00	 call	 __security_check_cookie
  00050	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00054	5f		 pop	 rdi
  00055	5b		 pop	 rbx
  00056	c3		 ret	 0
$LN8@runProc:

; 128  : 		}
; 129  : 	}
; 130  : 	return FALSE;

  00057	33 c0		 xor	 eax, eax
  00059	eb e8		 jmp	 SHORT $LN1@runProc
$LN4@runProc:

; 92   : 	{
; 93   : 		case WM_CREATE:
; 94   : 		{
; 95   : 			try
; 96   : 			{
; 97   : 				NppDarkMode::setDarkTitleBar(hwnd);

  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	e8 00 00 00 00	 call	 ?setDarkTitleBar@NppDarkMode@@YAXPEAUHWND__@@@Z ; NppDarkMode::setDarkTitleBar

; 98   : 
; 99   : 				_notepad_plus_plus_core._pPublicInterface = this;

  00063	48 8d 4b 20	 lea	 rcx, QWORD PTR [rbx+32]
  00067	48 89 19	 mov	 QWORD PTR [rcx], rbx

; 100  : 				LRESULT lRet = _notepad_plus_plus_core.init(hwnd);

  0006a	48 8b d7	 mov	 rdx, rdi
  0006d	e8 00 00 00 00	 call	 ?init@Notepad_plus@@QEAA_JPEAUHWND__@@@Z ; Notepad_plus::init
  00072	48 8b d8	 mov	 rbx, rax

; 101  : 
; 102  : 				if (NppDarkMode::isExperimentalEnabled() && NppDarkMode::isEnabled())

  00075	e8 00 00 00 00	 call	 ?isExperimentalEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isExperimentalEnabled
  0007a	84 c0		 test	 al, al
  0007c	74 4a		 je	 SHORT $LN6@runProc
  0007e	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  00083	84 c0		 test	 al, al
  00085	74 41		 je	 SHORT $LN6@runProc

; 103  : 				{
; 104  : 					RECT rcClient;
; 105  : 					GetWindowRect(hwnd, &rcClient);

  00087	48 8d 54 24 50	 lea	 rdx, QWORD PTR rcClient$2[rsp]
  0008c	48 8b cf	 mov	 rcx, rdi
  0008f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowRect

; 106  : 
; 107  : 					// Inform application of the frame change.
; 108  : 					SetWindowPos(hwnd,

  00095	8b 4c 24 5c	 mov	 ecx, DWORD PTR rcClient$2[rsp+12]
  00099	44 8b 4c 24 54	 mov	 r9d, DWORD PTR rcClient$2[rsp+4]
  0009e	41 2b c9	 sub	 ecx, r9d
  000a1	8b 44 24 58	 mov	 eax, DWORD PTR rcClient$2[rsp+8]
  000a5	44 8b 44 24 50	 mov	 r8d, DWORD PTR rcClient$2[rsp]
  000aa	41 2b c0	 sub	 eax, r8d
  000ad	c7 44 24 30 20
	00 00 00	 mov	 DWORD PTR [rsp+48], 32	; 00000020H
  000b5	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  000b9	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  000bd	33 d2		 xor	 edx, edx
  000bf	48 8b cf	 mov	 rcx, rdi
  000c2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowPos
$LN6@runProc:

; 109  : 						NULL,
; 110  : 						rcClient.left, rcClient.top,
; 111  : 						rcClient.right - rcClient.left, rcClient.bottom - rcClient.top,
; 112  : 						SWP_FRAMECHANGED);
; 113  : 				}
; 114  : 
; 115  : 				return lRet;

  000c8	48 8b c3	 mov	 rax, rbx
  000cb	e9 73 ff ff ff	 jmp	 $LN1@runProc
  000d0	cc		 int	 3
$LN14@runProc:
  000d1	cc		 int	 3
?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z ENDP ; Notepad_plus_Window::runProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
hwnd$GSCopy$ = 64
ex$1 = 72
rcClient$2 = 80
__$ArrayPad$ = 96
this$ = 144
hwnd$ = 152
message$ = 160
wParam$ = 168
lParam$ = 176
?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus_Window::runProc'::`1'::catch$0

; 116  : 			}
; 117  : 			catch (std::exception& ex)
; 118  : 			{

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z$0:

; 116  : 			}
; 117  : 			catch (std::exception& ex)
; 118  : 			{
; 119  : 				::MessageBoxA(hwnd, ex.what(), "Exception On WM_CREATE", MB_OK);

  0000d	48 8b 4d 48	 mov	 rcx, QWORD PTR ex$1[rbp]
  00011	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00014	ff 50 08	 call	 QWORD PTR [rax+8]
  00017	48 8b d0	 mov	 rdx, rax
  0001a	45 33 c9	 xor	 r9d, r9d
  0001d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BH@GEANJPBI@Exception?5On?5WM_CREATE@
  00024	48 8b 4d 40	 mov	 rcx, QWORD PTR hwnd$GSCopy$[rbp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxA

; 116  : 			}
; 117  : 			catch (std::exception& ex)
; 118  : 			{
; 119  : 				::MessageBoxA(hwnd, ex.what(), "Exception On WM_CREATE", MB_OK);
; 120  : 				exit(-1);

  0002e	b9 ff ff ff ff	 mov	 ecx, -1
  00033	e8 00 00 00 00	 call	 exit
  00038	90		 npad	 1
?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus_Window::runProc'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
hwnd$GSCopy$ = 64
ex$1 = 72
rcClient$2 = 80
__$ArrayPad$ = 96
this$ = 144
hwnd$ = 152
message$ = 160
wParam$ = 168
lParam$ = 176
?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus_Window::runProc'::`1'::catch$0

; 118  : 			{

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z$0:

; 119  : 				::MessageBoxA(hwnd, ex.what(), "Exception On WM_CREATE", MB_OK);

  0000d	48 8b 4d 48	 mov	 rcx, QWORD PTR ex$1[rbp]
  00011	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00014	ff 50 08	 call	 QWORD PTR [rax+8]
  00017	48 8b d0	 mov	 rdx, rax
  0001a	45 33 c9	 xor	 r9d, r9d
  0001d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BH@GEANJPBI@Exception?5On?5WM_CREATE@
  00024	48 8b 4d 40	 mov	 rcx, QWORD PTR hwnd$GSCopy$[rbp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxA

; 120  : 				exit(-1);

  0002e	b9 ff ff ff ff	 mov	 ecx, -1
  00033	e8 00 00 00 00	 call	 exit
  00038	90		 npad	 1
?catch$0@?0??runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus_Window::runProc'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
;	COMDAT ?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwnd$ = 64
message$ = 72
wParam$ = 80
lParam$ = 88
?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z PROC ; Notepad_plus_Window::Notepad_plus_Proc, COMDAT

; 59   : {

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	49 8b f1	 mov	 rsi, r9
  00017	49 8b e8	 mov	 rbp, r8
  0001a	8b fa		 mov	 edi, edx
  0001c	48 8b d9	 mov	 rbx, rcx

; 60   : 	if (hwnd == NULL)

  0001f	48 85 c9	 test	 rcx, rcx
  00022	75 04		 jne	 SHORT $LN4@Notepad_pl

; 61   : 		return FALSE;

  00024	33 c0		 xor	 eax, eax
  00026	eb 60		 jmp	 SHORT $LN1@Notepad_pl
$LN4@Notepad_pl:

; 62   : 
; 63   : 	switch(message)

  00028	ba eb ff ff ff	 mov	 edx, -21
  0002d	81 ff 81 00 00
	00		 cmp	 edi, 129		; 00000081H
  00033	74 1e		 je	 SHORT $LN5@Notepad_pl

; 79   : 		}
; 80   : 
; 81   : 		default:
; 82   : 		{
; 83   : 			return (reinterpret_cast<Notepad_plus_Window *>(::GetWindowLongPtr(hwnd, GWLP_USERDATA))->runProc(hwnd, message, wParam, lParam));

  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowLongPtrW
  0003b	4c 8b cd	 mov	 r9, rbp
  0003e	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00043	48 8b c8	 mov	 rcx, rax
  00046	44 8b c7	 mov	 r8d, edi
  00049	48 8b d3	 mov	 rdx, rbx
  0004c	e8 00 00 00 00	 call	 ?runProc@Notepad_plus_Window@@AEAA_JPEAUHWND__@@I_K_J@Z ; Notepad_plus_Window::runProc
  00051	eb 35		 jmp	 SHORT $LN1@Notepad_pl
$LN5@Notepad_pl:

; 64   : 	{
; 65   : 		case WM_NCCREATE:
; 66   : 		{
; 67   : 			// First message we get the ptr of instantiated object
; 68   : 			// then stock it into GWLP_USERDATA index in order to retrieve afterward
; 69   : 			Notepad_plus_Window *pM30ide = static_cast<Notepad_plus_Window *>((reinterpret_cast<LPCREATESTRUCT>(lParam))->lpCreateParams);

  00053	4d 8b 01	 mov	 r8, QWORD PTR [r9]

; 70   : 			pM30ide->_hSelf = hwnd;

  00056	49 89 58 18	 mov	 QWORD PTR [r8+24], rbx

; 71   : 			::SetWindowLongPtr(hwnd, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(pM30ide));

  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowLongPtrW

; 72   : 
; 73   : 			if (NppDarkMode::isExperimentalEnabled() && NppDarkMode::isEnabled() && NppDarkMode::isScrollbarHackEnabled())

  00060	e8 00 00 00 00	 call	 ?isExperimentalEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isExperimentalEnabled
  00065	84 c0		 test	 al, al
  00067	74 1a		 je	 SHORT $LN6@Notepad_pl
  00069	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  0006e	84 c0		 test	 al, al
  00070	74 11		 je	 SHORT $LN6@Notepad_pl
  00072	e8 00 00 00 00	 call	 ?isScrollbarHackEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isScrollbarHackEnabled
  00077	84 c0		 test	 al, al
  00079	74 08		 je	 SHORT $LN6@Notepad_pl

; 74   : 			{
; 75   : 				NppDarkMode::enableDarkScrollBarForWindowAndChildren(hwnd);

  0007b	48 8b cb	 mov	 rcx, rbx
  0007e	e8 00 00 00 00	 call	 ?enableDarkScrollBarForWindowAndChildren@NppDarkMode@@YAXPEAUHWND__@@@Z ; NppDarkMode::enableDarkScrollBarForWindowAndChildren
$LN6@Notepad_pl:

; 76   : 			}
; 77   : 
; 78   : 			return TRUE;

  00083	b8 01 00 00 00	 mov	 eax, 1
$LN1@Notepad_pl:

; 84   : 		}
; 85   : 	}
; 86   : }

  00088	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0008d	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00092	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00097	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
?Notepad_plus_Proc@Notepad_plus_Window@@CA_JPEAUHWND__@@I_K_J@Z ENDP ; Notepad_plus_Window::Notepad_plus_Proc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ContextMenu\ContextMenu.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ColourPicker\WordStyleDlg.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Process\Processus.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Notepad_plus.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\Buffer.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Notepad_plus.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_wstring.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp
;	COMDAT ?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z PROC	; Notepad_plus::process, COMDAT

; 145  : {

$LN2727:
  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 55		 push	 r13
  00009	41 56		 push	 r14
  0000b	41 57		 push	 r15
  0000d	48 8d ac 24 48
	df ff ff	 lea	 rbp, QWORD PTR [rsp-8376]
  00015	b8 b8 21 00 00	 mov	 eax, 8632		; 000021b8H
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	48 2b e0	 sub	 rsp, rax
  00022	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00029	48 33 c4	 xor	 rax, rsp
  0002c	48 89 85 a0 20
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp-256], rax
  00033	4d 8b f9	 mov	 r15, r9
  00036	4c 89 4c 24 68	 mov	 QWORD PTR $T7[rsp], r9
  0003b	45 8b e0	 mov	 r12d, r8d
  0003e	44 89 44 24 44	 mov	 DWORD PTR message$GSCopy$1$[rsp], r8d
  00043	48 8b fa	 mov	 rdi, rdx
  00046	48 89 54 24 50	 mov	 QWORD PTR hwnd$GSCopy$1$[rsp], rdx
  0004b	48 8b d9	 mov	 rbx, rcx
  0004e	48 8b b5 20 21
	00 00		 mov	 rsi, QWORD PTR lParam$[rbp-256]
  00055	48 89 74 24 48	 mov	 QWORD PTR lParam$GSCopy$1$[rsp], rsi
  0005a	45 33 f6	 xor	 r14d, r14d
  0005d	44 89 74 24 58	 mov	 DWORD PTR $T6[rsp], r14d

; 146  : 	LRESULT result = FALSE;

  00062	4c 89 74 24 60	 mov	 QWORD PTR result$[rsp], r14

; 147  : 	NppParameters& nppParam = NppParameters::getInstance();

  00067	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  0006c	4c 8b e8	 mov	 r13, rax

; 148  : 
; 149  : 	if (NppDarkMode::isDarkMenuEnabled() && NppDarkMode::isEnabled() && NppDarkMode::runUAHWndProc(hwnd, message, wParam, lParam, &result))

  0006f	e8 00 00 00 00	 call	 ?isDarkMenuEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isDarkMenuEnabled
  00074	84 c0		 test	 al, al
  00076	74 2c		 je	 SHORT $LN83@process
  00078	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  0007d	84 c0		 test	 al, al
  0007f	74 23		 je	 SHORT $LN83@process
  00081	48 8d 44 24 60	 lea	 rax, QWORD PTR result$[rsp]
  00086	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0008b	4c 8b ce	 mov	 r9, rsi
  0008e	4d 8b c7	 mov	 r8, r15
  00091	41 8b d4	 mov	 edx, r12d
  00094	48 8b cf	 mov	 rcx, rdi
  00097	e8 00 00 00 00	 call	 ?runUAHWndProc@NppDarkMode@@YA_NPEAUHWND__@@I_K_JPEA_J@Z ; NppDarkMode::runUAHWndProc
  0009c	84 c0		 test	 al, al
  0009e	0f 85 60 4d 00
	00		 jne	 $LN87@process
$LN83@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  000a4	41 bc 01 00 00
	00		 mov	 r12d, 1
  000aa	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
  000ae	81 fa 11 01 00
	00		 cmp	 edx, 273		; 00000111H
  000b4	0f 87 e8 0c 00
	00		 ja	 $LN597@process
  000ba	0f 84 90 0c 00
	00		 je	 $LN183@process
  000c0	8d 42 fe	 lea	 eax, DWORD PTR [rdx-2]
  000c3	3d 84 00 00 00	 cmp	 eax, 132		; 00000084H
  000c8	0f 87 60 44 00
	00		 ja	 $LN563@process
  000ce	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  000d5	41 0f b6 84 00
	00 00 00 00	 movzx	 eax, BYTE PTR $LN2639@process[r8+rax]
  000de	41 8b 8c 80 00
	00 00 00	 mov	 ecx, DWORD PTR $LN2640@process[r8+rax*4]
  000e6	49 03 c8	 add	 rcx, r8
  000e9	ff e1		 jmp	 rcx
$LN84@process:

; 155  : 	{
; 156  : 		case WM_NCACTIVATE:
; 157  : 		{
; 158  : 			// Note: lParam is -1 to prevent endless loops of calls
; 159  : 			::SendMessage(_dockingManager.getHSelf(), WM_NCACTIVATE, wParam, -1);

  000eb	49 c7 c1 ff ff
	ff ff		 mov	 r9, -1
  000f2	4d 8b c7	 mov	 r8, r15
  000f5	ba 86 00 00 00	 mov	 edx, 134		; 00000086H
  000fa	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  000fe	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 160  : 			result = ::DefWindowProc(hwnd, message, wParam, lParam);

  00104	4c 8b 4c 24 48	 mov	 r9, QWORD PTR lParam$GSCopy$1$[rsp]
  00109	4d 8b c7	 mov	 r8, r15
  0010c	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
  00110	48 8b f7	 mov	 rsi, rdi
  00113	48 8b cf	 mov	 rcx, rdi
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  0011c	48 89 44 24 60	 mov	 QWORD PTR result$[rsp], rax

; 161  : 			if (NppDarkMode::isDarkMenuEnabled() && NppDarkMode::isEnabled())

  00121	e8 00 00 00 00	 call	 ?isDarkMenuEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isDarkMenuEnabled
  00126	84 c0		 test	 al, al
  00128	0f 84 d6 4c 00
	00		 je	 $LN87@process
  0012e	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  00133	84 c0		 test	 al, al
  00135	0f 84 c9 4c 00
	00		 je	 $LN87@process

; 162  : 			{
; 163  : 				NppDarkMode::drawUAHMenuNCBottomLine(hwnd);

  0013b	48 8b cf	 mov	 rcx, rdi

; 174  : 			}
; 175  : 			return result;

  0013e	e8 00 00 00 00	 call	 ?drawUAHMenuNCBottomLine@NppDarkMode@@YAXPEAUHWND__@@@Z ; NppDarkMode::drawUAHMenuNCBottomLine
  00143	e9 bc 4c 00 00	 jmp	 $LN87@process
$LN86@process:

; 164  : 			}
; 165  : 			return result;
; 166  : 		}
; 167  : 
; 168  : 		case WM_NCPAINT:
; 169  : 		{
; 170  : 			result = ::DefWindowProc(hwnd, message, wParam, lParam);

  00148	4c 8b 4c 24 48	 mov	 r9, QWORD PTR lParam$GSCopy$1$[rsp]
  0014d	4d 8b c7	 mov	 r8, r15
  00150	48 8b cf	 mov	 rcx, rdi
  00153	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  00159	48 89 44 24 60	 mov	 QWORD PTR result$[rsp], rax

; 171  : 			if (NppDarkMode::isDarkMenuEnabled() && NppDarkMode::isEnabled())

  0015e	e8 00 00 00 00	 call	 ?isDarkMenuEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isDarkMenuEnabled
  00163	84 c0		 test	 al, al
  00165	0f 84 99 4c 00
	00		 je	 $LN87@process
  0016b	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  00170	84 c0		 test	 al, al
  00172	0f 84 8c 4c 00
	00		 je	 $LN87@process

; 172  : 			{
; 173  : 				NppDarkMode::drawUAHMenuNCBottomLine(hwnd);

  00178	48 8b cf	 mov	 rcx, rdi

; 174  : 			}
; 175  : 			return result;

  0017b	e8 00 00 00 00	 call	 ?drawUAHMenuNCBottomLine@NppDarkMode@@YAXPEAUHWND__@@@Z ; NppDarkMode::drawUAHMenuNCBottomLine
  00180	e9 7f 4c 00 00	 jmp	 $LN87@process
$LN88@process:

; 176  : 		}
; 177  : 
; 178  : 		case WM_ERASEBKGND:
; 179  : 		{
; 180  : 			if (NppDarkMode::isEnabled())

  00185	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  0018a	48 8b cf	 mov	 rcx, rdi
  0018d	84 c0		 test	 al, al
  0018f	74 2d		 je	 SHORT $LN89@process
  00191	0f 57 c0	 xorps	 xmm0, xmm0

; 181  : 			{
; 182  : 				RECT rc = { 0 };

  00194	0f 11 45 f0	 movups	 XMMWORD PTR rc$47[rbp-256], xmm0

; 183  : 				GetClientRect(hwnd, &rc);

  00198	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$47[rbp-256]
  0019c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetClientRect

; 184  : 				FillRect((HDC)wParam, &rc, NppDarkMode::getBackgroundBrush());

  001a2	e8 00 00 00 00	 call	 ?getBackgroundBrush@NppDarkMode@@YAPEAUHBRUSH__@@XZ ; NppDarkMode::getBackgroundBrush
  001a7	4c 8b c0	 mov	 r8, rax
  001aa	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$47[rbp-256]
  001ae	49 8b cf	 mov	 rcx, r15
  001b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FillRect
$LN2622@process:

; 2748 : }

  001b7	33 c0		 xor	 eax, eax
  001b9	e9 4b 4c 00 00	 jmp	 $LN1@process
$LN89@process:

; 185  : 				return 0;
; 186  : 			}
; 187  : 			else
; 188  : 			{
; 189  : 				return ::DefWindowProc(hwnd, message, wParam, lParam);

  001be	4c 8b 4c 24 48	 mov	 r9, QWORD PTR lParam$GSCopy$1$[rsp]
  001c3	4d 8b c7	 mov	 r8, r15
  001c6	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
  001ca	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  001d0	e9 34 4c 00 00	 jmp	 $LN1@process
$LN90@process:

; 190  : 			}
; 191  : 		}
; 192  : 
; 193  : 		case WM_SETTINGCHANGE:
; 194  : 		{
; 195  : 			NppDarkMode::handleSettingChange(hwnd, lParam);

  001d5	48 8b 54 24 48	 mov	 rdx, QWORD PTR lParam$GSCopy$1$[rsp]
  001da	48 8b cf	 mov	 rcx, rdi
  001dd	e8 00 00 00 00	 call	 ?handleSettingChange@NppDarkMode@@YAXPEAUHWND__@@_J@Z ; NppDarkMode::handleSettingChange

; 196  : 
; 197  : 			return ::DefWindowProc(hwnd, message, wParam, lParam);

  001e2	4c 8b 4c 24 48	 mov	 r9, QWORD PTR lParam$GSCopy$1$[rsp]
  001e7	4d 8b c7	 mov	 r8, r15
  001ea	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
  001ee	48 8b cf	 mov	 rcx, rdi
  001f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  001f7	e9 0d 4c 00 00	 jmp	 $LN1@process
$LN93@process:

; 203  : 			return TRUE;
; 204  : 		}
; 205  : 
; 206  : 		case WM_DRAWITEM:
; 207  : 		{
; 208  : 			DRAWITEMSTRUCT *dis = reinterpret_cast<DRAWITEMSTRUCT *>(lParam);
; 209  : 			if (dis->CtlType == ODT_TAB)

  001fc	83 3e 65	 cmp	 DWORD PTR [rsi], 101	; 00000065H
  001ff	0f 85 e7 4b 00
	00		 jne	 $LN299@process

; 210  : 				return ::SendMessage(dis->hwndItem, WM_DRAWITEM, wParam, lParam);

  00205	4c 8b ce	 mov	 r9, rsi
  00208	4d 8b c7	 mov	 r8, r15
  0020b	ba 2b 00 00 00	 mov	 edx, 43			; 0000002bH
  00210	48 8b 4e 18	 mov	 rcx, QWORD PTR [rsi+24]
  00214	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
  0021a	e9 ea 4b 00 00	 jmp	 $LN1@process
$LN170@process:

; 591  : 		}
; 592  : 
; 593  : 		case WM_SIZE:
; 594  : 		{
; 595  : 			RECT rc;
; 596  : 			_pPublicInterface->getClientRect(rc);

  0021f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00222	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00225	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$46[rbp-256]
  00229	ff 50 38	 call	 QWORD PTR [rax+56]
  0022c	48 8b fe	 mov	 rdi, rsi
  0022f	48 89 74 24 48	 mov	 QWORD PTR lParam$GSCopy$1$[rsp], rsi
  00234	48 85 f6	 test	 rsi, rsi

; 597  : 			if (lParam == 0)

  00237	75 22		 jne	 SHORT $LN171@process

; 598  : 				lParam = MAKELPARAM(rc.right - rc.left, rc.bottom - rc.top);

  00239	0f b7 45 fc	 movzx	 eax, WORD PTR rc$46[rbp-244]
  0023d	66 2b 45 f4	 sub	 ax, WORD PTR rc$46[rbp-252]
  00241	0f b7 f8	 movzx	 edi, ax
  00244	48 c1 e7 10	 shl	 rdi, 16
  00248	0f b7 45 f8	 movzx	 eax, WORD PTR rc$46[rbp-248]
  0024c	66 2b 45 f0	 sub	 ax, WORD PTR rc$46[rbp-256]
  00250	0f b7 c8	 movzx	 ecx, ax
  00253	48 0b f9	 or	 rdi, rcx
  00256	48 89 7c 24 48	 mov	 QWORD PTR lParam$GSCopy$1$[rsp], rdi
$LN171@process:

; 599  : 
; 600  : 			::MoveWindow(_rebarTop.getHSelf(), 0, 0, rc.right, _rebarTop.getHeight(), TRUE);

  0025b	48 8d 8b 40 0c
	00 00		 lea	 rcx, QWORD PTR [rbx+3136]
  00262	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00265	ff 50 50	 call	 QWORD PTR [rax+80]
  00268	44 89 64 24 28	 mov	 DWORD PTR [rsp+40], r12d
  0026d	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00271	44 8b 4d f8	 mov	 r9d, DWORD PTR rc$46[rbp-248]
  00275	45 33 c0	 xor	 r8d, r8d
  00278	33 d2		 xor	 edx, edx
  0027a	48 8b 8b 58 0c
	00 00		 mov	 rcx, QWORD PTR [rbx+3160]
  00281	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MoveWindow

; 601  : 			_statusBar.adjustParts(rc.right);

  00287	8b 55 f8	 mov	 edx, DWORD PTR rc$46[rbp-248]
  0028a	48 8d 8b d0 0b
	00 00		 lea	 rcx, QWORD PTR [rbx+3024]
  00291	e8 00 00 00 00	 call	 ?adjustParts@StatusBar@@QEAAXH@Z ; StatusBar::adjustParts

; 602  : 			::SendMessage(_statusBar.getHSelf(), WM_SIZE, wParam, lParam);

  00296	4c 8b cf	 mov	 r9, rdi
  00299	4d 8b c7	 mov	 r8, r15
  0029c	ba 05 00 00 00	 mov	 edx, 5
  002a1	48 8b 8b e8 0b
	00 00		 mov	 rcx, QWORD PTR [rbx+3048]
  002a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 603  : 
; 604  : 			int rebarBottomHeight = _rebarBottom.getHeight();

  002ae	48 8d 8b 78 0c
	00 00		 lea	 rcx, QWORD PTR [rbx+3192]
  002b5	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  002b8	ff 50 50	 call	 QWORD PTR [rax+80]
  002bb	8b f8		 mov	 edi, eax

; 605  : 			int statusBarHeight = _statusBar.getHeight();

  002bd	48 8d 8b d0 0b
	00 00		 lea	 rcx, QWORD PTR [rbx+3024]
  002c4	e8 00 00 00 00	 call	 ?getHeight@StatusBar@@UEBAHXZ ; StatusBar::getHeight

; 606  : 			::MoveWindow(_rebarBottom.getHSelf(), 0, rc.bottom - rebarBottomHeight - statusBarHeight, rc.right, rebarBottomHeight, TRUE);

  002c9	44 8b 45 fc	 mov	 r8d, DWORD PTR rc$46[rbp-244]
  002cd	44 2b c0	 sub	 r8d, eax
  002d0	44 2b c7	 sub	 r8d, edi
  002d3	44 89 64 24 28	 mov	 DWORD PTR [rsp+40], r12d
  002d8	89 7c 24 20	 mov	 DWORD PTR [rsp+32], edi
  002dc	44 8b 4d f8	 mov	 r9d, DWORD PTR rc$46[rbp-248]
  002e0	33 d2		 xor	 edx, edx
  002e2	48 8b 8b 90 0c
	00 00		 mov	 rcx, QWORD PTR [rbx+3216]
  002e9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MoveWindow

; 607  : 
; 608  : 			getMainClientRect(rc);

  002ef	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$46[rbp-256]
  002f3	48 8b cb	 mov	 rcx, rbx
  002f6	e8 00 00 00 00	 call	 ?getMainClientRect@Notepad_plus@@AEBAXAEAUtagRECT@@@Z ; Notepad_plus::getMainClientRect

; 609  : 			_dockingManager.reSizeTo(rc);

  002fb	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  002ff	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00302	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$46[rbp-256]
  00306	ff 50 20	 call	 QWORD PTR [rax+32]

; 610  : 
; 611  : 			if (_pDocMap)

  00309	48 8b 8b a8 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623784]
  00310	48 85 c9	 test	 rcx, rcx
  00313	74 11		 je	 SHORT $LN173@process

; 612  : 			{
; 613  : 				_pDocMap->doMove();

  00315	e8 00 00 00 00	 call	 ?doMove@DocumentMap@@QEAAXXZ ; DocumentMap::doMove

; 614  : 				_pDocMap->reloadMap();

  0031a	48 8b 8b a8 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623784]
  00321	e8 00 00 00 00	 call	 ?reloadMap@DocumentMap@@QEAAXXZ ; DocumentMap::reloadMap
$LN173@process:

; 615  : 			}
; 616  : 
; 617  : 			result = TRUE;
; 618  : 			break;
; 619  : 		}
; 620  : 
; 621  : 		case WM_MOVE:
; 622  : 		{
; 623  : 			result = TRUE;

  00326	4c 89 64 24 60	 mov	 QWORD PTR result$[rsp], r12

; 624  : 			break;

  0032b	e9 bc 4a 00 00	 jmp	 $LN299@process
$LN177@process:

; 641  : 		}
; 642  : 
; 643  : 		case WM_COPYDATA:
; 644  : 		{
; 645  : 			COPYDATASTRUCT *pCopyData = reinterpret_cast<COPYDATASTRUCT *>(lParam);
; 646  : 
; 647  : 			switch (pCopyData->dwData)

  00330	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00333	48 85 c0	 test	 rax, rax
  00336	0f 84 61 01 00
	00		 je	 $LN178@process
  0033c	49 2b c4	 sub	 rax, r12
  0033f	0f 84 89 00 00
	00		 je	 $LN181@process
  00345	49 3b c4	 cmp	 rax, r12
  00348	0f 85 b4 0d 00
	00		 jne	 $LN2695@process

; 676  : 					break;
; 677  : 				}
; 678  : 
; 679  : 				case COPYDATA_FILENAMESW:
; 680  : 				{
; 681  : 					wchar_t *fileNamesW = static_cast<wchar_t *>(pCopyData->lpData);
; 682  : 					const CmdLineParamsDTO & cmdLineParams = nppParam.getCmdLineParams();

  0034e	4d 8d 8d d0 0f
	00 00		 lea	 r9, QWORD PTR [r13+4048]

; 683  : 					loadCommandlineParams(fileNamesW, &cmdLineParams);

  00355	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00359	48 8d 55 80	 lea	 rdx, QWORD PTR $T15[rbp-256]
  0035d	48 8b cb	 mov	 rcx, rbx
  00360	e8 00 00 00 00	 call	 ?loadCommandlineParams@Notepad_plus@@AEAA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@PEB_WPEBUCmdLineParamsDTO@@@Z ; Notepad_plus::loadCommandlineParams
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00365	48 8b 5d 80	 mov	 rbx, QWORD PTR $T15[rbp-256]
  00369	48 85 db	 test	 rbx, rbx
  0036c	0f 84 90 0d 00
	00		 je	 $LN2695@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  00372	48 8b 7d 88	 mov	 rdi, QWORD PTR $T15[rbp-248]
  00376	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00379	74 1a		 je	 SHORT $LN1032@process
  0037b	0f 1f 44 00 00	 npad	 5
$LL1033@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00380	48 8b cb	 mov	 rcx, rbx
  00383	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00388	48 83 c3 20	 add	 rbx, 32			; 00000020H
  0038c	48 3b df	 cmp	 rbx, rdi
  0038f	75 ef		 jne	 SHORT $LL1033@process
  00391	48 8b 5d 80	 mov	 rbx, QWORD PTR $T15[rbp-256]
$LN1032@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00395	48 8b 55 90	 mov	 rdx, QWORD PTR $T15[rbp-240]
  00399	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0039c	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  003a0	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003a3	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  003aa	0f 82 dd 00 00
	00		 jb	 $LN1018@process

; 155  :     _Bytes += _Non_user_size;

  003b0	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003b4	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  003b8	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003bb	48 83 c0 f8	 add	 rax, -8
  003bf	48 83 f8 1f	 cmp	 rax, 31
  003c3	0f 87 69 4a 00
	00		 ja	 $LN2708@process
  003c9	e9 bf 00 00 00	 jmp	 $LN1018@process
$LN181@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 671  : 					char *fileNamesA = static_cast<char *>(pCopyData->lpData);

  003ce	48 8b 76 10	 mov	 rsi, QWORD PTR [rsi+16]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h

; 92   : 		static WcharMbcsConvertor instance;

  003d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  003d8	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  003e1	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  003e6	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  003ea	8b 0c 02	 mov	 ecx, DWORD PTR [rdx+rax]
  003ed	39 0d 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA, ecx ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  003f3	0f 8f 45 4a 00
	00		 jg	 $LN2709@process
$LN982@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 674  : 					const wchar_t *fileNamesW = wmc.char2wchar(fileNamesA, CP_ACP);

  003f9	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  003fe	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00403	49 c7 c1 ff ff
	ff ff		 mov	 r9, -1
  0040a	45 33 c0	 xor	 r8d, r8d
  0040d	48 8b d6	 mov	 rdx, rsi
  00410	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
  00417	e8 00 00 00 00	 call	 ?char2wchar@WcharMbcsConvertor@@QEAAPEB_WPEBDIHPEAH1@Z ; WcharMbcsConvertor::char2wchar

; 675  : 					loadCommandlineParams(fileNamesW, &cmdLineParams);

  0041c	4d 8d 8d d0 0f
	00 00		 lea	 r9, QWORD PTR [r13+4048]
  00423	4c 8b c0	 mov	 r8, rax
  00426	48 8d 55 80	 lea	 rdx, QWORD PTR $T16[rbp-256]
  0042a	48 8b cb	 mov	 rcx, rbx
  0042d	e8 00 00 00 00	 call	 ?loadCommandlineParams@Notepad_plus@@AEAA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@PEB_WPEBUCmdLineParamsDTO@@@Z ; Notepad_plus::loadCommandlineParams
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00432	48 8b 5d 80	 mov	 rbx, QWORD PTR $T16[rbp-256]
  00436	48 85 db	 test	 rbx, rbx
  00439	0f 84 c3 0c 00
	00		 je	 $LN2695@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0043f	48 8b 7d 88	 mov	 rdi, QWORD PTR $T16[rbp-248]
  00443	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00446	74 15		 je	 SHORT $LN994@process
$LL995@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00448	48 8b cb	 mov	 rcx, rbx
  0044b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00450	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00454	48 3b df	 cmp	 rbx, rdi
  00457	75 ef		 jne	 SHORT $LL995@process
  00459	48 8b 5d 80	 mov	 rbx, QWORD PTR $T16[rbp-256]
$LN994@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0045d	48 8b 55 90	 mov	 rdx, QWORD PTR $T16[rbp-240]
  00461	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00464	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  00468	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0046b	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00472	72 19		 jb	 SHORT $LN1018@process

; 155  :     _Bytes += _Non_user_size;

  00474	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00478	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  0047c	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0047f	48 83 c0 f8	 add	 rax, -8
  00483	48 83 f8 1f	 cmp	 rax, 31
  00487	0f 87 e8 49 00
	00		 ja	 $LN2710@process
$LN1018@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1036 : 			return TRUE;

  0048d	48 8b cb	 mov	 rcx, rbx
  00490	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete

; 2748 : }

  00495	49 8b c4	 mov	 rax, r12
  00498	e9 6c 49 00 00	 jmp	 $LN1@process
$LN178@process:

; 648  : 			{
; 649  : 				case COPYDATA_PARAMS:
; 650  : 				{
; 651  : 					const CmdLineParamsDTO *cmdLineParam = static_cast<const CmdLineParamsDTO *>(pCopyData->lpData); // CmdLineParams object from another instance

  0049d	48 8b 5e 10	 mov	 rbx, QWORD PTR [rsi+16]

; 652  : 					const DWORD cmdLineParamsSize = pCopyData->cbData;  // CmdLineParams size from another instance
; 653  : 					if (sizeof(CmdLineParamsDTO) == cmdLineParamsSize) // make sure the structure is the same

  004a1	83 7e 08 38	 cmp	 DWORD PTR [rsi+8], 56	; 00000038H
  004a5	0f 85 84 00 00
	00		 jne	 $LN972@process
  004ab	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  004ae	41 88 85 d0 0f
	00 00		 mov	 BYTE PTR [r13+4048], al
  004b5	0f b6 43 01	 movzx	 eax, BYTE PTR [rbx+1]
  004b9	41 88 85 d1 0f
	00 00		 mov	 BYTE PTR [r13+4049], al
  004c0	0f b6 43 02	 movzx	 eax, BYTE PTR [rbx+2]
  004c4	41 88 85 d2 0f
	00 00		 mov	 BYTE PTR [r13+4050], al
  004cb	0f b6 43 03	 movzx	 eax, BYTE PTR [rbx+3]
  004cf	41 88 85 d3 0f
	00 00		 mov	 BYTE PTR [r13+4051], al
  004d6	0f b6 43 04	 movzx	 eax, BYTE PTR [rbx+4]
  004da	41 88 85 d4 0f
	00 00		 mov	 BYTE PTR [r13+4052], al
  004e1	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  004e4	41 89 85 d8 0f
	00 00		 mov	 DWORD PTR [r13+4056], eax
  004eb	8b 43 0c	 mov	 eax, DWORD PTR [rbx+12]
  004ee	41 89 85 dc 0f
	00 00		 mov	 DWORD PTR [r13+4060], eax
  004f5	8b 43 10	 mov	 eax, DWORD PTR [rbx+16]
  004f8	41 89 85 e0 0f
	00 00		 mov	 DWORD PTR [r13+4064], eax
  004ff	8b 43 14	 mov	 eax, DWORD PTR [rbx+20]
  00502	41 89 85 e4 0f
	00 00		 mov	 DWORD PTR [r13+4068], eax
  00509	4c 8d 43 18	 lea	 r8, QWORD PTR [rbx+24]
  0050d	49 8d 8d e8 0f
	00 00		 lea	 rcx, QWORD PTR [r13+4072]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3077 :         if (this != _STD addressof(_Right)) {

  00514	49 3b c8	 cmp	 rcx, r8
  00517	74 16		 je	 SHORT $LN972@process

; 2305 :         const value_type* _Result = _Bx._Buf;

  00519	49 8b d0	 mov	 rdx, r8

; 2319 :         return _BUF_SIZE <= _Myres;

  0051c	49 83 78 18 08	 cmp	 QWORD PTR [r8+24], 8

; 2306 :         if (_Large_string_engaged()) {

  00521	72 03		 jb	 SHORT $LN977@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00523	49 8b 10	 mov	 rdx, QWORD PTR [r8]
$LN977@process:

; 3035 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00526	4d 8b 40 10	 mov	 r8, QWORD PTR [r8+16]
  0052a	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN972@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 664  : 					NppGUI nppGui = (NppGUI)nppParam.getNppGUI();

  0052f	49 8d 95 90 00
	00 00		 lea	 rdx, QWORD PTR [r13+144]
  00536	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR nppGui$60[rbp-256]
  0053d	e8 00 00 00 00	 call	 ??0NppGUI@@QEAA@AEBU0@@Z
  00542	90		 npad	 1

; 665  : 					nppGui._isCmdlineNosessionActivated = cmdLineParam->_isNoSession;

  00543	0f b6 43 01	 movzx	 eax, BYTE PTR [rbx+1]
  00547	88 85 e7 00 00
	00		 mov	 BYTE PTR nppGui$60[rbp-185], al

; 666  : 					break;

  0054d	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR nppGui$60[rbp-256]
  00554	e8 00 00 00 00	 call	 ??1NppGUI@@QEAA@XZ

; 2748 : }

  00559	49 8b c4	 mov	 rax, r12
  0055c	e9 a8 48 00 00	 jmp	 $LN1@process
$LN367@process:

; 1589 : 						}
; 1590 : 					}
; 1591 : 					return lParam;
; 1592 : 				}
; 1593 : 			}
; 1594 : 			return TRUE;
; 1595 : 		}
; 1596 : 
; 1597 : 		case WM_CONTEXTMENU:
; 1598 : 		{
; 1599 : 			if (nppParam._isTaskListRBUTTONUP_Active)

  00561	45 38 75 00	 cmp	 BYTE PTR [r13], r14b
  00565	74 18		 je	 SHORT $LN368@process

; 1600 : 			{
; 1601 : 				nppParam._isTaskListRBUTTONUP_Active = false;

  00567	45 88 75 00	 mov	 BYTE PTR [r13], r14b

; 2748 : }

  0056b	4c 8b ce	 mov	 r9, rsi
  0056e	4d 8b c7	 mov	 r8, r15
  00571	48 8b cf	 mov	 rcx, rdi
  00574	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  0057a	e9 8a 48 00 00	 jmp	 $LN1@process
$LN368@process:

; 1602 : 			}
; 1603 : 			else
; 1604 : 			{
; 1605 : 				if ((HWND(wParam) == _mainEditView.getHSelf()) || (HWND(wParam) == _subEditView.getHSelf()))

  0057f	48 8b 83 08 07
	00 00		 mov	 rax, QWORD PTR [rbx+1800]
  00586	4c 3b f8	 cmp	 r15, rax
  00589	74 1d		 je	 SHORT $LN371@process
  0058b	4c 3b bb 68 06
	00 00		 cmp	 r15, QWORD PTR [rbx+1640]
  00592	74 14		 je	 SHORT $LN371@process
$LN370@process:

; 2748 : }

  00594	4c 8b ce	 mov	 r9, rsi
  00597	4d 8b c7	 mov	 r8, r15
  0059a	48 8b cf	 mov	 rcx, rdi
  0059d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  005a3	e9 61 48 00 00	 jmp	 $LN1@process
$LN371@process:

; 1606 : 				{
; 1607 : 					if ((HWND(wParam) == _mainEditView.getHSelf()))
; 1608 : 						switchEditViewTo(MAIN_VIEW);
; 1609 : 					else
; 1610 : 						switchEditViewTo(SUB_VIEW);
; 1611 : 
; 1612 : 					POINT p;
; 1613 : 					::GetCursorPos(&p);

  005a8	41 8b d6	 mov	 edx, r14d
  005ab	4c 3b f8	 cmp	 r15, rax
  005ae	0f 95 c2	 setne	 dl
  005b1	48 8b cb	 mov	 rcx, rbx
  005b4	e8 00 00 00 00	 call	 ?switchEditViewTo@Notepad_plus@@AEAAHH@Z ; Notepad_plus::switchEditViewTo
  005b9	48 8d 4c 24 48	 lea	 rcx, QWORD PTR p$4[rsp]
  005be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCursorPos
  005c4	0f 57 c0	 xorps	 xmm0, xmm0
  005c7	f3 0f 7f 45 a0	 movdqu	 XMMWORD PTR scintillaContextmenu$25[rbp-256], xmm0
  005cc	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  005cf	f3 0f 7f 4d b0	 movdqu	 XMMWORD PTR scintillaContextmenu$25[rbp-240], xmm1
  005d4	4c 89 75 c0	 mov	 QWORD PTR scintillaContextmenu$25[rbp-224], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1616 : 					bool copyLink = (_pEditView->getSelectedTextCount() == 0) && _pEditView->getIndicatorRange(URL_INDIC);

  005d8	48 8b b3 d0 08
	00 00		 mov	 rsi, QWORD PTR [rbx+2256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h

; 283  : 		crange.cpMin = long(execute(SCI_GETSELECTIONSTART));

  005df	45 33 c9	 xor	 r9d, r9d
  005e2	45 33 c0	 xor	 r8d, r8d
  005e5	ba 5f 08 00 00	 mov	 edx, 2143		; 0000085fH
  005ea	48 8b ce	 mov	 rcx, rsi
  005ed	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  005f2	48 8b f8	 mov	 rdi, rax

; 284  : 		crange.cpMax = long(execute(SCI_GETSELECTIONEND));

  005f5	45 33 c9	 xor	 r9d, r9d
  005f8	45 33 c0	 xor	 r8d, r8d
  005fb	ba 61 08 00 00	 mov	 edx, 2145		; 00000861H
  00600	48 8b ce	 mov	 rcx, rsi
  00603	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  00608	3b c7		 cmp	 eax, edi
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1616 : 					bool copyLink = (_pEditView->getSelectedTextCount() == 0) && _pEditView->getIndicatorRange(URL_INDIC);

  0060a	75 23		 jne	 SHORT $LN589@process
  0060c	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00611	45 33 c9	 xor	 r9d, r9d
  00614	45 33 c0	 xor	 r8d, r8d
  00617	41 8d 51 08	 lea	 edx, QWORD PTR [r9+8]
  0061b	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  00622	e8 00 00 00 00	 call	 ?getIndicatorRange@ScintillaEditView@@QEAA_NHPEAH00@Z ; ScintillaEditView::getIndicatorRange
  00627	84 c0		 test	 al, al
  00629	74 04		 je	 SHORT $LN589@process
  0062b	b0 01		 mov	 al, 1
  0062d	eb 02		 jmp	 SHORT $LN590@process
$LN589@process:
  0062f	32 c0		 xor	 al, al
$LN590@process:

; 1617 : 					scintillaContextmenu.create(hwnd, tmp, _mainMenuHandle, copyLink);

  00631	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00635	4c 8b 8b 78 7a
	09 00		 mov	 r9, QWORD PTR [rbx+621176]
  0063c	4d 8d 85 d8 30
	03 00		 lea	 r8, QWORD PTR [r13+209112]
  00643	48 8b 54 24 50	 mov	 rdx, QWORD PTR hwnd$GSCopy$1$[rsp]
  00648	48 8d 4d a0	 lea	 rcx, QWORD PTR scintillaContextmenu$25[rbp-256]
  0064c	e8 00 00 00 00	 call	 ?create@ContextMenu@@QEAAXPEAUHWND__@@AEBV?$vector@UMenuItemUnit@@V?$allocator@UMenuItemUnit@@@std@@@std@@QEAUHMENU__@@_N@Z ; ContextMenu::create
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ContextMenu\ContextMenu.h

; 43   : 		::TrackPopupMenu(_hMenu, TPM_LEFTALIGN, p.x, p.y, 0, _hParent, NULL);

  00651	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  00656	48 8b 45 a0	 mov	 rax, QWORD PTR scintillaContextmenu$25[rbp-256]
  0065a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0065f	44 89 74 24 20	 mov	 DWORD PTR [rsp+32], r14d
  00664	44 8b 4c 24 4c	 mov	 r9d, DWORD PTR p$4[rsp+4]
  00669	44 8b 44 24 48	 mov	 r8d, DWORD PTR p$4[rsp]
  0066e	33 d2		 xor	 edx, edx
  00670	48 8b 4d a8	 mov	 rcx, QWORD PTR scintillaContextmenu$25[rbp-248]
  00674	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_TrackPopupMenu
  0067a	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1619 : 					return TRUE;

  0067b	48 8d 4d a0	 lea	 rcx, QWORD PTR scintillaContextmenu$25[rbp-256]
  0067f	e8 00 00 00 00	 call	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
  00684	b8 01 00 00 00	 mov	 eax, 1
  00689	e9 7b 47 00 00	 jmp	 $LN1@process
$LN374@process:

; 1620 : 				}
; 1621 : 			}
; 1622 : 
; 1623 : 			return ::DefWindowProc(hwnd, message, wParam, lParam);
; 1624 : 		}
; 1625 : 
; 1626 : 		case WM_NOTIFY:
; 1627 : 		{
; 1628 : 			NMHDR* nmhdr = reinterpret_cast<NMHDR*>(lParam);
; 1629 : 			if (nmhdr->code == NM_CUSTOMDRAW && (nmhdr->hwndFrom == _toolBar.getHSelf()))

  0068e	8b 46 10	 mov	 eax, DWORD PTR [rsi+16]
  00691	83 f8 f4	 cmp	 eax, -12		; fffffff4H
  00694	75 58		 jne	 SHORT $LN378@process
  00696	48 8b 83 30 0a
	00 00		 mov	 rax, QWORD PTR [rbx+2608]
  0069d	48 39 06	 cmp	 QWORD PTR [rsi], rax
  006a0	75 63		 jne	 SHORT $LN379@process

; 1630 : 			{
; 1631 : 				NMTBCUSTOMDRAW* nmtbcd = reinterpret_cast<NMTBCUSTOMDRAW*>(lParam);
; 1632 : 				if (nmtbcd->nmcd.dwDrawStage == CDDS_PREERASE)

  006a2	83 7e 18 03	 cmp	 DWORD PTR [rsi+24], 3
  006a6	75 5d		 jne	 SHORT $LN379@process

; 1633 : 				{
; 1634 : 					if (NppDarkMode::isEnabled())

  006a8	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  006ad	84 c0		 test	 al, al
  006af	0f 84 02 fb ff
	ff		 je	 $LN2622@process

; 1635 : 					{
; 1636 : 						FillRect(nmtbcd->nmcd.hdc, &nmtbcd->nmcd.rc, NppDarkMode::getDarkerBackgroundBrush());

  006b5	e8 00 00 00 00	 call	 ?getDarkerBackgroundBrush@NppDarkMode@@YAPEAUHBRUSH__@@XZ ; NppDarkMode::getDarkerBackgroundBrush
  006ba	4c 8b c0	 mov	 r8, rax
  006bd	48 8d 56 28	 lea	 rdx, QWORD PTR [rsi+40]
  006c1	48 8b 4e 20	 mov	 rcx, QWORD PTR [rsi+32]
  006c5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FillRect

; 1637 : 						nmtbcd->clrText = NppDarkMode::getTextColor();

  006cb	e8 00 00 00 00	 call	 ?getTextColor@NppDarkMode@@YAKXZ ; NppDarkMode::getTextColor
  006d0	89 46 68	 mov	 DWORD PTR [rsi+104], eax

; 1638 : 						SetTextColor(nmtbcd->nmcd.hdc, NppDarkMode::getTextColor());

  006d3	e8 00 00 00 00	 call	 ?getTextColor@NppDarkMode@@YAKXZ ; NppDarkMode::getTextColor
  006d8	8b d0		 mov	 edx, eax
  006da	48 8b 4e 20	 mov	 rcx, QWORD PTR [rsi+32]
  006de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetTextColor

; 1639 : 						return CDRF_SKIPDEFAULT;

  006e4	b8 04 00 00 00	 mov	 eax, 4
  006e9	e9 1b 47 00 00	 jmp	 $LN1@process
$LN378@process:

; 1640 : 					}
; 1641 : 					else
; 1642 : 					{
; 1643 : 						return CDRF_DODEFAULT;
; 1644 : 					}
; 1645 : 				}
; 1646 : 			}
; 1647 : 
; 1648 : 			SCNotification *notification = reinterpret_cast<SCNotification *>(lParam);
; 1649 : 
; 1650 : 			if (notification->nmhdr.code == SCN_UPDATEUI)

  006ee	3d d7 07 00 00	 cmp	 eax, 2007		; 000007d7H
  006f3	75 10		 jne	 SHORT $LN379@process

; 1651 : 			{
; 1652 : 				checkClipboard(); //6

  006f5	48 8b cb	 mov	 rcx, rbx
  006f8	e8 00 00 00 00	 call	 ?checkClipboard@Notepad_plus@@AEAAXXZ ; Notepad_plus::checkClipboard

; 1653 : 				checkUndoState(); //4

  006fd	48 8b cb	 mov	 rcx, rbx
  00700	e8 00 00 00 00	 call	 ?checkUndoState@Notepad_plus@@AEAAXXZ ; Notepad_plus::checkUndoState
$LN379@process:

; 1654 : 			}
; 1655 : 
; 1656 : 			if (wParam == LINKTRIGGERED)

  00705	49 81 ff 2b 06
	00 00		 cmp	 r15, 1579		; 0000062bH
  0070c	75 04		 jne	 SHORT $LN380@process

; 1657 : 				notification->wParam = LINKTRIGGERED;

  0070e	4c 89 7e 50	 mov	 QWORD PTR [rsi+80], r15
$LN380@process:

; 1658 : 
; 1659 : 			_pluginsManager.notify(notification);

  00712	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  00719	48 8b d6	 mov	 rdx, rsi
  0071c	e8 00 00 00 00	 call	 ?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z ; PluginsManager::notify

; 1660 : 
; 1661 : 			return notify(notification);

  00721	48 8b d6	 mov	 rdx, rsi
  00724	48 8b cb	 mov	 rcx, rbx
  00727	e8 00 00 00 00	 call	 ?notify@Notepad_plus@@AEAAHPEAUSCNotification@@@Z ; Notepad_plus::notify
  0072c	48 98		 cdqe
  0072e	e9 d6 46 00 00	 jmp	 $LN1@process
$LN381@process:

; 1662 : 		}
; 1663 : 
; 1664 : 		case WM_ACTIVATEAPP:
; 1665 : 		{
; 1666 : 			if (wParam == TRUE) // if npp is about to be activated

  00733	4d 3b fc	 cmp	 r15, r12
  00736	0f 85 7b fa ff
	ff		 jne	 $LN2622@process

; 1667 : 			{
; 1668 : 				::PostMessage(hwnd, NPPM_INTERNAL_CHECKDOCSTATUS, 0, 0);

  0073c	45 33 c9	 xor	 r9d, r9d
  0073f	45 33 c0	 xor	 r8d, r8d
  00742	ba 1d 08 00 00	 mov	 edx, 2077		; 0000081dH
  00747	48 8b cf	 mov	 rcx, rdi
  0074a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostMessageW

; 2748 : }

  00750	33 c0		 xor	 eax, eax
  00752	e9 b2 46 00 00	 jmp	 $LN1@process
$LN404@process:

; 1764 : 
; 1765 : 			return TRUE;
; 1766 : 		}
; 1767 : 
; 1768 : 		case WM_ACTIVATE:
; 1769 : 		{
; 1770 : 			if (wParam != WA_INACTIVE && _pEditView && _pNonEditView)

  00757	4d 85 ff	 test	 r15, r15
  0075a	0f 84 a2 09 00
	00		 je	 $LN2695@process
  00760	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  00767	48 85 c9	 test	 rcx, rcx
  0076a	0f 84 92 09 00
	00		 je	 $LN2695@process
  00770	4c 39 b3 d8 08
	00 00		 cmp	 QWORD PTR [rbx+2264], r14
  00777	0f 84 85 09 00
	00		 je	 $LN2695@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h

; 109  : 		::SetFocus(_hSelf);

  0077d	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00781	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetFocus
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1773 : 				auto x = _pEditView->execute(SCI_GETXOFFSET);

  00787	45 33 c9	 xor	 r9d, r9d
  0078a	45 33 c0	 xor	 r8d, r8d
  0078d	ba 5e 09 00 00	 mov	 edx, 2398		; 0000095eH
  00792	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  00799	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1774 : 				_pEditView->execute(SCI_SETXOFFSET, x);

  0079e	45 33 c9	 xor	 r9d, r9d
  007a1	4c 8b c0	 mov	 r8, rax
  007a4	ba 5d 09 00 00	 mov	 edx, 2397		; 0000095dH
  007a9	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  007b0	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1775 : 				x = _pNonEditView->execute(SCI_GETXOFFSET);

  007b5	45 33 c9	 xor	 r9d, r9d
  007b8	45 33 c0	 xor	 r8d, r8d
  007bb	ba 5e 09 00 00	 mov	 edx, 2398		; 0000095eH
  007c0	48 8b 8b d8 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2264]
  007c7	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1776 : 				_pNonEditView->execute(SCI_SETXOFFSET, x);

  007cc	45 33 c9	 xor	 r9d, r9d
  007cf	4c 8b c0	 mov	 r8, rax
  007d2	ba 5d 09 00 00	 mov	 edx, 2397		; 0000095dH
  007d7	48 8b 8b d8 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2264]
  007de	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  007e3	49 8b c4	 mov	 rax, r12
  007e6	e9 1e 46 00 00	 jmp	 $LN1@process
$LN418@process:

; 1874 : 			return TRUE;
; 1875 : 		}
; 1876 : 
; 1877 : 		case WM_QUERYENDSESSION:
; 1878 : 		case WM_CLOSE:
; 1879 : 		{
; 1880 : 			if (_pPublicInterface->isPrelaunch())

  007eb	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  007ee	44 38 b0 f8 84
	09 00		 cmp	 BYTE PTR [rax+623864], r14b
  007f5	74 1c		 je	 SHORT $LN420@process

; 1881 : 			{
; 1882 : 				SendMessage(hwnd, WM_SYSCOMMAND, SC_MINIMIZE, 0);

  007f7	45 33 c9	 xor	 r9d, r9d
  007fa	ba 12 01 00 00	 mov	 edx, 274		; 00000112H
  007ff	41 b8 20 f0 00
	00		 mov	 r8d, 61472		; 0000f020H
  00805	48 8b cf	 mov	 rcx, rdi
  00808	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 1883 : 			}

  0080e	e9 dd 04 00 00	 jmp	 $LN421@process
$LN420@process:

; 1884 : 			else
; 1885 : 			{
; 1886 : 				SCNotification scnN;
; 1887 : 				scnN.nmhdr.code = NPPN_BEFORESHUTDOWN;

  00813	c7 85 b0 00 00
	00 fb 03 00 00	 mov	 DWORD PTR scnN$53[rbp-240], 1019 ; 000003fbH

; 1888 : 				scnN.nmhdr.hwndFrom = hwnd;

  0081d	48 89 bd a0 00
	00 00		 mov	 QWORD PTR scnN$53[rbp-256], rdi

; 1889 : 				scnN.nmhdr.idFrom = 0;

  00824	4c 89 b5 a8 00
	00 00		 mov	 QWORD PTR scnN$53[rbp-248], r14

; 1890 : 				_pluginsManager.notify(&scnN);

  0082b	48 8d 83 e0 7b
	09 00		 lea	 rax, QWORD PTR [rbx+621536]
  00832	48 89 44 24 68	 mov	 QWORD PTR tv15176[rsp], rax
  00837	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR scnN$53[rbp-256]
  0083e	48 8b c8	 mov	 rcx, rax
  00841	e8 00 00 00 00	 call	 ?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z ; PluginsManager::notify

; 1891 : 
; 1892 : 				if (_pTrayIco)

  00846	48 8b 8b 70 7b
	09 00		 mov	 rcx, QWORD PTR [rbx+621424]
  0084d	be 02 00 00 00	 mov	 esi, 2
  00852	48 85 c9	 test	 rcx, rcx
  00855	74 07		 je	 SHORT $LN422@process

; 1893 : 					_pTrayIco->doTrayIcon(REMOVE);

  00857	8b d6		 mov	 edx, esi
  00859	e8 00 00 00 00	 call	 ?doTrayIcon@trayIconControler@@QEAAHK@Z ; trayIconControler::doTrayIcon
$LN422@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 918  : 	bool isSnapshotMode() const {return _isSnapshotMode && _rememberLastSession && !_isCmdlineNosessionActivated;};

  0085e	45 38 b5 3d 08
	00 00		 cmp	 BYTE PTR [r13+2109], r14b
  00865	74 2e		 je	 SHORT $LN1843@process
  00867	45 38 b5 d6 00
	00 00		 cmp	 BYTE PTR [r13+214], r14b
  0086e	74 25		 je	 SHORT $LN1843@process
  00870	45 38 b5 d7 00
	00 00		 cmp	 BYTE PTR [r13+215], r14b
  00877	75 1c		 jne	 SHORT $LN1843@process
  00879	45 0f b6 fc	 movzx	 r15d, r12b
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1901 : 					::LockWindowUpdate(hwnd);

  0087d	48 8b cf	 mov	 rcx, rdi
  00880	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LockWindowUpdate

; 1902 : 					MainFileManager.backupCurrentBuffer();

  00886	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  0088b	48 8b c8	 mov	 rcx, rax
  0088e	e8 00 00 00 00	 call	 ?backupCurrentBuffer@FileManager@@QEAA_NXZ ; FileManager::backupCurrentBuffer
  00893	eb 03		 jmp	 SHORT $LN423@process
$LN1843@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 918  : 	bool isSnapshotMode() const {return _isSnapshotMode && _rememberLastSession && !_isCmdlineNosessionActivated;};

  00895	45 32 ff	 xor	 r15b, r15b
$LN423@process:
  00898	4c 89 b5 a0 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-256], r14
  0089f	4c 89 b5 a8 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-248], r14
  008a6	4c 89 b5 b0 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-240], r14
  008ad	44 88 b5 b8 10
	00 00		 mov	 BYTE PTR currentSession$65[rbp-232], r14b
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  008b4	4c 89 b5 c0 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-224], r14
  008bb	0f 57 c0	 xorps	 xmm0, xmm0

; 2355 :     size_type _Mysize = 0; // current length of string

  008be	66 0f 7f 85 d0
	10 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-208], xmm0

; 4596 :         _My_data._Mysize = 0;

  008c6	66 0f 6f 0d 00
	00 00 00	 movdqa	 xmm1, XMMWORD PTR __xmm@00000000000000070000000000000000
  008ce	66 0f 7f 8d d0
	10 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-208], xmm1

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008d6	66 44 89 b5 c0
	10 00 00	 mov	 WORD PTR currentSession$65[rbp-224], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  008de	66 0f 7f 85 e0
	10 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-192], xmm0
  008e6	4c 89 b5 f0 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-176], r14
  008ed	4c 89 b5 f8 10
	00 00		 mov	 QWORD PTR currentSession$65[rbp-168], r14
  008f4	66 0f 7f 85 00
	11 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-160], xmm0
  008fc	66 0f 7f 85 10
	11 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-144], xmm0
  00904	4c 89 b5 20 11
	00 00		 mov	 QWORD PTR currentSession$65[rbp-128], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1906 : 				if (nppgui._rememberLastSession)

  0090b	41 80 bd d6 00
	00 00 00	 cmp	 BYTE PTR [r13+214], 0
  00913	74 19		 je	 SHORT $LN424@process

; 1907 : 				{
; 1908 : 					getCurrentOpenedFiles(currentSession, true);

  00915	41 b0 01	 mov	 r8b, 1
  00918	48 8d 95 a0 10
	00 00		 lea	 rdx, QWORD PTR currentSession$65[rbp-256]
  0091f	48 8b cb	 mov	 rcx, rbx
  00922	e8 00 00 00 00	 call	 ?getCurrentOpenedFiles@Notepad_plus@@QEAAXAEAUSession@@_N@Z ; Notepad_plus::getCurrentOpenedFiles

; 1909 : 					//Lock the recent file list so it isnt populated with opened files
; 1910 : 					//Causing them to show on restart even though they are loaded by session
; 1911 : 					_lastRecentFileList.setLock(true);	//only lock when the session is remembered

  00927	c6 83 6f 7a 09
	00 01		 mov	 BYTE PTR [rbx+621167], 1
$LN424@process:

; 1912 : 				}
; 1913 : 				_isAttemptingCloseOnQuit = true;

  0092e	c6 83 81 7a 09
	00 01		 mov	 BYTE PTR [rbx+621185], 1

; 1914 : 				bool allClosed = fileCloseAll(false, isSnapshotMode);	//try closing files before doing anything else

  00935	45 0f b6 c7	 movzx	 r8d, r15b
  00939	33 d2		 xor	 edx, edx
  0093b	48 8b cb	 mov	 rcx, rbx
  0093e	e8 00 00 00 00	 call	 ?fileCloseAll@Notepad_plus@@QEAA_N_N0@Z ; Notepad_plus::fileCloseAll
  00943	88 44 24 40	 mov	 BYTE PTR tv15353[rsp], al

; 1915 : 				_isAttemptingCloseOnQuit = false;

  00947	c6 83 81 7a 09
	00 00		 mov	 BYTE PTR [rbx+621185], 0

; 1916 : 
; 1917 : 				if (nppgui._rememberLastSession)

  0094e	41 80 bd d6 00
	00 00 00	 cmp	 BYTE PTR [r13+214], 0
  00956	74 07		 je	 SHORT $LN425@process

; 1918 : 					_lastRecentFileList.setLock(false);	//only lock when the session is remembered

  00958	c6 83 6f 7a 09
	00 00		 mov	 BYTE PTR [rbx+621167], 0
$LN425@process:

; 1919 : 
; 1920 : 				if (!saveProjectPanelsParams()) allClosed = false; //writeProjectPanelsSettings

  0095f	48 8b cb	 mov	 rcx, rbx
  00962	e8 00 00 00 00	 call	 ?saveProjectPanelsParams@Notepad_plus@@QEAA_NXZ ; Notepad_plus::saveProjectPanelsParams
  00967	48 8b cb	 mov	 rcx, rbx
  0096a	84 c0		 test	 al, al
  0096c	75 07		 jne	 SHORT $LN426@process
  0096e	e8 00 00 00 00	 call	 ?saveFileBrowserParam@Notepad_plus@@QEAA_NXZ ; Notepad_plus::saveFileBrowserParam

; 1028 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  00973	eb 10		 jmp	 SHORT $LN2621@process
$LN426@process:

; 1921 : 				saveFileBrowserParam();

  00975	e8 00 00 00 00	 call	 ?saveFileBrowserParam@Notepad_plus@@QEAA_NXZ ; Notepad_plus::saveFileBrowserParam

; 1922 : 
; 1923 : 				if (!allClosed)

  0097a	80 7c 24 40 00	 cmp	 BYTE PTR tv15353[rsp], 0
  0097f	0f 85 02 01 00
	00		 jne	 $LN427@process
$LN2621@process:

; 1924 : 				{
; 1925 : 					//User cancelled the shutdown
; 1926 : 					scnN.nmhdr.code = NPPN_CANCELSHUTDOWN;

  00985	c7 85 b0 00 00
	00 fc 03 00 00	 mov	 DWORD PTR scnN$53[rbp-240], 1020 ; 000003fcH

; 1927 : 					_pluginsManager.notify(&scnN);

  0098f	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR scnN$53[rbp-256]
  00996	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv15176[rsp]
  0099b	e8 00 00 00 00	 call	 ?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z ; PluginsManager::notify

; 1928 : 					
; 1929 : 					if (isSnapshotMode)

  009a0	45 84 ff	 test	 r15b, r15b
  009a3	74 09		 je	 SHORT $LN428@process

; 1930 : 						::LockWindowUpdate(NULL);

  009a5	33 c9		 xor	 ecx, ecx
  009a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LockWindowUpdate
  009ad	90		 npad	 1
$LN428@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  009ae	48 8b 9d 10 11
	00 00		 mov	 rbx, QWORD PTR currentSession$65[rbp-144]
  009b5	48 85 db	 test	 rbx, rbx
  009b8	74 71		 je	 SHORT $LN1888@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  009ba	48 8b bd 18 11
	00 00		 mov	 rdi, QWORD PTR currentSession$65[rbp-136]
  009c1	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  009c4	74 18		 je	 SHORT $LN1894@process
$LL1895@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  009c6	48 8b cb	 mov	 rcx, rbx
  009c9	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  009ce	48 83 c3 20	 add	 rbx, 32			; 00000020H
  009d2	48 3b df	 cmp	 rbx, rdi
  009d5	75 ef		 jne	 SHORT $LL1895@process
  009d7	48 8b 9d 10 11
	00 00		 mov	 rbx, QWORD PTR currentSession$65[rbp-144]
$LN1894@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  009de	48 8b 95 20 11
	00 00		 mov	 rdx, QWORD PTR currentSession$65[rbp-128]
  009e5	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009e8	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  009ec	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  009ef	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  009f6	72 19		 jb	 SHORT $LN1918@process

; 155  :     _Bytes += _Non_user_size;

  009f8	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  009fc	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  00a00	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a03	48 83 c0 f8	 add	 rax, -8
  00a07	48 83 f8 1f	 cmp	 rax, 31
  00a0b	0f 87 6a 44 00
	00		 ja	 $LN2711@process
$LN1918@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a11	48 8b cb	 mov	 rcx, rbx
  00a14	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00a19	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00a1c	66 0f 7f 85 10
	11 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  00a24	4c 89 b5 20 11
	00 00		 mov	 QWORD PTR currentSession$65[rbp-128], r14
$LN1888@process:
  00a2b	48 8d 8d f8 10
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rbp-168]
  00a32	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  00a37	90		 npad	 1
  00a38	48 8d 8d e0 10
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rbp-192]
  00a3f	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  00a44	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00a45	4c 8b 85 d8 10
	00 00		 mov	 r8, QWORD PTR currentSession$65[rbp-200]
  00a4c	49 83 f8 08	 cmp	 r8, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a50	72 16		 jb	 SHORT $LN1927@process

; 4620 :             auto& _Al          = _Getal();
; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a52	49 ff c0	 inc	 r8
  00a55	48 8b 95 c0 10
	00 00		 mov	 rdx, QWORD PTR currentSession$65[rbp-224]
  00a5c	48 8d 8d c0 10
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rbp-224]
  00a63	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN1927@process:

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00a68	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  00a70	66 0f 7f 85 d0
	10 00 00	 movdqa	 XMMWORD PTR currentSession$65[rbp-208], xmm0

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a78	66 44 89 b5 c0
	10 00 00	 mov	 WORD PTR currentSession$65[rbp-224], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1931 : 					return FALSE;

  00a80	33 c0		 xor	 eax, eax
  00a82	e9 82 43 00 00	 jmp	 $LN1@process
$LN427@process:

; 1932 : 				}
; 1933 : 
; 1934 : 				if (_beforeSpecialView._isFullScreen)	//closing, return to windowed mode

  00a87	80 bb 89 7a 09
	00 00		 cmp	 BYTE PTR [rbx+621193], 0
  00a8e	74 08		 je	 SHORT $LN429@process

; 1935 : 					fullScreenToggle();

  00a90	48 8b cb	 mov	 rcx, rbx
  00a93	e8 00 00 00 00	 call	 ?fullScreenToggle@Notepad_plus@@AEAAXXZ ; Notepad_plus::fullScreenToggle
$LN429@process:

; 1936 : 				if (_beforeSpecialView._isPostIt)		//closing, return to windowed mode

  00a98	80 bb 88 7a 09
	00 00		 cmp	 BYTE PTR [rbx+621192], 0
  00a9f	74 08		 je	 SHORT $LN430@process

; 1937 : 					postItToggle();

  00aa1	48 8b cb	 mov	 rcx, rbx
  00aa4	e8 00 00 00 00	 call	 ?postItToggle@Notepad_plus@@AEAAXXZ ; Notepad_plus::postItToggle
$LN430@process:

; 1938 : 
; 1939 : 				if (_configStyleDlg.isCreated() && ::IsWindowVisible(_configStyleDlg.getHSelf()))

  00aa9	48 8d 8b b0 1c
	00 00		 lea	 rcx, QWORD PTR [rbx+7344]
  00ab0	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00ab3	ff 50 68	 call	 QWORD PTR [rax+104]
  00ab6	84 c0		 test	 al, al
  00ab8	74 3d		 je	 SHORT $LN431@process
  00aba	48 8b 8b c8 1c
	00 00		 mov	 rcx, QWORD PTR [rbx+7368]
  00ac1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IsWindowVisible
  00ac7	85 c0		 test	 eax, eax
  00ac9	74 2c		 je	 SHORT $LN431@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ColourPicker\WordStyleDlg.h

; 97   : 		GlobalOverride & gOverride = (NppParameters::getInstance()).getGlobalOverrideStyle();

  00acb	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance

; 98   : 		gOverride = _gOverride2restored;

  00ad0	8b 8b d0 59 06
	00		 mov	 ecx, DWORD PTR [rbx+416208]
  00ad6	89 88 28 03 00
	00		 mov	 DWORD PTR [rax+808], ecx
  00adc	0f b7 8b d4 59
	06 00		 movzx	 ecx, WORD PTR [rbx+416212]
  00ae3	66 89 88 2c 03
	00 00		 mov	 WORD PTR [rax+812], cx
  00aea	0f b6 8b d6 59
	06 00		 movzx	 ecx, BYTE PTR [rbx+416214]
  00af1	88 88 2e 03 00
	00		 mov	 BYTE PTR [rax+814], cl
$LN431@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1942 : 				scnN.nmhdr.code = NPPN_SHUTDOWN;

  00af7	c7 85 b0 00 00
	00 f1 03 00 00	 mov	 DWORD PTR scnN$53[rbp-240], 1009 ; 000003f1H

; 1943 : 				_pluginsManager.notify(&scnN);

  00b01	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR scnN$53[rbp-256]
  00b08	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  00b0f	e8 00 00 00 00	 call	 ?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z ; PluginsManager::notify

; 1944 : 
; 1945 : 
; 1946 : 				saveScintillasZoom(); 

  00b14	48 8b cb	 mov	 rcx, rbx
  00b17	e8 00 00 00 00	 call	 ?saveScintillasZoom@Notepad_plus@@QEAAXXZ ; Notepad_plus::saveScintillasZoom

; 1947 : 				saveGUIParams(); //writeGUIParams writeScintillaParams

  00b1c	48 8b cb	 mov	 rcx, rbx
  00b1f	e8 00 00 00 00	 call	 ?saveGUIParams@Notepad_plus@@QEAA_NXZ ; Notepad_plus::saveGUIParams

; 1948 : 				saveFindHistory(); //writeFindHistory

  00b24	48 8b cb	 mov	 rcx, rbx
  00b27	e8 00 00 00 00	 call	 ?saveFindHistory@Notepad_plus@@QEAAXXZ ; Notepad_plus::saveFindHistory

; 1949 : 				_lastRecentFileList.saveLRFL(); //writeRecentFileHistorySettings, writeHistory

  00b2c	48 8d 8b f8 79
	09 00		 lea	 rcx, QWORD PTR [rbx+621048]
  00b33	e8 00 00 00 00	 call	 ?saveLRFL@LastRecentFileList@@QEAAXXZ ; LastRecentFileList::saveLRFL

; 1950 : 				//
; 1951 : 				// saving config.xml
; 1952 : 				//
; 1953 : 				nppParam.saveConfig_xml();

  00b38	49 8b cd	 mov	 rcx, r13
  00b3b	e8 00 00 00 00	 call	 ?saveConfig_xml@NppParameters@@QEAAXXZ ; NppParameters::saveConfig_xml

; 1954 : 
; 1955 : 				//
; 1956 : 				// saving userDefineLang.xml
; 1957 : 				//
; 1958 : 				saveUserDefineLangs();

  00b40	48 8b cb	 mov	 rcx, rbx
  00b43	e8 00 00 00 00	 call	 ?saveUserDefineLangs@Notepad_plus@@QEAAXXZ ; Notepad_plus::saveUserDefineLangs

; 1959 : 
; 1960 : 				//
; 1961 : 				// saving shortcuts.xml
; 1962 : 				//
; 1963 : 				saveShortcuts();

  00b48	48 8b cb	 mov	 rcx, rbx
  00b4b	e8 00 00 00 00	 call	 ?saveShortcuts@Notepad_plus@@QEAAXXZ ; Notepad_plus::saveShortcuts

; 1964 : 
; 1965 : 				//
; 1966 : 				// saving session.xml
; 1967 : 				//
; 1968 : 				if (nppgui._rememberLastSession && !nppgui._isCmdlineNosessionActivated)

  00b50	41 80 bd d6 00
	00 00 00	 cmp	 BYTE PTR [r13+214], 0
  00b58	74 19		 je	 SHORT $LN432@process
  00b5a	41 80 bd d7 00
	00 00 00	 cmp	 BYTE PTR [r13+215], 0
  00b62	75 0f		 jne	 SHORT $LN432@process

; 1969 : 					saveSession(currentSession);

  00b64	48 8d 95 a0 10
	00 00		 lea	 rdx, QWORD PTR currentSession$65[rbp-256]
  00b6b	48 8b cb	 mov	 rcx, rbx
  00b6e	e8 00 00 00 00	 call	 ?saveSession@Notepad_plus@@QEAAXAEBUSession@@@Z ; Notepad_plus::saveSession
$LN432@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 583  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00b73	49 83 bd 58 08
	00 00 00	 cmp	 QWORD PTR [r13+2136], 0
  00b7b	74 5f		 je	 SHORT $LN434@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1972 : 				if (nppgui._cloudPath != TEXT("") && nppParam.isCloudPathChanged())

  00b7d	49 8b cd	 mov	 rcx, r13
  00b80	e8 00 00 00 00	 call	 ?isCloudPathChanged@NppParameters@@QEBA_NXZ ; NppParameters::isCloudPathChanged
  00b85	84 c0		 test	 al, al
  00b87	74 53		 je	 SHORT $LN434@process

; 1973 : 				{
; 1974 : 					bool isOK = nppParam.writeSettingsFilesOnCloudForThe1stTime(nppgui._cloudPath);

  00b89	49 8d 95 48 08
	00 00		 lea	 rdx, QWORD PTR [r13+2120]
  00b90	49 8b cd	 mov	 rcx, r13
  00b93	e8 00 00 00 00	 call	 ?writeSettingsFilesOnCloudForThe1stTime@NppParameters@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; NppParameters::writeSettingsFilesOnCloudForThe1stTime

; 1975 : 					if (!isOK)

  00b98	84 c0		 test	 al, al
  00b9a	75 40		 jne	 SHORT $LN434@process

; 1976 : 					{
; 1977 : 						_nativeLangSpeaker.messageBox("SettingsOnCloudError",

  00b9c	48 8d 8b 78 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1144]
  00ba3	4c 89 74 24 38	 mov	 QWORD PTR [rsp+56], r14
  00ba8	44 89 74 24 30	 mov	 DWORD PTR [rsp+48], r14d
  00bad	44 89 74 24 28	 mov	 DWORD PTR [rsp+40], r14d
  00bb2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1CE@OLIFPOLL@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AAo?$AAn?$AA?5?$AAC?$AAl?$AAo@
  00bb9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00bbe	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BLK@LDFJFIML@?$AAI?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAm?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAp?$AAa@
  00bc5	4c 8b c7	 mov	 r8, rdi
  00bc8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@ONOGFCGL@SettingsOnCloudError@
  00bcf	e8 00 00 00 00	 call	 ?messageBox@NativeLangSpeaker@@QEAAHPEBDPEAUHWND__@@PEB_W2HH2@Z ; NativeLangSpeaker::messageBox

; 1978 : 							hwnd,
; 1979 : 							TEXT("It seems the path of settings on cloud is set on a read only drive,\ror on a folder needed privilege right for writting access.\rYour settings on cloud will be canceled. Please reset a coherent value via Preference dialog."),
; 1980 : 							TEXT("Settings on Cloud"),
; 1981 : 							MB_OK | MB_APPLMODAL);
; 1982 : 						nppParam.removeCloudChoice();

  00bd4	49 8b cd	 mov	 rcx, r13
  00bd7	e8 00 00 00 00	 call	 ?removeCloudChoice@NppParameters@@QEAAXXZ ; NppParameters::removeCloudChoice
$LN434@process:

; 1983 : 					}
; 1984 : 				}
; 1985 : 
; 1986 : 				if (isSnapshotMode)

  00bdc	45 84 ff	 test	 r15b, r15b
  00bdf	74 08		 je	 SHORT $LN435@process

; 1987 : 					::LockWindowUpdate(NULL);

  00be1	33 c9		 xor	 ecx, ecx
  00be3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LockWindowUpdate
$LN435@process:

; 1988 : 
; 1989 : 				//Sends WM_DESTROY, Notepad++ will end
; 1990 : 				if (message == WM_CLOSE)

  00be9	83 7c 24 44 10	 cmp	 DWORD PTR message$GSCopy$1$[rsp], 16
  00bee	75 09		 jne	 SHORT $LN436@process

; 1991 : 					::DestroyWindow(hwnd);

  00bf0	48 8b cf	 mov	 rcx, rdi
  00bf3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow
$LN436@process:

; 1992 : 
; 1993 : 				generic_string updaterFullPath = nppParam.getWingupFullPath();

  00bf9	48 8d 55 a0	 lea	 rdx, QWORD PTR updaterFullPath$24[rbp-256]
  00bfd	49 8b cd	 mov	 rcx, r13
  00c00	e8 00 00 00 00	 call	 ?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getWingupFullPath
  00c05	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4019 :         return size() == 0;

  00c06	48 83 7d b0 00	 cmp	 QWORD PTR updaterFullPath$24[rbp-240], 0
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1994 : 				if (!updaterFullPath.empty())

  00c0b	0f 84 c9 00 00
	00		 je	 $LN437@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 1901 : 	generic_string getWingupDir() const { return _wingupDir; };

  00c11	49 8d 95 a0 34
	03 00		 lea	 rdx, QWORD PTR [r13+210080]
  00c18	48 8d 4d f0	 lea	 rcx, QWORD PTR $T42[rbp-256]
  00c1c	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00c21	4c 8b f8	 mov	 r15, rax
  00c24	89 74 24 58	 mov	 DWORD PTR $T6[rsp], esi

; 1900 : 	generic_string getWingupParams() const { return _wingupParams; };

  00c28	49 8d 95 80 34
	03 00		 lea	 rdx, QWORD PTR [r13+210048]
  00c2f	48 8d 4d 80	 lea	 rcx, QWORD PTR $T11[rbp-256]
  00c33	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00c38	4c 8b f0	 mov	 r14, rax
  00c3b	be 06 00 00 00	 mov	 esi, 6
  00c40	89 74 24 58	 mov	 DWORD PTR $T6[rsp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00c44	49 83 7f 18 08	 cmp	 QWORD PTR [r15+24], 8

; 2306 :         if (_Large_string_engaged()) {

  00c49	72 03		 jb	 SHORT $LN1975@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00c4b	4d 8b 3f	 mov	 r15, QWORD PTR [r15]
$LN1975@process:

; 2319 :         return _BUF_SIZE <= _Myres;

  00c4e	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8

; 2306 :         if (_Large_string_engaged()) {

  00c53	72 03		 jb	 SHORT $LN1982@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00c55	4c 8b 30	 mov	 r14, QWORD PTR [rax]
$LN1982@process:

; 2305 :         const value_type* _Result = _Bx._Buf;

  00c58	48 8d 55 a0	 lea	 rdx, QWORD PTR updaterFullPath$24[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  00c5c	48 83 7d b8 08	 cmp	 QWORD PTR updaterFullPath$24[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  00c61	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR updaterFullPath$24[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Process\Processus.h

; 28   : 		:_command(cmd), _args(args), _curDir(cDir){}

  00c66	48 8d 4d 10	 lea	 rcx, QWORD PTR updater$48[rbp-256]
  00c6a	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00c6f	90		 npad	 1
  00c70	49 8b d6	 mov	 rdx, r14
  00c73	48 8d 4d 30	 lea	 rcx, QWORD PTR updater$48[rbp-224]
  00c77	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00c7c	90		 npad	 1
  00c7d	49 8b d7	 mov	 rdx, r15
  00c80	48 8d 4d 50	 lea	 rcx, QWORD PTR updater$48[rbp-192]
  00c84	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00c89	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1996 : 					Process updater(updaterFullPath.c_str(), nppParam.getWingupParams().c_str(), nppParam.getWingupDir().c_str());

  00c8a	83 e6 fb	 and	 esi, -5
  00c8d	89 74 24 58	 mov	 DWORD PTR $T6[rsp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00c91	48 8d 4d 80	 lea	 rcx, QWORD PTR $T11[rbp-256]
  00c95	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1996 : 					Process updater(updaterFullPath.c_str(), nppParam.getWingupParams().c_str(), nppParam.getWingupDir().c_str());

  00c9a	83 e6 fd	 and	 esi, -3
  00c9d	89 74 24 58	 mov	 DWORD PTR $T6[rsp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00ca1	48 8d 4d f0	 lea	 rcx, QWORD PTR $T42[rbp-256]
  00ca5	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1997 : 					updater.run(nppParam.shouldDoUAC());

  00caa	41 0f b6 95 c0
	34 03 00	 movzx	 edx, BYTE PTR [r13+210112]
  00cb2	48 8d 4d 10	 lea	 rcx, QWORD PTR updater$48[rbp-256]
  00cb6	e8 00 00 00 00	 call	 ?run@Process@@QEBAX_N@Z	; Process::run
  00cbb	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00cbc	48 8d 4d 50	 lea	 rcx, QWORD PTR updater$48[rbp-192]
  00cc0	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00cc5	90		 npad	 1
  00cc6	48 8d 4d 30	 lea	 rcx, QWORD PTR updater$48[rbp-224]
  00cca	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00ccf	90		 npad	 1
  00cd0	48 8d 4d 10	 lea	 rcx, QWORD PTR updater$48[rbp-256]
  00cd4	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00cd9	90		 npad	 1
$LN437@process:
  00cda	48 8d 4d a0	 lea	 rcx, QWORD PTR updaterFullPath$24[rbp-256]
  00cde	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00ce3	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1999 : 			}

  00ce4	48 8d 8d a0 10
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rbp-256]
  00ceb	e8 00 00 00 00	 call	 ??1Session@@QEAA@XZ
$LN421@process:

; 2000 : 
; 2001 : 			// _isEndingSessionButNotReady is true means WM_QUERYENDSESSION is sent but no time to finish saving data
; 2002 :             // then WM_ENDSESSION is sent with wParam == FALSE - Notepad++ should exit in this case
; 2003 : 			if (_isEndingSessionButNotReady) 

  00cf0	80 bb a2 7c 09
	00 00		 cmp	 BYTE PTR [rbx+621730], 0
  00cf7	0f 84 05 04 00
	00		 je	 $LN2695@process

; 2004 : 				::DestroyWindow(hwnd);

  00cfd	48 8b cf	 mov	 rcx, rdi
  00d00	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow

; 2748 : }

  00d06	49 8b c4	 mov	 rax, r12
  00d09	e9 fb 40 00 00	 jmp	 $LN1@process
$LN439@process:

; 2005 : 
; 2006 : 			return TRUE;
; 2007 : 		}
; 2008 : 
; 2009 : 		case WM_ENDSESSION:
; 2010 : 		{
; 2011 : 			if (wParam == TRUE)

  00d0e	4d 3b fc	 cmp	 r15, r12
  00d11	75 10		 jne	 SHORT $LN440@process

; 2012 : 			{
; 2013 : 				::DestroyWindow(hwnd);

  00d13	48 8b cf	 mov	 rcx, rdi
  00d16	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow

; 2748 : }

  00d1c	33 c0		 xor	 eax, eax
  00d1e	e9 e6 40 00 00	 jmp	 $LN1@process
$LN440@process:

; 2014 : 			}
; 2015 : 			else
; 2016 : 			{
; 2017 : 				_isEndingSessionButNotReady = true;

  00d23	44 88 a3 a2 7c
	09 00		 mov	 BYTE PTR [rbx+621730], r12b

; 2748 : }

  00d2a	33 c0		 xor	 eax, eax
  00d2c	e9 d8 40 00 00	 jmp	 $LN1@process
$LN442@process:

; 2018 : 			}
; 2019 : 			return 0;
; 2020 : 		}
; 2021 : 
; 2022 : 		case WM_DESTROY:
; 2023 : 		{
; 2024 : 			killAllChildren();

  00d31	48 8b cb	 mov	 rcx, rbx
  00d34	e8 00 00 00 00	 call	 ?killAllChildren@Notepad_plus@@QEAAXXZ ; Notepad_plus::killAllChildren

; 2025 : 			::PostQuitMessage(0);

  00d39	33 c9		 xor	 ecx, ecx
  00d3b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostQuitMessage

; 2026 : 			_pPublicInterface->gNppHWND = NULL;

  00d41	4c 89 35 00 00
	00 00		 mov	 QWORD PTR ?gNppHWND@Notepad_plus_Window@@2PEAUHWND__@@EA, r14 ; Notepad_plus_Window::gNppHWND

; 2748 : }

  00d48	49 8b c4	 mov	 rax, r12
  00d4b	e9 b9 40 00 00	 jmp	 $LN1@process
$LN183@process:

; 684  : 					break;
; 685  : 				}
; 686  : 			}
; 687  : 
; 688  : 			return TRUE;
; 689  : 		}
; 690  : 
; 691  : 		case WM_COMMAND:
; 692  : 		{
; 693  : 			if (HIWORD(wParam) == SCEN_SETFOCUS)

  00d50	49 8b c7	 mov	 rax, r15
  00d53	48 c1 e8 10	 shr	 rax, 16
  00d57	b9 00 02 00 00	 mov	 ecx, 512		; 00000200H
  00d5c	66 3b c1	 cmp	 ax, cx
  00d5f	75 2d		 jne	 SHORT $LN184@process

; 694  : 			{
; 695  : 				HWND hMain = _mainEditView.getHSelf(), hSec = _subEditView.getHSelf();
; 696  : 				HWND hFocus = reinterpret_cast<HWND>(lParam);
; 697  : 				if (hMain == hFocus)

  00d61	48 39 b3 08 07
	00 00		 cmp	 QWORD PTR [rbx+1800], rsi
  00d68	0f 84 72 0e 00
	00		 je	 $LN514@process

; 698  : 					switchEditViewTo(MAIN_VIEW);
; 699  : 				else if (hSec == hFocus)

  00d6e	48 39 b3 68 06
	00 00		 cmp	 QWORD PTR [rbx+1640], rsi
$LN2692@process:

; 1036 : 			return TRUE;

  00d75	0f 85 87 03 00
	00		 jne	 $LN2695@process
$LN516@process:
  00d7b	41 8b d4	 mov	 edx, r12d
  00d7e	48 8b cb	 mov	 rcx, rbx
  00d81	e8 00 00 00 00	 call	 ?switchEditViewTo@Notepad_plus@@AEAAHH@Z ; Notepad_plus::switchEditViewTo

; 2748 : }

  00d86	49 8b c4	 mov	 rax, r12
  00d89	e9 7b 40 00 00	 jmp	 $LN1@process
$LN184@process:

; 700  : 					switchEditViewTo(SUB_VIEW);
; 701  : 				else
; 702  : 				{
; 703  : 					//Other Scintilla, ignore
; 704  : 				}
; 705  : 				return TRUE;
; 706  : 			}
; 707  : 			else
; 708  : 			{
; 709  : 				command(LOWORD(wParam));

  00d8e	41 0f b7 d7	 movzx	 edx, r15w
  00d92	48 8b cb	 mov	 rcx, rbx
  00d95	e8 00 00 00 00	 call	 ?command@Notepad_plus@@AEAAXH@Z ; Notepad_plus::command

; 710  : 			}
; 711  : 			return TRUE;

  00d9a	49 8b c4	 mov	 rax, r12
  00d9d	e9 67 40 00 00	 jmp	 $LN1@process
$LN597@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  00da2	81 fa ec 07 00
	00		 cmp	 edx, 2028		; 000007ecH
  00da8	0f 87 bd 11 00
	00		 ja	 $LN598@process
  00dae	0f 84 7a 11 00
	00		 je	 $LN231@process
  00db4	81 fa 01 04 00
	00		 cmp	 edx, 1025		; 00000401H
  00dba	0f 87 17 03 00
	00		 ja	 $LN599@process
  00dc0	0f 84 3c 03 00
	00		 je	 $LN2695@process
  00dc6	81 fa 12 02 00
	00		 cmp	 edx, 530		; 00000212H
  00dcc	0f 87 0c 02 00
	00		 ja	 $LN600@process
  00dd2	0f 84 d6 01 00
	00		 je	 $LN554@process
  00dd8	8b c2		 mov	 eax, edx
  00dda	2d 12 01 00 00	 sub	 eax, 274		; 00000112H
  00ddf	0f 84 d1 00 00
	00		 je	 $LN443@process
  00de5	83 e8 05	 sub	 eax, 5
  00de8	0f 84 aa 00 00
	00		 je	 $LN551@process
  00dee	2d ec 00 00 00	 sub	 eax, 236		; 000000ecH
  00df3	0f 84 80 00 00
	00		 je	 $LN450@process
  00df9	83 e8 07	 sub	 eax, 7
  00dfc	74 44		 je	 SHORT $LN257@process
  00dfe	83 f8 07	 cmp	 eax, 7
  00e01	0f 85 27 37 00
	00		 jne	 $LN563@process

; 2611 : 			return TRUE;
; 2612 : 		}
; 2613 : 
; 2614 : 		case WM_ENTERMENULOOP:
; 2615 : 		{
; 2616 : 			const NppGUI & nppgui = nppParam.getNppGUI();
; 2617 : 			if (!nppgui._menuBarShow && !wParam && !_sysMenuEntering)

  00e07	45 38 b5 96 00
	00 00		 cmp	 BYTE PTR [r13+150], r14b
  00e0e	0f 85 ee 02 00
	00		 jne	 $LN2695@process
  00e14	4d 85 ff	 test	 r15, r15
  00e17	0f 85 e5 02 00
	00		 jne	 $LN2695@process
  00e1d	44 38 b3 80 7a
	09 00		 cmp	 BYTE PTR [rbx+621184], r14b
  00e24	0f 85 d8 02 00
	00		 jne	 $LN2695@process

; 2618 : 				::SetMenu(hwnd, _mainMenuHandle);

  00e2a	48 8b 93 78 7a
	09 00		 mov	 rdx, QWORD PTR [rbx+621176]
  00e31	48 8b cf	 mov	 rcx, rdi
  00e34	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetMenu

; 2748 : }

  00e3a	49 8b c4	 mov	 rax, r12
  00e3d	e9 c7 3f 00 00	 jmp	 $LN1@process
$LN257@process:

; 1037 : 		}
; 1038 : 
; 1039 : 		case WM_MOUSEWHEEL:
; 1040 : 		{
; 1041 : 			if (0 != (LOWORD(wParam) & MK_RBUTTON))

  00e42	41 f6 c7 02	 test	 r15b, 2
  00e46	0f 84 b6 02 00
	00		 je	 $LN2695@process

; 1042 : 			{
; 1043 : 				// redirect to the IDC_PREV_DOC or IDC_NEXT_DOC so that we have the unified process
; 1044 : 
; 1045 : 				nppParam._isTaskListRBUTTONUP_Active = true;

  00e4c	45 88 65 00	 mov	 BYTE PTR [r13], r12b

; 1046 : 				short zDelta = (short) HIWORD(wParam);

  00e50	49 c1 ef 10	 shr	 r15, 16

; 1047 : 				return ::SendMessage(hwnd, WM_COMMAND, zDelta>0?IDC_PREV_DOC:IDC_NEXT_DOC, 0);

  00e54	66 45 85 ff	 test	 r15w, r15w
  00e58	41 0f 9e c6	 setle	 r14b
  00e5c	4d 8d 86 53 c3
	00 00		 lea	 r8, QWORD PTR [r14+50003]
  00e63	45 33 c9	 xor	 r9d, r9d
  00e66	ba 11 01 00 00	 mov	 edx, 273		; 00000111H
  00e6b	48 8b cf	 mov	 rcx, rdi
  00e6e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
  00e74	e9 90 3f 00 00	 jmp	 $LN1@process
$LN450@process:

; 2055 : 		}
; 2056 : 
; 2057 : 		case WM_LBUTTONDBLCLK:
; 2058 : 		{
; 2059 : 			::SendMessage(hwnd, WM_COMMAND, IDM_FILE_NEW, 0);

  00e79	45 33 c9	 xor	 r9d, r9d
  00e7c	ba 11 01 00 00	 mov	 edx, 273		; 00000111H
  00e81	41 b8 29 a0 00
	00		 mov	 r8d, 41001		; 0000a029H
  00e87	48 8b cf	 mov	 rcx, rdi
  00e8a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 2748 : }

  00e90	49 8b c4	 mov	 rax, r12
  00e93	e9 71 3f 00 00	 jmp	 $LN1@process
$LN551@process:

; 2604 : 			_lastRecentFileList.updateMenu();
; 2605 : 			break;
; 2606 : 		}
; 2607 : 
; 2608 : 		case WM_INITMENUPOPUP:
; 2609 : 		{
; 2610 : 			_windowsMenu.initPopupMenu(reinterpret_cast<HMENU>(wParam), _pDocTab);

  00e98	48 8d 8b 70 7a
	09 00		 lea	 rcx, QWORD PTR [rbx+621168]
  00e9f	4c 8b 83 40 06
	00 00		 mov	 r8, QWORD PTR [rbx+1600]
  00ea6	49 8b d7	 mov	 rdx, r15
  00ea9	e8 00 00 00 00	 call	 ?initPopupMenu@WindowsMenu@@QEAAXPEAUHMENU__@@PEAVDocTabView@@@Z ; WindowsMenu::initPopupMenu

; 2748 : }

  00eae	49 8b c4	 mov	 rax, r12
  00eb1	e9 53 3f 00 00	 jmp	 $LN1@process
$LN443@process:

; 2033 : 			if ((nppgui._isMinimizedToTray || _pPublicInterface->isPrelaunch()) && (wParam == SC_MINIMIZE))

  00eb6	45 38 b5 d5 00
	00 00		 cmp	 BYTE PTR [r13+213], r14b
  00ebd	75 10		 jne	 SHORT $LN2618@process
  00ebf	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00ec2	44 38 b0 f8 84
	09 00		 cmp	 BYTE PTR [rax+623864], r14b
  00ec9	0f 84 a7 00 00
	00		 je	 $LN444@process
$LN2618@process:
  00ecf	49 81 ff 20 f0
	00 00		 cmp	 r15, 61472		; 0000f020H
  00ed6	0f 85 9a 00 00
	00		 jne	 $LN444@process

; 2034 : 			{
; 2035 : 				if (nullptr == _pTrayIco)

  00edc	48 8b 83 70 7b
	09 00		 mov	 rax, QWORD PTR [rbx+621424]
  00ee3	48 85 c0	 test	 rax, rax
  00ee6	75 5c		 jne	 SHORT $LN446@process

; 2036 : 					_pTrayIco = new trayIconControler(hwnd, IDI_M30ICON, NPPM_INTERNAL_MINIMIZED_TRAY, ::LoadIcon(_pPublicInterface->getHinst(), MAKEINTRESOURCE(IDI_M30ICON)), TEXT(""));

  00ee8	b9 d8 03 00 00	 mov	 ecx, 984		; 000003d8H
  00eed	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00ef2	48 8b f0	 mov	 rsi, rax
  00ef5	48 89 45 f0	 mov	 QWORD PTR $T41[rbp-256], rax
  00ef9	48 85 c0	 test	 rax, rax
  00efc	74 3c		 je	 SHORT $LN591@process
  00efe	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00f01	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00f06	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00f0a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadIconW
  00f10	4c 8d 25 00 00
	00 00		 lea	 r12, OFFSET FLAT:??_C@_11LOCGONAA@@
  00f17	4c 89 64 24 28	 mov	 QWORD PTR [rsp+40], r12
  00f1c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00f21	41 b9 36 04 00
	00		 mov	 r9d, 1078		; 00000436H
  00f27	41 b8 64 00 00
	00		 mov	 r8d, 100		; 00000064H
  00f2d	48 8b d7	 mov	 rdx, rdi
  00f30	48 8b ce	 mov	 rcx, rsi
  00f33	e8 00 00 00 00	 call	 ??0trayIconControler@@QEAA@PEAUHWND__@@IIPEAUHICON__@@PEB_W@Z ; trayIconControler::trayIconControler
  00f38	eb 03		 jmp	 SHORT $LN592@process
$LN591@process:
  00f3a	49 8b c6	 mov	 rax, r14
$LN592@process:
  00f3d	48 89 83 70 7b
	09 00		 mov	 QWORD PTR [rbx+621424], rax
$LN446@process:

; 2037 : 
; 2038 : 				_pTrayIco->doTrayIcon(ADD);

  00f44	33 d2		 xor	 edx, edx
  00f46	48 8b c8	 mov	 rcx, rax
  00f49	e8 00 00 00 00	 call	 ?doTrayIcon@trayIconControler@@QEAAHK@Z ; trayIconControler::doTrayIcon

; 2039 : 				_dockingManager.showFloatingContainers(false);

  00f4e	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  00f52	33 d2		 xor	 edx, edx
  00f54	e8 00 00 00 00	 call	 ?showFloatingContainers@DockingManager@@QEAAX_N@Z ; DockingManager::showFloatingContainers

; 2040 : 				minimizeDialogs();

  00f59	48 8b cb	 mov	 rcx, rbx
  00f5c	e8 00 00 00 00	 call	 ?minimizeDialogs@Notepad_plus@@QEAAXXZ ; Notepad_plus::minimizeDialogs

; 2041 : 				::ShowWindow(hwnd, SW_HIDE);

  00f61	33 d2		 xor	 edx, edx
  00f63	48 8b cf	 mov	 rcx, rdi
  00f66	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ShowWindow

; 2042 : 				return TRUE;

  00f6c	b8 01 00 00 00	 mov	 eax, 1
  00f71	e9 93 3e 00 00	 jmp	 $LN1@process
$LN444@process:

; 2043 : 			}
; 2044 : 
; 2045 : 			if (wParam == SC_KEYMENU && lParam == VK_SPACE)

  00f76	49 81 ff 00 f1
	00 00		 cmp	 r15, 61696		; 0000f100H
  00f7d	75 06		 jne	 SHORT $LN447@process
  00f7f	48 83 fe 20	 cmp	 rsi, 32			; 00000020H

; 1028 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  00f83	eb 07		 jmp	 SHORT $LN2685@process
$LN447@process:

; 2046 : 			{
; 2047 : 				_sysMenuEntering = true;
; 2048 : 			}
; 2049 : 			else if (wParam == 0xF093) //it should be SC_MOUSEMENU. A bug?

  00f85	49 81 ff 93 f0
	00 00		 cmp	 r15, 61587		; 0000f093H
$LN2685@process:

; 2050 : 			{
; 2051 : 				_sysMenuEntering = true;

  00f8c	75 07		 jne	 SHORT $LN449@process
  00f8e	44 88 a3 80 7a
	09 00		 mov	 BYTE PTR [rbx+621184], r12b
$LN449@process:

; 2052 : 			}
; 2053 : 
; 2054 : 			return ::DefWindowProc(hwnd, message, wParam, lParam);

  00f95	4c 8b ce	 mov	 r9, rsi
  00f98	4d 8b c7	 mov	 r8, r15
  00f9b	ba 12 01 00 00	 mov	 edx, 274		; 00000112H
  00fa0	48 8b cf	 mov	 rcx, rdi
  00fa3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  00fa9	e9 5b 3e 00 00	 jmp	 $LN1@process
$LN554@process:

; 2619 : 
; 2620 : 			return TRUE;
; 2621 : 		}
; 2622 : 
; 2623 : 		case WM_EXITMENULOOP:
; 2624 : 		{
; 2625 : 			const NppGUI & nppgui = nppParam.getNppGUI();
; 2626 : 			if (!nppgui._menuBarShow && !wParam && !_sysMenuEntering)

  00fae	45 38 b5 96 00
	00 00		 cmp	 BYTE PTR [r13+150], r14b
  00fb5	75 19		 jne	 SHORT $LN555@process
  00fb7	4d 85 ff	 test	 r15, r15
  00fba	75 14		 jne	 SHORT $LN555@process
  00fbc	44 38 b3 80 7a
	09 00		 cmp	 BYTE PTR [rbx+621184], r14b
  00fc3	75 0b		 jne	 SHORT $LN555@process

; 2627 : 				::SetMenu(hwnd, NULL);

  00fc5	33 d2		 xor	 edx, edx
  00fc7	48 8b cf	 mov	 rcx, rdi
  00fca	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetMenu
$LN555@process:

; 2628 : 			_sysMenuEntering = false;

  00fd0	44 88 b3 80 7a
	09 00		 mov	 BYTE PTR [rbx+621184], r14b

; 2629 : 			return FALSE;

  00fd7	33 c0		 xor	 eax, eax
  00fd9	e9 2b 3e 00 00	 jmp	 $LN1@process
$LN600@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  00fde	8b c2		 mov	 eax, edx
  00fe0	2d 14 02 00 00	 sub	 eax, 532		; 00000214H
  00fe5	0f 84 e2 00 00
	00		 je	 $LN176@process
  00feb	83 e8 02	 sub	 eax, 2
  00fee	0f 84 c8 00 00
	00		 je	 $LN174@process
  00ff4	83 e8 1d	 sub	 eax, 29
  00ff7	0f 84 ac 00 00
	00		 je	 $LN406@process
  00ffd	2d ad 00 00 00	 sub	 eax, 173		; 000000adH
  01002	0f 84 fa 00 00
	00		 je	 $LN2695@process
  01008	83 f8 39	 cmp	 eax, 57			; 00000039H
  0100b	0f 85 1d 35 00
	00		 jne	 $LN563@process

; 1048 : 			}
; 1049 : 			return TRUE;
; 1050 : 		}
; 1051 : 
; 1052 : 		case WM_APPCOMMAND:
; 1053 : 		{
; 1054 : 			switch(GET_APPCOMMAND_LPARAM(lParam))

  01011	4c 8b ee	 mov	 r13, rsi
  01014	49 c1 ed 10	 shr	 r13, 16
  01018	41 8b cd	 mov	 ecx, r13d
  0101b	b8 ff 0f 00 00	 mov	 eax, 4095		; 00000fffH
  01020	23 c8		 and	 ecx, eax
  01022	41 2b cc	 sub	 ecx, r12d
  01025	74 05		 je	 SHORT $LN260@process
  01027	41 3b cc	 cmp	 ecx, r12d
  0102a	75 64		 jne	 SHORT $LN31@process
$LN260@process:

; 1055 : 			{
; 1056 : 				case APPCOMMAND_BROWSER_BACKWARD:
; 1057 : 				case APPCOMMAND_BROWSER_FORWARD:
; 1058 : 				{
; 1059 : 					size_t nbDoc = viewVisible(MAIN_VIEW) ? _mainDocTab.nbItem() : 0;

  0102c	33 d2		 xor	 edx, edx
  0102e	48 8b cb	 mov	 rcx, rbx
  01031	e8 00 00 00 00	 call	 ?viewVisible@Notepad_plus@@AEAA_NH@Z ; Notepad_plus::viewVisible
  01036	84 c0		 test	 al, al
  01038	74 0e		 je	 SHORT $LN573@process
  0103a	48 8b 83 b0 04
	00 00		 mov	 rax, QWORD PTR [rbx+1200]
  01041	48 89 44 24 48	 mov	 QWORD PTR nbDoc$1$[rsp], rax
  01046	eb 05		 jmp	 SHORT $LN574@process
$LN573@process:
  01048	4c 89 74 24 48	 mov	 QWORD PTR nbDoc$1$[rsp], r14
$LN574@process:

; 1060 : 					nbDoc += viewVisible(SUB_VIEW)?_subDocTab.nbItem():0;

  0104d	49 8b d4	 mov	 rdx, r12
  01050	48 8b cb	 mov	 rcx, rbx
  01053	e8 00 00 00 00	 call	 ?viewVisible@Notepad_plus@@AEAA_NH@Z ; Notepad_plus::viewVisible
  01058	84 c0		 test	 al, al
  0105a	74 07		 je	 SHORT $LN576@process
  0105c	4c 8b b3 88 05
	00 00		 mov	 r14, QWORD PTR [rbx+1416]
$LN576@process:
  01063	48 8b 44 24 48	 mov	 rax, QWORD PTR nbDoc$1$[rsp]
  01068	49 03 c6	 add	 rax, r14

; 1061 : 					if (nbDoc > 1)

  0106b	49 3b c4	 cmp	 rax, r12
  0106e	76 19		 jbe	 SHORT $LN262@process

; 1062 : 						activateNextDoc((GET_APPCOMMAND_LPARAM(lParam) == APPCOMMAND_BROWSER_FORWARD)?dirDown:dirUp);

  01070	b8 ff 0f 00 00	 mov	 eax, 4095		; 00000fffH
  01075	66 44 23 e8	 and	 r13w, ax
  01079	66 41 83 fd 02	 cmp	 r13w, 2
  0107e	0f 95 c2	 setne	 dl
  01081	48 8b cb	 mov	 rcx, rbx
  01084	e8 00 00 00 00	 call	 ?activateNextDoc@Notepad_plus@@AEAAX_N@Z ; Notepad_plus::activateNextDoc
$LN262@process:

; 1063 : 					_linkTriggered = true;

  01089	44 88 a3 50 7b
	09 00		 mov	 BYTE PTR [rbx+621392], r12b
$LN31@process:

; 1064 : 					break;
; 1065 : 				}
; 1066 : 			}
; 1067 : 			return ::DefWindowProc(hwnd, message, wParam, lParam);

  01090	4c 8b ce	 mov	 r9, rsi
  01093	4d 8b c7	 mov	 r8, r15
  01096	ba 19 03 00 00	 mov	 edx, 793		; 00000319H
  0109b	48 8b cf	 mov	 rcx, rdi
  0109e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  010a4	e9 60 3d 00 00	 jmp	 $LN1@process
$LN406@process:

; 1777 : 			}
; 1778 : 			return TRUE;
; 1779 : 		}
; 1780 : 
; 1781 : 		case WM_DROPFILES:
; 1782 : 		{
; 1783 : 			dropFiles(reinterpret_cast<HDROP>(wParam));

  010a9	49 8b d7	 mov	 rdx, r15
  010ac	48 8b cb	 mov	 rcx, rbx
  010af	e8 00 00 00 00	 call	 ?dropFiles@Notepad_plus@@AEAAXPEAUHDROP__@@@Z ; Notepad_plus::dropFiles

; 2748 : }

  010b4	49 8b c4	 mov	 rax, r12
  010b7	e9 4d 3d 00 00	 jmp	 $LN1@process
$LN174@process:

; 625  : 		}
; 626  : 
; 627  : 		case WM_MOVING:
; 628  : 		{
; 629  : 			if (_pDocMap)

  010bc	48 8b 8b a8 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623784]
  010c3	48 85 c9	 test	 rcx, rcx
  010c6	74 05		 je	 SHORT $LN176@process

; 630  : 			{
; 631  : 				_pDocMap->doMove();

  010c8	e8 00 00 00 00	 call	 ?doMove@DocumentMap@@QEAAXXZ ; DocumentMap::doMove
$LN176@process:

; 632  : 			}
; 633  : 			result = FALSE;
; 634  : 			break;
; 635  : 		}
; 636  : 
; 637  : 		case WM_SIZING:
; 638  : 		{
; 639  : 			result = FALSE;

  010cd	4c 89 74 24 60	 mov	 QWORD PTR result$[rsp], r14

; 640  : 			break;

  010d2	e9 15 3d 00 00	 jmp	 $LN299@process
$LN599@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  010d7	8d 82 fe fb ff
	ff		 lea	 eax, DWORD PTR [rdx-1026]
  010dd	83 f8 39	 cmp	 eax, 57			; 00000039H
  010e0	0f 87 48 34 00
	00		 ja	 $LN563@process
  010e6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  010ed	41 8b 84 80 00
	00 00 00	 mov	 eax, DWORD PTR $LN2638@process[r8+rax*4]
  010f5	49 03 c0	 add	 rax, r8
  010f8	ff e0		 jmp	 rax
$LN92@process:

; 198  : 		}
; 199  : 
; 200  : 		case NPPM_INTERNAL_REFRESHDARKMODE:
; 201  : 		{
; 202  : 			refreshDarkMode();

  010fa	48 8b cb	 mov	 rcx, rbx
  010fd	e8 00 00 00 00	 call	 ?refreshDarkMode@Notepad_plus@@QEAAXXZ ; Notepad_plus::refreshDarkMode
$LN2695@process:

; 2748 : }

  01102	49 8b c4	 mov	 rax, r12
  01105	e9 ff 3c 00 00	 jmp	 $LN1@process
$LN117@process:

; 341  : 		}
; 342  : 
; 343  : 		case NPPM_INTERNAL_FINDINPROJECTS:
; 344  : 		{
; 345  : 			const int strSize = FINDREPLACE_MAXLENGTH;
; 346  : 			TCHAR str[strSize];
; 347  : 
; 348  : 			bool isFirstTime = not _findReplaceDlg.isCreated();

  0110a	48 8d b3 b0 0c
	00 00		 lea	 rsi, QWORD PTR [rbx+3248]
  01111	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  01114	48 8b ce	 mov	 rcx, rsi
  01117	ff 50 68	 call	 QWORD PTR [rax+104]
  0111a	0f b6 f8	 movzx	 edi, al

; 349  : 			_findReplaceDlg.doDialog(FIND_DLG, _nativeLangSpeaker.isRTL());

  0111d	45 0f b6 cc	 movzx	 r9d, r12b
  01121	44 0f b6 83 84
	04 00 00	 movzx	 r8d, BYTE PTR [rbx+1156]
  01129	33 d2		 xor	 edx, edx
  0112b	48 8b ce	 mov	 rcx, rsi
  0112e	e8 00 00 00 00	 call	 ?doDialog@FindReplaceDlg@@QEAAXW4DIALOG_TYPE@@_N1@Z ; FindReplaceDlg::doDialog

; 350  : 
; 351  : 			_pEditView->getGenericSelectedText(str, strSize);

  01133	45 0f b6 cc	 movzx	 r9d, r12b
  01137	41 b8 00 08 00
	00		 mov	 r8d, 2048		; 00000800H
  0113d	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$63[rbp-256]
  01144	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  0114b	e8 00 00 00 00	 call	 ?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z ; ScintillaEditView::getGenericSelectedText

; 352  : 			_findReplaceDlg.setSearchText(str);

  01150	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$63[rbp-256]
  01157	48 8b ce	 mov	 rcx, rsi
  0115a	e8 00 00 00 00	 call	 ?setSearchText@FindReplaceDlg@@QEAAXPEA_W@Z ; FindReplaceDlg::setSearchText

; 353  : 			if (isFirstTime)

  0115f	40 84 ff	 test	 dil, dil
  01162	75 22		 jne	 SHORT $LN118@process

; 354  : 				_nativeLangSpeaker.changeDlgLang(_findReplaceDlg.getHSelf(), "Find");

  01164	48 8d 8b 78 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1144]
  0116b	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  01170	45 33 c9	 xor	 r9d, r9d
  01173	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04OLJIFFAL@Find@
  0117a	48 8b 93 c8 0c
	00 00		 mov	 rdx, QWORD PTR [rbx+3272]
  01181	e8 00 00 00 00	 call	 ?changeDlgLang@NativeLangSpeaker@@QEAA_NPEAUHWND__@@PEBDPEAD_K@Z ; NativeLangSpeaker::changeDlgLang
$LN118@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h

; 279  : 		doDialog(FINDINPROJECTS_DLG);

  01186	45 0f b6 cc	 movzx	 r9d, r12b
  0118a	45 33 c0	 xor	 r8d, r8d
  0118d	41 8d 50 03	 lea	 edx, QWORD PTR [r8+3]
  01191	48 8b ce	 mov	 rcx, rsi
  01194	e8 00 00 00 00	 call	 ?doDialog@FindReplaceDlg@@QEAAXW4DIALOG_TYPE@@_N1@Z ; FindReplaceDlg::doDialog
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 356  : 			_findReplaceDlg.setProjectCheckmarks(NULL, (int) wParam);

  01199	45 8b c7	 mov	 r8d, r15d
  0119c	33 d2		 xor	 edx, edx
  0119e	48 8b ce	 mov	 rcx, rsi
  011a1	e8 00 00 00 00	 call	 ?setProjectCheckmarks@FindReplaceDlg@@QEAAXPEAUFindHistory@@H@Z ; FindReplaceDlg::setProjectCheckmarks

; 357  : 			return TRUE;

  011a6	49 8b c4	 mov	 rax, r12
  011a9	e9 5b 3c 00 00	 jmp	 $LN1@process
$LN119@process:

; 358  : 		}
; 359  : 
; 360  : 		case NPPM_INTERNAL_FINDINFINDERDLG:
; 361  : 		{
; 362  : 			const int strSize = FINDREPLACE_MAXLENGTH;
; 363  : 			TCHAR str[strSize];
; 364  : 			Finder *launcher = reinterpret_cast<Finder *>(wParam);
; 365  : 
; 366  : 			bool isFirstTime = !_findInFinderDlg.isCreated();

  011ae	48 8b 83 18 17
	00 00		 mov	 rax, QWORD PTR [rbx+5912]
  011b5	48 8d 8b 18 17
	00 00		 lea	 rcx, QWORD PTR [rbx+5912]
  011bc	ff 50 68	 call	 QWORD PTR [rax+104]
  011bf	0f b6 f0	 movzx	 esi, al

; 367  : 
; 368  : 			_findInFinderDlg.doDialog(launcher, _nativeLangSpeaker.isRTL());

  011c2	44 0f b6 83 84
	04 00 00	 movzx	 r8d, BYTE PTR [rbx+1156]
  011ca	49 8b d7	 mov	 rdx, r15
  011cd	48 8d 8b 18 17
	00 00		 lea	 rcx, QWORD PTR [rbx+5912]
  011d4	e8 00 00 00 00	 call	 ?doDialog@FindInFinderDlg@@QEAAXPEAVFinder@@_N@Z ; FindInFinderDlg::doDialog

; 369  : 
; 370  : 			_pEditView->getGenericSelectedText(str, strSize);

  011d9	45 0f b6 cc	 movzx	 r9d, r12b
  011dd	41 b8 00 08 00
	00		 mov	 r8d, 2048		; 00000800H
  011e3	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$62[rbp-256]
  011ea	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  011f1	e8 00 00 00 00	 call	 ?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z ; ScintillaEditView::getGenericSelectedText

; 371  : 			_findReplaceDlg.setSearchText(str);

  011f6	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$62[rbp-256]
  011fd	48 8d 8b b0 0c
	00 00		 lea	 rcx, QWORD PTR [rbx+3248]
  01204	e8 00 00 00 00	 call	 ?setSearchText@FindReplaceDlg@@QEAAXPEA_W@Z ; FindReplaceDlg::setSearchText

; 372  : 			setFindReplaceFolderFilter(NULL, NULL);

  01209	45 33 c0	 xor	 r8d, r8d
  0120c	33 d2		 xor	 edx, edx
  0120e	48 8b cb	 mov	 rcx, rbx
  01211	e8 00 00 00 00	 call	 ?setFindReplaceFolderFilter@Notepad_plus@@QEAAXPEB_W0@Z ; Notepad_plus::setFindReplaceFolderFilter

; 373  : 
; 374  : 			if (isFirstTime)

  01216	40 84 f6	 test	 sil, sil
  01219	0f 85 e3 fe ff
	ff		 jne	 $LN2695@process

; 375  : 				_nativeLangSpeaker.changeFindReplaceDlgLang(_findReplaceDlg);

  0121f	48 8d 8b 78 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1144]
  01226	48 8d 93 b0 0c
	00 00		 lea	 rdx, QWORD PTR [rbx+3248]
  0122d	e8 00 00 00 00	 call	 ?changeFindReplaceDlgLang@NativeLangSpeaker@@QEAAXAEAVFindReplaceDlg@@@Z ; NativeLangSpeaker::changeFindReplaceDlgLang

; 2748 : }

  01232	49 8b c4	 mov	 rax, r12
  01235	e9 cf 3b 00 00	 jmp	 $LN1@process
$LN165@process:

; 547  : 		}
; 548  : 
; 549  : 		case NPPM_INTERNAL_DOCORDERCHANGED :
; 550  : 		{
; 551  : 			if (_pFileSwitcherPanel)

  0123a	48 8b 8b 80 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623744]
  01241	48 85 c9	 test	 rcx, rcx
  01244	74 15		 je	 SHORT $LN921@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.h

; 91   : 		if (_lastSortingDirection == SORT_DIRECTION_NONE) {

  01246	83 b9 8c 00 00
	00 ff		 cmp	 DWORD PTR [rcx+140], -1
  0124d	75 0c		 jne	 SHORT $LN921@process

; 92   : 			_fileListView.reload();

  0124f	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  01256	e8 00 00 00 00	 call	 ?reload@VerticalFileSwitcherListView@@QEAAXXZ ; VerticalFileSwitcherListView::reload
$LN921@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 556  : 			BufferID id = _pEditView->getCurrentBufferID();

  0125b	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  01262	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]

; 557  : 
; 558  : 			// Notify plugins that current file is about to be closed
; 559  : 			SCNotification scnN;
; 560  : 			scnN.nmhdr.code = NPPN_DOCORDERCHANGED;

  01266	c7 85 b0 00 00
	00 f9 03 00 00	 mov	 DWORD PTR scnN$61[rbp-240], 1017 ; 000003f9H

; 561  : 			scnN.nmhdr.hwndFrom = reinterpret_cast<void *>(lParam);

  01270	48 89 b5 a0 00
	00 00		 mov	 QWORD PTR scnN$61[rbp-256], rsi
$LN2702@process:

; 2748 : }

  01277	48 89 8d a8 00
	00 00		 mov	 QWORD PTR scnN$61[rbp-248], rcx
$LN2700@process:
  0127e	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  01285	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR scnN$61[rbp-256]
  0128c	e8 00 00 00 00	 call	 ?notify@PluginsManager@@QEAAXPEBUSCNotification@@@Z ; PluginsManager::notify
  01291	49 8b c4	 mov	 rax, r12
  01294	e9 70 3b 00 00	 jmp	 $LN1@process
$LN167@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Notepad_plus.h

; 501  : 		::CheckMenuItem(_mainMenuHandle, itemID, MF_BYCOMMAND | (willBeChecked?MF_CHECKED:MF_UNCHECKED));

  01299	ba 34 ac 00 00	 mov	 edx, 44084		; 0000ac34H
  0129e	41 b8 08 00 00
	00		 mov	 r8d, 8
  012a4	48 8b 8b 78 7a
	09 00		 mov	 rcx, QWORD PTR [rbx+621176]
  012ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CheckMenuItem
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h

; 78   : 		::SendMessage(_hSelf, TB_CHECKBUTTON, ID2Check, MAKELONG(willBeChecked, 0));

  012b1	ba 02 04 00 00	 mov	 edx, 1026		; 00000402H
  012b6	4d 8b cc	 mov	 r9, r12
  012b9	41 b8 34 ac 00
	00		 mov	 r8d, 44084		; 0000ac34H
  012bf	48 8b 8b 30 0a
	00 00		 mov	 rcx, QWORD PTR [rbx+2608]
  012c6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 571  : 			launchFunctionList();

  012cc	48 8b cb	 mov	 rcx, rbx
  012cf	e8 00 00 00 00	 call	 ?launchFunctionList@Notepad_plus@@AEAAXXZ ; Notepad_plus::launchFunctionList

; 572  : 			_pFuncList->setClosed(false);

  012d4	48 8b 83 b0 84
	09 00		 mov	 rax, QWORD PTR [rbx+623792]
  012db	44 88 b0 80 00
	00 00		 mov	 BYTE PTR [rax+128], r14b
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  012e2	4c 89 75 a0	 mov	 QWORD PTR $T31[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  012e6	4c 89 75 b0	 mov	 QWORD PTR $T31[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  012ea	4c 89 75 b8	 mov	 QWORD PTR $T31[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  012ee	4c 89 75 b0	 mov	 QWORD PTR $T31[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  012f2	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T31[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  012fa	66 44 89 75 a0	 mov	 WORD PTR $T31[rbp-256], r14w

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  012ff	45 33 c0	 xor	 r8d, r8d
  01302	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  01309	48 8d 4d a0	 lea	 rcx, QWORD PTR $T31[rbp-256]
  0130d	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  01312	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 573  : 			_pFuncList->serialize();

  01313	48 8d 55 a0	 lea	 rdx, QWORD PTR $T31[rbp-256]
  01317	48 8b 8b b0 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623792]
  0131e	e8 00 00 00 00	 call	 ?serialize@FunctionListPanel@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; FunctionListPanel::serialize
  01323	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01324	48 8b 55 b8	 mov	 rdx, QWORD PTR $T31[rbp-232]
  01328	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0132c	72 36		 jb	 SHORT $LN963@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0132e	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  01336	48 8b 4d a0	 mov	 rcx, QWORD PTR $T31[rbp-256]
  0133a	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0133d	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  01344	72 19		 jb	 SHORT $LN962@process

; 155  :     _Bytes += _Non_user_size;

  01346	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0134a	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  0134e	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01351	48 83 c0 f8	 add	 rax, -8
  01355	48 83 f8 1f	 cmp	 rax, 31
  01359	0f 87 22 3b 00
	00		 ja	 $LN2712@process
$LN962@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0135f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN963@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01364	4c 89 75 b0	 mov	 QWORD PTR $T31[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  01368	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T31[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01370	66 44 89 75 a0	 mov	 WORD PTR $T31[rbp-256], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 577  : 		break;

  01375	eb 1b		 jmp	 SHORT $LN2694@process
$LN168@process:

; 578  : 
; 579  : 		case NPPM_INTERNAL_PRNTANDQUIT:
; 580  : 		{
; 581  : 			::PostMessage(_pPublicInterface->getHSelf(), WM_COMMAND, IDM_FILE_PRINTNOW, 0);

  01377	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0137a	45 33 c9	 xor	 r9d, r9d
  0137d	ba 11 01 00 00	 mov	 edx, 273		; 00000111H
  01382	41 b8 e9 03 00
	00		 mov	 r8d, 1001		; 000003e9H
  01388	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0138c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostMessageW
$LN2694@process:

; 2746 : 	_pluginsManager.relayNppMessages(message, wParam, lParam);

  01392	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  01395	45 33 c9	 xor	 r9d, r9d
  01398	ba 11 01 00 00	 mov	 edx, 273		; 00000111H
  0139d	41 b8 33 a0 00
	00		 mov	 r8d, 41011		; 0000a033H
  013a3	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  013a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostMessageW
  013ad	e9 3a 3a 00 00	 jmp	 $LN299@process
$LN190@process:

; 712  : 		}
; 713  : 
; 714  : 		case NPPM_INTERNAL_SAVECURRENTSESSION:
; 715  : 		{
; 716  : 			const NppGUI& nppGui = nppParam.getNppGUI();
; 717  : 
; 718  : 			if (nppGui._rememberLastSession && !nppGui._isCmdlineNosessionActivated)

  013b2	45 38 b5 d6 00
	00 00		 cmp	 BYTE PTR [r13+214], r14b
  013b9	0f 84 43 fd ff
	ff		 je	 $LN2695@process
  013bf	45 38 b5 d7 00
	00 00		 cmp	 BYTE PTR [r13+215], r14b
  013c6	0f 85 36 fd ff
	ff		 jne	 $LN2695@process
  013cc	4c 89 75 10	 mov	 QWORD PTR currentSession$52[rbp-256], r14
  013d0	4c 89 75 18	 mov	 QWORD PTR currentSession$52[rbp-248], r14
  013d4	4c 89 75 20	 mov	 QWORD PTR currentSession$52[rbp-240], r14
  013d8	44 88 75 28	 mov	 BYTE PTR currentSession$52[rbp-232], r14b
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  013dc	4c 89 75 30	 mov	 QWORD PTR currentSession$52[rbp-224], r14
  013e0	0f 57 c0	 xorps	 xmm0, xmm0

; 2355 :     size_type _Mysize = 0; // current length of string

  013e3	66 0f 7f 45 40	 movdqa	 XMMWORD PTR currentSession$52[rbp-208], xmm0

; 4596 :         _My_data._Mysize = 0;

  013e8	66 0f 6f 0d 00
	00 00 00	 movdqa	 xmm1, XMMWORD PTR __xmm@00000000000000070000000000000000
  013f0	66 0f 7f 4d 40	 movdqa	 XMMWORD PTR currentSession$52[rbp-208], xmm1

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  013f5	66 44 89 75 30	 mov	 WORD PTR currentSession$52[rbp-224], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  013fa	66 0f 7f 45 50	 movdqa	 XMMWORD PTR currentSession$52[rbp-192], xmm0
  013ff	4c 89 75 60	 mov	 QWORD PTR currentSession$52[rbp-176], r14
  01403	4c 89 75 68	 mov	 QWORD PTR currentSession$52[rbp-168], r14
  01407	66 0f 7f 45 70	 movdqa	 XMMWORD PTR currentSession$52[rbp-160], xmm0
  0140c	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR currentSession$52[rbp-144], xmm0
  01414	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR currentSession$52[rbp-128], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 721  : 				getCurrentOpenedFiles(currentSession, true);

  0141b	41 b0 01	 mov	 r8b, 1
  0141e	48 8d 55 10	 lea	 rdx, QWORD PTR currentSession$52[rbp-256]
  01422	48 8b cb	 mov	 rcx, rbx
  01425	e8 00 00 00 00	 call	 ?getCurrentOpenedFiles@Notepad_plus@@QEAAXAEAUSession@@_N@Z ; Notepad_plus::getCurrentOpenedFiles

; 722  : 				nppParam.writeSession(currentSession);

  0142a	45 33 c0	 xor	 r8d, r8d
  0142d	48 8d 55 10	 lea	 rdx, QWORD PTR currentSession$52[rbp-256]
  01431	49 8b cd	 mov	 rcx, r13
  01434	e8 00 00 00 00	 call	 ?writeSession@NppParameters@@QEAAXAEBUSession@@PEB_W@Z ; NppParameters::writeSession
  01439	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0143a	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR currentSession$52[rbp-144]
  01441	48 85 db	 test	 rbx, rbx
  01444	0f 84 b8 00 00
	00		 je	 $LN1104@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0144a	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR currentSession$52[rbp-136]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  01451	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  01454	74 5f		 je	 SHORT $LN1110@process
$LL1111@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01456	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  0145a	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0145e	72 35		 jb	 SHORT $LN1140@process

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  01460	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01463	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0146b	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  01472	72 1c		 jb	 SHORT $LN1139@process

; 155  :     _Bytes += _Non_user_size;

  01474	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01478	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0147c	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0147f	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  01483	48 83 f8 1f	 cmp	 rax, 31
  01487	0f 87 fa 39 00
	00		 ja	 $LN1160@process

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0148d	49 8b c8	 mov	 rcx, r8
$LN1139@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01490	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN1140@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01495	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  01499	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  014a1	66 44 89 33	 mov	 WORD PTR [rbx], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  014a5	48 83 c3 20	 add	 rbx, 32			; 00000020H
  014a9	48 3b df	 cmp	 rbx, rdi
  014ac	75 a8		 jne	 SHORT $LL1111@process
  014ae	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR currentSession$52[rbp-144]
$LN1110@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  014b5	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR currentSession$52[rbp-128]
  014bc	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  014bf	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  014c3	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  014c6	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  014cd	72 19		 jb	 SHORT $LN1163@process

; 155  :     _Bytes += _Non_user_size;

  014cf	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  014d3	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  014d7	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  014da	48 83 c0 f8	 add	 rax, -8
  014de	48 83 f8 1f	 cmp	 rax, 31
  014e2	0f 87 9f 39 00
	00		 ja	 $LN1160@process
$LN1163@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  014e8	48 8b cb	 mov	 rcx, rbx
  014eb	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  014f0	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  014f3	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR currentSession$52[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  014fb	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR currentSession$52[rbp-128], r14
$LN1104@process:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  01502	49 bd 09 21 84
	10 42 08 21 84	 mov	 r13, -8925843906633654007 ; 8421084210842109H
  0150c	48 8b 5d 68	 mov	 rbx, QWORD PTR currentSession$52[rbp-168]
  01510	48 85 db	 test	 rbx, rbx
  01513	0f 84 81 00 00
	00		 je	 $LN1171@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  01519	48 8b 7d 70	 mov	 rdi, QWORD PTR currentSession$52[rbp-160]
  0151d	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  01520	74 1a		 je	 SHORT $LN1177@process
$LL1178@process:

; 723  :         _Ptr->~_Uty();

  01522	33 d2		 xor	 edx, edx
  01524	48 8b cb	 mov	 rcx, rbx
  01527	e8 00 00 00 00	 call	 ??_GsessionFileInfo@@QEAAPEAXI@Z

; 949  :         for (; _First != _Last; ++_First) {

  0152c	48 81 c3 f8 00
	00 00		 add	 rbx, 248		; 000000f8H
  01533	48 3b df	 cmp	 rbx, rdi
  01536	75 ea		 jne	 SHORT $LL1178@process
  01538	48 8b 5d 68	 mov	 rbx, QWORD PTR currentSession$52[rbp-168]
$LN1177@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0153c	48 8b 4d 78	 mov	 rcx, QWORD PTR currentSession$52[rbp-152]
  01540	48 2b cb	 sub	 rcx, rbx
  01543	49 8b c5	 mov	 rax, r13
  01546	48 f7 e9	 imul	 rcx
  01549	48 03 d1	 add	 rdx, rcx
  0154c	48 c1 fa 07	 sar	 rdx, 7
  01550	48 8b c2	 mov	 rax, rdx
  01553	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  01557	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0155a	48 69 d2 f8 00
	00 00		 imul	 rdx, rdx, 248		; 000000f8H
  01561	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01564	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0156b	72 19		 jb	 SHORT $LN1196@process

; 155  :     _Bytes += _Non_user_size;

  0156d	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01571	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  01575	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01578	48 83 c0 f8	 add	 rax, -8
  0157c	48 83 f8 1f	 cmp	 rax, 31
  01580	0f 87 07 39 00
	00		 ja	 $LN2713@process
$LN1196@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01586	48 8b cb	 mov	 rcx, rbx
  01589	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0158e	4c 89 75 68	 mov	 QWORD PTR currentSession$52[rbp-168], r14
  01592	0f 57 c0	 xorps	 xmm0, xmm0

; 1768 :             _Mylast  = nullptr;

  01595	66 0f 7f 45 70	 movdqa	 XMMWORD PTR currentSession$52[rbp-160], xmm0
$LN1171@process:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0159a	48 8b 5d 50	 mov	 rbx, QWORD PTR currentSession$52[rbp-192]
  0159e	48 85 db	 test	 rbx, rbx
  015a1	0f 84 81 00 00
	00		 je	 $LN1204@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  015a7	48 8b 7d 58	 mov	 rdi, QWORD PTR currentSession$52[rbp-184]
  015ab	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  015ae	74 1a		 je	 SHORT $LN1210@process
$LL1211@process:

; 723  :         _Ptr->~_Uty();

  015b0	33 d2		 xor	 edx, edx
  015b2	48 8b cb	 mov	 rcx, rbx
  015b5	e8 00 00 00 00	 call	 ??_GsessionFileInfo@@QEAAPEAXI@Z

; 949  :         for (; _First != _Last; ++_First) {

  015ba	48 81 c3 f8 00
	00 00		 add	 rbx, 248		; 000000f8H
  015c1	48 3b df	 cmp	 rbx, rdi
  015c4	75 ea		 jne	 SHORT $LL1211@process
  015c6	48 8b 5d 50	 mov	 rbx, QWORD PTR currentSession$52[rbp-192]
$LN1210@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  015ca	48 8b 4d 60	 mov	 rcx, QWORD PTR currentSession$52[rbp-176]
  015ce	48 2b cb	 sub	 rcx, rbx
  015d1	49 8b c5	 mov	 rax, r13
  015d4	48 f7 e9	 imul	 rcx
  015d7	48 03 d1	 add	 rdx, rcx
  015da	48 c1 fa 07	 sar	 rdx, 7
  015de	48 8b c2	 mov	 rax, rdx
  015e1	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  015e5	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  015e8	48 69 d2 f8 00
	00 00		 imul	 rdx, rdx, 248		; 000000f8H
  015ef	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  015f2	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  015f9	72 19		 jb	 SHORT $LN1229@process

; 155  :     _Bytes += _Non_user_size;

  015fb	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  015ff	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  01603	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01606	48 83 c0 f8	 add	 rax, -8
  0160a	48 83 f8 1f	 cmp	 rax, 31
  0160e	0f 87 7f 38 00
	00		 ja	 $LN2714@process
$LN1229@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01614	48 8b cb	 mov	 rcx, rbx
  01617	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0161c	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0161f	66 0f 7f 45 50	 movdqa	 XMMWORD PTR currentSession$52[rbp-192], xmm0

; 1769 :             _Myend   = nullptr;

  01624	4c 89 75 60	 mov	 QWORD PTR currentSession$52[rbp-176], r14
$LN1204@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01628	48 8b 55 48	 mov	 rdx, QWORD PTR currentSession$52[rbp-200]
  0162c	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01630	72 36		 jb	 SHORT $LN1256@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01632	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0163a	48 8b 4d 30	 mov	 rcx, QWORD PTR currentSession$52[rbp-224]
  0163e	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01641	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  01648	72 19		 jb	 SHORT $LN1255@process

; 155  :     _Bytes += _Non_user_size;

  0164a	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0164e	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  01652	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01655	48 83 c0 f8	 add	 rax, -8
  01659	48 83 f8 1f	 cmp	 rax, 31
  0165d	0f 87 36 38 00
	00		 ja	 $LN2715@process
$LN1255@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01663	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN1256@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01668	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  01670	66 0f 7f 45 40	 movdqa	 XMMWORD PTR currentSession$52[rbp-208], xmm0

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01675	66 44 89 75 30	 mov	 WORD PTR currentSession$52[rbp-224], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  0167a	49 8b c4	 mov	 rax, r12
  0167d	e9 87 37 00 00	 jmp	 $LN1@process
$LN192@process:

; 723  : 			}
; 724  : 			return TRUE;
; 725  : 		}
; 726  : 
; 727  : 		case NPPM_INTERNAL_SAVEBACKUP:
; 728  : 		{
; 729  : 			if (NppParameters::getInstance().getNppGUI().isSnapshotMode())

  01682	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 918  : 	bool isSnapshotMode() const {return _isSnapshotMode && _rememberLastSession && !_isCmdlineNosessionActivated;};

  01687	44 38 b0 3d 08
	00 00		 cmp	 BYTE PTR [rax+2109], r14b
  0168e	0f 84 6e fa ff
	ff		 je	 $LN2695@process
  01694	44 38 b0 d6 00
	00 00		 cmp	 BYTE PTR [rax+214], r14b
  0169b	0f 84 61 fa ff
	ff		 je	 $LN2695@process
  016a1	44 38 b0 d7 00
	00 00		 cmp	 BYTE PTR [rax+215], r14b
  016a8	0f 85 54 fa ff
	ff		 jne	 $LN2695@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 731  : 				MainFileManager.backupCurrentBuffer();

  016ae	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  016b3	48 8b c8	 mov	 rcx, rax
  016b6	e8 00 00 00 00	 call	 ?backupCurrentBuffer@FileManager@@QEAA_NXZ ; FileManager::backupCurrentBuffer

; 2748 : }

  016bb	49 8b c4	 mov	 rax, r12
  016be	e9 46 37 00 00	 jmp	 $LN1@process
$LN194@process:

; 732  : 			}
; 733  : 
; 734  : 			return TRUE;
; 735  : 		}
; 736  : 
; 737  : 		case NPPM_INTERNAL_CHANGETABBAEICONS:
; 738  : 		{
; 739  : 			_mainDocTab.changeIcons(static_cast<unsigned char>(lParam));

  016c3	48 8d 8b 90 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1168]
  016ca	40 0f b6 d6	 movzx	 edx, sil
  016ce	e8 00 00 00 00	 call	 ?changeIcons@DocTabView@@QEAAXE@Z ; DocTabView::changeIcons

; 740  : 			_subDocTab.changeIcons(static_cast<unsigned char>(lParam));

  016d3	48 8d 8b 68 05
	00 00		 lea	 rcx, QWORD PTR [rbx+1384]
  016da	40 0f b6 d6	 movzx	 edx, sil
  016de	e8 00 00 00 00	 call	 ?changeIcons@DocTabView@@QEAAXE@Z ; DocTabView::changeIcons

; 741  : 			return TRUE;

  016e3	49 8b c4	 mov	 rax, r12
  016e6	e9 1e 37 00 00	 jmp	 $LN1@process
$LN195@process:

; 742  : 		}
; 743  : 
; 744  : 		case NPPM_INTERNAL_RELOADNATIVELANG:
; 745  : 		{
; 746  : 			reloadLang();

  016eb	48 8b cb	 mov	 rcx, rbx
  016ee	e8 00 00 00 00	 call	 ?reloadLang@Notepad_plus@@AEAA_NXZ ; Notepad_plus::reloadLang

; 747  : 			return TRUE;

  016f3	49 8b c4	 mov	 rax, r12
  016f6	e9 0e 37 00 00	 jmp	 $LN1@process
$LN196@process:

; 748  : 		}
; 749  : 
; 750  : 		case NPPM_INTERNAL_RELOADSTYLERS:
; 751  : 		{
; 752  : 			loadStyles();

  016fb	48 8b cb	 mov	 rcx, rbx
  016fe	e8 00 00 00 00	 call	 ?loadStyles@Notepad_plus@@AEAA_NXZ ; Notepad_plus::loadStyles

; 753  : 			return TRUE;

  01703	49 8b c4	 mov	 rax, r12
  01706	e9 fe 36 00 00	 jmp	 $LN1@process
$LN197@process:

; 754  : 		}
; 755  : 
; 756  : 		case NPPM_INTERNAL_PLUGINSHORTCUTMOTIFIED:
; 757  : 		{
; 758  : 			SCNotification scnN;
; 759  : 			scnN.nmhdr.code = NPPN_SHORTCUTREMAPPED;

  0170b	c7 85 b0 00 00
	00 f5 03 00 00	 mov	 DWORD PTR scnN$59[rbp-240], 1013 ; 000003f5H

; 760  : 			scnN.nmhdr.hwndFrom = reinterpret_cast<void *>(lParam); // ShortcutKey structure

  01715	48 89 b5 a0 00
	00 00		 mov	 QWORD PTR scnN$59[rbp-256], rsi

; 761  : 			scnN.nmhdr.idFrom = (uptr_t)wParam; // cmdID

  0171c	4c 89 bd a8 00
	00 00		 mov	 QWORD PTR scnN$59[rbp-248], r15

; 762  : 			_pluginsManager.notify(&scnN);
; 763  : 			return TRUE;

  01723	e9 56 fb ff ff	 jmp	 $LN2700@process
$LN311@process:

; 1335 : 		}
; 1336 : 
; 1337 : 		case NPPM_INTERNAL_GETSCINTEDTVIEW:
; 1338 : 		{
; 1339 : 			return (LRESULT)_scintillaCtrls4Plugins.getScintillaEditViewFrom(reinterpret_cast<HWND>(lParam));

  01728	48 8d 8b a8 7c
	09 00		 lea	 rcx, QWORD PTR [rbx+621736]
  0172f	48 8b d6	 mov	 rdx, rsi
  01732	e8 00 00 00 00	 call	 ?getScintillaEditViewFrom@ScintillaCtrls@@QEAAPEAVScintillaEditView@@PEAUHWND__@@@Z ; ScintillaCtrls::getScintillaEditViewFrom
  01737	e9 cd 36 00 00	 jmp	 $LN1@process
$LN312@process:

; 1340 : 		}
; 1341 : 
; 1342 : 		case NPPM_INTERNAL_ENABLESNAPSHOT:
; 1343 : 		{
; 1344 : 			launchDocumentBackupTask();

  0173c	48 8b cb	 mov	 rcx, rbx
  0173f	e8 00 00 00 00	 call	 ?launchDocumentBackupTask@Notepad_plus@@QEAAXXZ ; Notepad_plus::launchDocumentBackupTask

; 2748 : }

  01744	49 8b c4	 mov	 rax, r12
  01747	e9 bd 36 00 00	 jmp	 $LN1@process
$LN339@process:

; 1430 : 		}
; 1431 : 
; 1432 : 		case NPPM_INTERNAL_CLEARSCINTILLAKEY:
; 1433 : 		{
; 1434 : 			_mainEditView.execute(SCI_CLEARCMDKEY, wParam);

  0174c	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01753	45 33 c9	 xor	 r9d, r9d
  01756	4d 8b c7	 mov	 r8, r15
  01759	ba 17 08 00 00	 mov	 edx, 2071		; 00000817H
  0175e	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1435 : 			_subEditView.execute(SCI_CLEARCMDKEY, wParam);

  01763	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  0176a	45 33 c9	 xor	 r9d, r9d
  0176d	4d 8b c7	 mov	 r8, r15
  01770	ba 17 08 00 00	 mov	 edx, 2071		; 00000817H
  01775	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  0177a	49 8b c4	 mov	 rax, r12
  0177d	e9 87 36 00 00	 jmp	 $LN1@process
$LN340@process:

; 1436 : 			return TRUE;
; 1437 : 		}
; 1438 : 		case NPPM_INTERNAL_BINDSCINTILLAKEY:
; 1439 : 		{
; 1440 : 			_mainEditView.execute(SCI_ASSIGNCMDKEY, wParam, lParam);

  01782	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01789	4c 8b ce	 mov	 r9, rsi
  0178c	4d 8b c7	 mov	 r8, r15
  0178f	ba 16 08 00 00	 mov	 edx, 2070		; 00000816H
  01794	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1441 : 			_subEditView.execute(SCI_ASSIGNCMDKEY, wParam, lParam);

  01799	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  017a0	4c 8b ce	 mov	 r9, rsi
  017a3	4d 8b c7	 mov	 r8, r15
  017a6	ba 16 08 00 00	 mov	 edx, 2070		; 00000816H
  017ab	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  017b0	49 8b c4	 mov	 rax, r12
  017b3	e9 51 36 00 00	 jmp	 $LN1@process
$LN341@process:

; 1442 : 			return TRUE;
; 1443 : 		}
; 1444 : 
; 1445 : 		case NPPM_INTERNAL_CMDLIST_MODIFIED:
; 1446 : 		{
; 1447 : 			::DrawMenuBar(hwnd);

  017b8	48 8b cf	 mov	 rcx, rdi
  017bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DrawMenuBar

; 2748 : }

  017c1	49 8b c4	 mov	 rax, r12
  017c4	e9 40 36 00 00	 jmp	 $LN1@process
$LN344@process:

; 1448 : 			return TRUE;
; 1449 : 		}
; 1450 : 
; 1451 : 		case NPPM_INTERNAL_MACROLIST_MODIFIED:
; 1452 : 		{
; 1453 : 			return TRUE;
; 1454 : 		}
; 1455 : 
; 1456 : 		case NPPM_INTERNAL_USERCMDLIST_MODIFIED:
; 1457 : 		{
; 1458 : 			return TRUE;
; 1459 : 		}
; 1460 : 
; 1461 : 		case NPPM_INTERNAL_FINDKEYCONFLICTS:
; 1462 : 		{
; 1463 : 			if (!wParam || !lParam) // Clean up current session

  017c9	4d 85 ff	 test	 r15, r15
  017cc	74 69		 je	 SHORT $LN346@process
  017ce	48 85 f6	 test	 rsi, rsi
  017d1	74 64		 je	 SHORT $LN346@process

; 1467 : 				return TRUE;
; 1468 : 			}
; 1469 : 
; 1470 : 			if (_pShortcutMapper == nullptr) // Begin new session

  017d3	48 8b 83 48 7b
	09 00		 mov	 rax, QWORD PTR [rbx+621384]
  017da	48 85 c0	 test	 rax, rax
  017dd	75 30		 jne	 SHORT $LN348@process

; 1471 : 			{
; 1472 : 				_pShortcutMapper = new ShortcutMapper;

  017df	b9 00 02 00 00	 mov	 ecx, 512		; 00000200H
  017e4	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  017e9	48 89 45 f0	 mov	 QWORD PTR $T44[rbp-256], rax
  017ed	48 85 c0	 test	 rax, rax
  017f0	74 0a		 je	 SHORT $LN587@process
  017f2	48 8b c8	 mov	 rcx, rax
  017f5	e8 00 00 00 00	 call	 ??0ShortcutMapper@@QEAA@XZ ; ShortcutMapper::ShortcutMapper
  017fa	eb 03		 jmp	 SHORT $LN588@process
$LN587@process:
  017fc	49 8b c6	 mov	 rax, r14
$LN588@process:
  017ff	48 89 83 48 7b
	09 00		 mov	 QWORD PTR [rbx+621384], rax

; 1473 : 				if (_pShortcutMapper == nullptr)

  01806	48 85 c0	 test	 rax, rax
  01809	0f 84 dd 35 00
	00		 je	 $LN299@process
$LN348@process:

; 1474 : 					break;
; 1475 : 			}
; 1476 : 
; 1477 : 			*reinterpret_cast<bool*>(lParam) = _pShortcutMapper->findKeyConflicts(nullptr, *reinterpret_cast<KeyCombo*>(wParam), (size_t)-1);

  0180f	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  01816	48 89 7c 24 68	 mov	 QWORD PTR $T8[rsp], rdi
  0181b	4c 8d 4c 24 68	 lea	 r9, QWORD PTR $T8[rsp]
  01820	4d 8b c7	 mov	 r8, r15
  01823	33 d2		 xor	 edx, edx
  01825	48 8b c8	 mov	 rcx, rax
  01828	e8 00 00 00 00	 call	 ?findKeyConflicts@ShortcutMapper@@QEBA_NQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBUKeyCombo@@AEB_K@Z ; ShortcutMapper::findKeyConflicts
  0182d	88 06		 mov	 BYTE PTR [rsi], al

; 1478 : 
; 1479 : 			return TRUE;

  0182f	8d 47 02	 lea	 eax, QWORD PTR [rdi+2]
  01832	e9 d2 35 00 00	 jmp	 $LN1@process
$LN346@process:

; 1464 : 			{
; 1465 : 				delete _pShortcutMapper;

  01837	48 8b 8b 48 7b
	09 00		 mov	 rcx, QWORD PTR [rbx+621384]
  0183e	48 85 c9	 test	 rcx, rcx
  01841	74 08		 je	 SHORT $LN585@process
  01843	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  01846	41 8b d4	 mov	 edx, r12d
  01849	ff 10		 call	 QWORD PTR [rax]
$LN585@process:

; 1466 : 				_pShortcutMapper = nullptr;

  0184b	4c 89 b3 48 7b
	09 00		 mov	 QWORD PTR [rbx+621384], r14

; 2748 : }

  01852	49 8b c4	 mov	 rax, r12
  01855	e9 af 35 00 00	 jmp	 $LN1@process
$LN349@process:

; 1480 : 		}
; 1481 : 
; 1482 : 		case NPPM_INTERNAL_SETCARETWIDTH:
; 1483 : 		{
; 1484 : 			const NppGUI & nppGUI = nppParam.getNppGUI();
; 1485 : 
; 1486 : 			if (nppGUI._caretWidth < 4)

  0185a	48 8d b3 f0 06
	00 00		 lea	 rsi, QWORD PTR [rbx+1776]
  01861	4c 8d b3 50 06
	00 00		 lea	 r14, QWORD PTR [rbx+1616]
  01868	45 33 c9	 xor	 r9d, r9d
  0186b	4d 8b c4	 mov	 r8, r12
  0186e	48 8b ce	 mov	 rcx, rsi
  01871	41 83 bd fc 03
	00 00 04	 cmp	 DWORD PTR [r13+1020], 4
  01879	7d 3e		 jge	 SHORT $LN350@process

; 1487 : 			{
; 1488 : 				_mainEditView.execute(SCI_SETCARETSTYLE, CARETSTYLE_LINE);

  0187b	bf d0 09 00 00	 mov	 edi, 2512		; 000009d0H
  01880	8b d7		 mov	 edx, edi
  01882	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1489 : 				_subEditView.execute(SCI_SETCARETSTYLE, CARETSTYLE_LINE);

  01887	45 33 c9	 xor	 r9d, r9d
  0188a	4d 8b c4	 mov	 r8, r12
  0188d	8b d7		 mov	 edx, edi
  0188f	49 8b ce	 mov	 rcx, r14
  01892	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1490 : 				_mainEditView.execute(SCI_SETCARETWIDTH, nppGUI._caretWidth);

  01897	4d 63 85 fc 03
	00 00		 movsxd	 r8, DWORD PTR [r13+1020]
  0189e	45 33 c9	 xor	 r9d, r9d
  018a1	bf 8c 08 00 00	 mov	 edi, 2188		; 0000088cH
  018a6	8b d7		 mov	 edx, edi
  018a8	48 8b ce	 mov	 rcx, rsi
  018ab	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1491 : 				_subEditView.execute(SCI_SETCARETWIDTH, nppGUI._caretWidth);

  018b0	49 63 9d fc 03
	00 00		 movsxd	 rbx, DWORD PTR [r13+1020]

; 1492 : 			}

  018b7	eb 36		 jmp	 SHORT $LN351@process
$LN350@process:

; 1493 : 			else
; 1494 : 			{
; 1495 : 				_mainEditView.execute(SCI_SETCARETWIDTH, 1);

  018b9	bf 8c 08 00 00	 mov	 edi, 2188		; 0000088cH
  018be	8b d7		 mov	 edx, edi
  018c0	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1496 : 				_subEditView.execute(SCI_SETCARETWIDTH, 1);

  018c5	45 33 c9	 xor	 r9d, r9d
  018c8	4d 8b c4	 mov	 r8, r12
  018cb	8b d7		 mov	 edx, edi
  018cd	49 8b ce	 mov	 rcx, r14
  018d0	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1497 : 				_mainEditView.execute(SCI_SETCARETSTYLE, CARETSTYLE_BLOCK);

  018d5	45 33 c9	 xor	 r9d, r9d
  018d8	bb 02 00 00 00	 mov	 ebx, 2
  018dd	44 8b c3	 mov	 r8d, ebx
  018e0	bf d0 09 00 00	 mov	 edi, 2512		; 000009d0H
  018e5	8b d7		 mov	 edx, edi
  018e7	48 8b ce	 mov	 rcx, rsi
  018ea	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
$LN351@process:

; 1498 : 				_subEditView.execute(SCI_SETCARETSTYLE, CARETSTYLE_BLOCK);
; 1499 : 			}
; 1500 : 			return TRUE;

  018ef	45 33 c9	 xor	 r9d, r9d
  018f2	4c 8b c3	 mov	 r8, rbx
  018f5	8b d7		 mov	 edx, edi
  018f7	49 8b ce	 mov	 rcx, r14
  018fa	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  018ff	49 8b c4	 mov	 rax, r12
  01902	e9 02 35 00 00	 jmp	 $LN1@process
$LN356@process:

; 1525 : 		}
; 1526 : 
; 1527 : 		case NPPM_INTERNAL_SCROLLBEYONDLASTLINE:
; 1528 : 		{
; 1529 : 			const bool endAtLastLine = !(nppParam.getSVP())._scrollBeyondLastLine;
; 1530 : 			_mainEditView.execute(SCI_SETENDATLASTLINE, endAtLastLine);

  01907	45 38 b5 d8 08
	00 00		 cmp	 BYTE PTR [r13+2264], r14b
  0190e	41 0f 94 c6	 sete	 r14b
  01912	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01919	45 33 c9	 xor	 r9d, r9d
  0191c	4d 8b c6	 mov	 r8, r14
  0191f	ba e5 08 00 00	 mov	 edx, 2277		; 000008e5H
  01924	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1531 : 			_subEditView.execute(SCI_SETENDATLASTLINE, endAtLastLine);

  01929	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  01930	45 33 c9	 xor	 r9d, r9d
  01933	4d 8b c6	 mov	 r8, r14
  01936	ba e5 08 00 00	 mov	 edx, 2277		; 000008e5H
  0193b	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  01940	49 8b c4	 mov	 rax, r12
  01943	e9 c1 34 00 00	 jmp	 $LN1@process
$LN357@process:

; 1532 : 			return TRUE;
; 1533 : 		}
; 1534 : 
; 1535 : 		case NPPM_INTERNAL_SETWORDCHARS:
; 1536 : 		{
; 1537 : 			_mainEditView.setWordChars();

  01948	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  0194f	e8 00 00 00 00	 call	 ?setWordChars@ScintillaEditView@@QEAAXXZ ; ScintillaEditView::setWordChars

; 1538 : 			_subEditView.setWordChars();

  01954	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  0195b	e8 00 00 00 00	 call	 ?setWordChars@ScintillaEditView@@QEAAXXZ ; ScintillaEditView::setWordChars

; 2748 : }

  01960	49 8b c4	 mov	 rax, r12
  01963	e9 a1 34 00 00	 jmp	 $LN1@process
$LN358@process:

; 1539 : 			return TRUE;
; 1540 : 		}
; 1541 : 
; 1542 : 		case NPPM_INTERNAL_SETMULTISELCTION:
; 1543 : 		{
; 1544 : 			const NppGUI & nppGUI = nppParam.getNppGUI();
; 1545 : 			_mainEditView.execute(SCI_SETMULTIPLESELECTION, nppGUI._enableMultiSelection);

  01968	45 0f b6 85 00
	04 00 00	 movzx	 r8d, BYTE PTR [r13+1024]
  01970	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01977	45 33 c9	 xor	 r9d, r9d
  0197a	ba 03 0a 00 00	 mov	 edx, 2563		; 00000a03H
  0197f	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1546 : 			_subEditView.execute(SCI_SETMULTIPLESELECTION, nppGUI._enableMultiSelection);

  01984	45 0f b6 85 00
	04 00 00	 movzx	 r8d, BYTE PTR [r13+1024]
  0198c	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  01993	45 33 c9	 xor	 r9d, r9d
  01996	ba 03 0a 00 00	 mov	 edx, 2563		; 00000a03H
  0199b	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  019a0	49 8b c4	 mov	 rax, r12
  019a3	e9 61 34 00 00	 jmp	 $LN1@process
$LN359@process:

; 1547 : 			return TRUE;
; 1548 : 		}
; 1549 : 
; 1550 : 		case NPPM_INTERNAL_SETCARETBLINKRATE:
; 1551 : 		{
; 1552 : 			const NppGUI & nppGUI = nppParam.getNppGUI();
; 1553 : 			_mainEditView.execute(SCI_SETCARETPERIOD, nppGUI._caretBlinkRate);

  019a8	4d 63 85 f8 03
	00 00		 movsxd	 r8, DWORD PTR [r13+1016]
  019af	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  019b6	45 33 c9	 xor	 r9d, r9d
  019b9	ba 1c 08 00 00	 mov	 edx, 2076		; 0000081cH
  019be	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1554 : 			_subEditView.execute(SCI_SETCARETPERIOD, nppGUI._caretBlinkRate);

  019c3	4d 63 85 f8 03
	00 00		 movsxd	 r8, DWORD PTR [r13+1016]
  019ca	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  019d1	45 33 c9	 xor	 r9d, r9d
  019d4	ba 1c 08 00 00	 mov	 edx, 2076		; 0000081cH
  019d9	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  019de	49 8b c4	 mov	 rax, r12
  019e1	e9 23 34 00 00	 jmp	 $LN1@process
$LN360@process:

; 1555 : 			return TRUE;
; 1556 : 		}
; 1557 : 
; 1558 : 		case NPPM_INTERNAL_ISTABBARREDUCED:
; 1559 : 		{
; 1560 : 			return _toReduceTabBar?TRUE:FALSE;

  019e6	44 38 b3 38 0c
	00 00		 cmp	 BYTE PTR [rbx+3128], r14b
  019ed	41 0f 95 c6	 setne	 r14b
  019f1	49 8b c6	 mov	 rax, r14
  019f4	e9 10 34 00 00	 jmp	 $LN1@process
$LN386@process:

; 1692 : 				return TRUE;
; 1693 : 			}
; 1694 : 			return FALSE;
; 1695 : 		}
; 1696 : 
; 1697 : 		case NPPM_INTERNAL_RELOADSCROLLTOEND:
; 1698 : 		{
; 1699 : 			Buffer *buf = reinterpret_cast<Buffer *>(wParam);
; 1700 : 			buf->reload();

  019f9	49 8b cf	 mov	 rcx, r15
  019fc	e8 00 00 00 00	 call	 ?reload@Buffer@@QEAAXXZ	; Buffer::reload

; 2748 : }

  01a01	49 8b c4	 mov	 rax, r12
  01a04	e9 00 34 00 00	 jmp	 $LN1@process
$LN387@process:

; 1701 : 			return TRUE;
; 1702 : 		}
; 1703 : 
; 1704 : 		case NPPM_INTERNAL_STOPMONITORING:
; 1705 : 		{
; 1706 : 			Buffer *buf = reinterpret_cast<Buffer *>(wParam);
; 1707 : 			monitoringStartOrStopAndUpdateUI(buf, false);

  01a09	45 33 c0	 xor	 r8d, r8d
  01a0c	49 8b d7	 mov	 rdx, r15
  01a0f	48 8b cb	 mov	 rcx, rbx
  01a12	e8 00 00 00 00	 call	 ?monitoringStartOrStopAndUpdateUI@Notepad_plus@@AEAAXPEAVBuffer@@_N@Z ; Notepad_plus::monitoringStartOrStopAndUpdateUI

; 2748 : }

  01a17	49 8b c4	 mov	 rax, r12
  01a1a	e9 ea 33 00 00	 jmp	 $LN1@process
$LN451@process:

; 2060 : 			return TRUE;
; 2061 : 		}
; 2062 : 
; 2063 : 		case NPPM_INTERNAL_MINIMIZED_TRAY:
; 2064 : 		{
; 2065 : 			switch (lParam)

  01a1f	48 81 ee 02 02
	00 00		 sub	 rsi, 514		; 00000202H
  01a26	0f 84 a7 00 00
	00		 je	 $LN452@process
  01a2c	48 83 ee 03	 sub	 rsi, 3
  01a30	74 1f		 je	 SHORT $LN455@process
  01a32	48 83 fe 03	 cmp	 rsi, 3
  01a36	0f 85 c6 f6 ff
	ff		 jne	 $LN2695@process

; 2078 : 					return TRUE;
; 2079 : 				}
; 2080 : 
; 2081 : 				case WM_MBUTTONUP:
; 2082 : 				{
; 2083 : 					command(IDM_SYSTRAYPOPUP_NEW_AND_PASTE);

  01a3c	ba 5f a8 00 00	 mov	 edx, 43103		; 0000a85fH
  01a41	48 8b cb	 mov	 rcx, rbx
  01a44	e8 00 00 00 00	 call	 ?command@Notepad_plus@@AEAAXH@Z ; Notepad_plus::command

; 2748 : }

  01a49	49 8b c4	 mov	 rax, r12
  01a4c	e9 b8 33 00 00	 jmp	 $LN1@process
$LN455@process:

; 2084 : 					return TRUE;
; 2085 : 				}
; 2086 : 
; 2087 : 				case WM_RBUTTONUP:
; 2088 : 				{
; 2089 : 					POINT p;
; 2090 : 					GetCursorPos(&p);

  01a51	48 8d 4c 24 48	 lea	 rcx, QWORD PTR p$3[rsp]
  01a56	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCursorPos

; 2091 : 
; 2092 : 					HMENU hmenu;            // menu template
; 2093 : 					HMENU hTrayIconMenu;  // shortcut menu
; 2094 : 					hmenu = ::LoadMenu(_pPublicInterface->getHinst(), MAKEINTRESOURCE(IDR_SYSTRAYPOPUP_MENU));

  01a5c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  01a5f	ba dd 05 00 00	 mov	 edx, 1501		; 000005ddH
  01a64	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  01a68	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadMenuW
  01a6e	48 8b f8	 mov	 rdi, rax

; 2095 : 					hTrayIconMenu = ::GetSubMenu(hmenu, 0);

  01a71	33 d2		 xor	 edx, edx
  01a73	48 8b c8	 mov	 rcx, rax
  01a76	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSubMenu
  01a7c	48 8b d8	 mov	 rbx, rax

; 2096 : 					SetForegroundWindow(hwnd);

  01a7f	48 8b 74 24 50	 mov	 rsi, QWORD PTR hwnd$GSCopy$1$[rsp]
  01a84	48 8b ce	 mov	 rcx, rsi
  01a87	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetForegroundWindow

; 2097 : 					TrackPopupMenu(hTrayIconMenu, TPM_LEFTALIGN, p.x, p.y, 0, hwnd, NULL);

  01a8d	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  01a92	48 89 74 24 28	 mov	 QWORD PTR [rsp+40], rsi
  01a97	44 89 74 24 20	 mov	 DWORD PTR [rsp+32], r14d
  01a9c	44 8b 4c 24 4c	 mov	 r9d, DWORD PTR p$3[rsp+4]
  01aa1	44 8b 44 24 48	 mov	 r8d, DWORD PTR p$3[rsp]
  01aa6	33 d2		 xor	 edx, edx
  01aa8	48 8b cb	 mov	 rcx, rbx
  01aab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_TrackPopupMenu

; 2098 : 					PostMessage(hwnd, WM_NULL, 0, 0);

  01ab1	45 33 c9	 xor	 r9d, r9d
  01ab4	45 33 c0	 xor	 r8d, r8d
  01ab7	33 d2		 xor	 edx, edx
  01ab9	48 8b ce	 mov	 rcx, rsi
  01abc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostMessageW

; 2099 : 					DestroyMenu(hmenu);

  01ac2	48 8b cf	 mov	 rcx, rdi
  01ac5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyMenu

; 2748 : }

  01acb	49 8b c4	 mov	 rax, r12
  01ace	e9 36 33 00 00	 jmp	 $LN1@process
$LN452@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h

; 109  : 		::SetFocus(_hSelf);

  01ad3	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01ada	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  01ade	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetFocus
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2071 : 					::ShowWindow(hwnd, SW_SHOW);

  01ae4	be 05 00 00 00	 mov	 esi, 5
  01ae9	8b d6		 mov	 edx, esi
  01aeb	48 8b cf	 mov	 rcx, rdi
  01aee	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ShowWindow

; 2072 : 					_dockingManager.showFloatingContainers(true);

  01af4	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  01af8	41 0f b6 d4	 movzx	 edx, r12b
  01afc	e8 00 00 00 00	 call	 ?showFloatingContainers@DockingManager@@QEAAX_N@Z ; DockingManager::showFloatingContainers

; 2073 : 					restoreMinimizeDialogs();

  01b01	48 8b cb	 mov	 rcx, rbx
  01b04	e8 00 00 00 00	 call	 ?restoreMinimizeDialogs@Notepad_plus@@QEAAXXZ ; Notepad_plus::restoreMinimizeDialogs

; 2074 : 
; 2075 : 					if (!_pPublicInterface->isPrelaunch())

  01b09	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  01b0c	44 38 b0 f8 84
	09 00		 cmp	 BYTE PTR [rax+623864], r14b
  01b13	75 0f		 jne	 SHORT $LN453@process

; 2076 : 						_pTrayIco->doTrayIcon(REMOVE);

  01b15	8d 56 fd	 lea	 edx, QWORD PTR [rsi-3]
  01b18	48 8b 8b 70 7b
	09 00		 mov	 rcx, QWORD PTR [rbx+621424]
  01b1f	e8 00 00 00 00	 call	 ?doTrayIcon@trayIconControler@@QEAAHK@Z ; trayIconControler::doTrayIcon
$LN453@process:

; 2077 : 					::SendMessage(hwnd, WM_SIZE, 0, 0);

  01b24	45 33 c9	 xor	 r9d, r9d
  01b27	45 33 c0	 xor	 r8d, r8d
  01b2a	8b d6		 mov	 edx, esi
  01b2c	48 8b cf	 mov	 rcx, rdi
  01b2f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 2748 : }

  01b35	49 8b c4	 mov	 rax, r12
  01b38	e9 cc 32 00 00	 jmp	 $LN1@process
$LN506@process:

; 2373 : 		}
; 2374 : 
; 2375 : 		case NPPM_INTERNAL_ISFOCUSEDTAB:
; 2376 : 		{
; 2377 : 			HWND hTabToTest = (currentView() == MAIN_VIEW)?_mainDocTab.getHSelf():_subDocTab.getHSelf();

  01b3d	44 39 b3 d4 84
	09 00		 cmp	 DWORD PTR [rbx+623828], r14d
  01b44	75 16		 jne	 SHORT $LN593@process
  01b46	48 8b 83 a8 04
	00 00		 mov	 rax, QWORD PTR [rbx+1192]

; 2378 : 			return reinterpret_cast<HWND>(lParam) == hTabToTest;

  01b4d	48 3b f0	 cmp	 rsi, rax
  01b50	41 0f 94 c6	 sete	 r14b
  01b54	49 8b c6	 mov	 rax, r14
  01b57	e9 ad 32 00 00	 jmp	 $LN1@process
$LN593@process:

; 2373 : 		}
; 2374 : 
; 2375 : 		case NPPM_INTERNAL_ISFOCUSEDTAB:
; 2376 : 		{
; 2377 : 			HWND hTabToTest = (currentView() == MAIN_VIEW)?_mainDocTab.getHSelf():_subDocTab.getHSelf();

  01b5c	48 8b 83 80 05
	00 00		 mov	 rax, QWORD PTR [rbx+1408]

; 2378 : 			return reinterpret_cast<HWND>(lParam) == hTabToTest;

  01b63	48 3b f0	 cmp	 rsi, rax
  01b66	41 0f 94 c6	 sete	 r14b
  01b6a	49 8b c6	 mov	 rax, r14
  01b6d	e9 97 32 00 00	 jmp	 $LN1@process
$LN508@process:

; 2379 : 		}
; 2380 : 
; 2381 : 		case NPPM_INTERNAL_GETMENU:
; 2382 : 		{
; 2383 : 			return (LRESULT)_mainMenuHandle;
; 2384 : 		}
; 2385 : 
; 2386 : 		case NPPM_INTERNAL_CLEARINDICATOR:
; 2387 : 		{
; 2388 : 			_pEditView->clearIndicator(SCE_UNIVERSAL_FOUND_STYLE_SMART);

  01b72	ba 1d 00 00 00	 mov	 edx, 29
  01b77	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01b7e	e8 00 00 00 00	 call	 ?clearIndicator@ScintillaEditView@@QEAAXH@Z ; ScintillaEditView::clearIndicator

; 2748 : }

  01b83	49 8b c4	 mov	 rax, r12
  01b86	e9 7e 32 00 00	 jmp	 $LN1@process
$LN509@process:

; 2389 : 			return TRUE;
; 2390 : 		}
; 2391 : 
; 2392 : 		case NPPM_INTERNAL_CLEARINDICATORTAGMATCH:
; 2393 : 		{
; 2394 : 			_pEditView->clearIndicator(SCE_UNIVERSAL_TAGMATCH);

  01b8b	ba 1b 00 00 00	 mov	 edx, 27
  01b90	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01b97	e8 00 00 00 00	 call	 ?clearIndicator@ScintillaEditView@@QEAAXH@Z ; ScintillaEditView::clearIndicator
$LN510@process:

; 2748 : }

  01b9c	ba 1a 00 00 00	 mov	 edx, 26
  01ba1	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01ba8	e8 00 00 00 00	 call	 ?clearIndicator@ScintillaEditView@@QEAAXH@Z ; ScintillaEditView::clearIndicator
  01bad	49 8b c4	 mov	 rax, r12
  01bb0	e9 54 32 00 00	 jmp	 $LN1@process
$LN511@process:

; 2395 : 			_pEditView->clearIndicator(SCE_UNIVERSAL_TAGATTR);
; 2396 : 			return TRUE;
; 2397 : 		}
; 2398 : 
; 2399 : 		case NPPM_INTERNAL_CLEARINDICATORTAGATTR:
; 2400 : 		{
; 2401 : 			_pEditView->clearIndicator(SCE_UNIVERSAL_TAGATTR);
; 2402 : 			return TRUE;
; 2403 : 		}
; 2404 : 
; 2405 : 		case NPPM_INTERNAL_SWITCHVIEWFROMHWND:
; 2406 : 		{
; 2407 : 			HWND handle = reinterpret_cast<HWND>(lParam);
; 2408 : 			if (_mainEditView.getHSelf() == handle || _mainDocTab.getHSelf() == handle)

  01bb5	48 39 b3 08 07
	00 00		 cmp	 QWORD PTR [rbx+1800], rsi
  01bbc	74 22		 je	 SHORT $LN514@process
  01bbe	48 39 b3 a8 04
	00 00		 cmp	 QWORD PTR [rbx+1192], rsi
  01bc5	74 19		 je	 SHORT $LN514@process

; 2409 : 			{
; 2410 : 				switchEditViewTo(MAIN_VIEW);
; 2411 : 			}
; 2412 : 			else if (_subEditView.getHSelf() == handle || _subDocTab.getHSelf() == handle)

  01bc7	48 39 b3 68 06
	00 00		 cmp	 QWORD PTR [rbx+1640], rsi
  01bce	0f 84 a7 f1 ff
	ff		 je	 $LN516@process
  01bd4	48 39 b3 80 05
	00 00		 cmp	 QWORD PTR [rbx+1408], rsi

; 2413 : 			{
; 2414 : 				switchEditViewTo(SUB_VIEW);

  01bdb	e9 95 f1 ff ff	 jmp	 $LN2692@process
$LN514@process:

; 1036 : 			return TRUE;

  01be0	33 d2		 xor	 edx, edx
  01be2	48 8b cb	 mov	 rcx, rbx
  01be5	e8 00 00 00 00	 call	 ?switchEditViewTo@Notepad_plus@@AEAAHH@Z ; Notepad_plus::switchEditViewTo

; 2748 : }

  01bea	49 8b c4	 mov	 rax, r12
  01bed	e9 17 32 00 00	 jmp	 $LN1@process
$LN517@process:

; 2415 : 			}
; 2416 : 			return TRUE;
; 2417 : 		}
; 2418 : 
; 2419 : 		case NPPM_INTERNAL_UPDATETITLEBAR:
; 2420 : 		{
; 2421 : 			setTitle();

  01bf2	48 8b cb	 mov	 rcx, rbx
  01bf5	e8 00 00 00 00	 call	 ?setTitle@Notepad_plus@@QEAAXXZ ; Notepad_plus::setTitle

; 2748 : }

  01bfa	49 8b c4	 mov	 rax, r12
  01bfd	e9 07 32 00 00	 jmp	 $LN1@process
$LN518@process:

; 2422 : 			return TRUE;
; 2423 : 		}
; 2424 : 
; 2425 : 		case NPPM_INTERNAL_DISABLEAUTOUPDATE:
; 2426 : 		{
; 2427 : 			//printStr(TEXT("you've got me"));
; 2428 : 			NppGUI & nppGUI = nppParam.getNppGUI();
; 2429 : 			nppGUI._autoUpdateOpt._doAutoUpdate = false;

  01c02	45 88 b5 e0 03
	00 00		 mov	 BYTE PTR [r13+992], r14b

; 2748 : }

  01c09	49 8b c4	 mov	 rax, r12
  01c0c	e9 f8 31 00 00	 jmp	 $LN1@process
$LN538@process:

; 2515 : 		}
; 2516 : 
; 2517 : 		//
; 2518 : 		// These are sent by Preferences Dialog
; 2519 : 		//
; 2520 : 		case NPPM_INTERNAL_SETTING_HISTORY_SIZE:
; 2521 : 		{
; 2522 : 			_lastRecentFileList.setUserMaxNbLRF(nppParam.getNbMaxRecentFile());

  01c11	48 8d 8b f8 79
	09 00		 lea	 rcx, QWORD PTR [rbx+621048]
  01c18	41 8b 95 fc 0c
	00 00		 mov	 edx, DWORD PTR [r13+3324]
  01c1f	e8 00 00 00 00	 call	 ?setUserMaxNbLRF@LastRecentFileList@@QEAAXH@Z ; LastRecentFileList::setUserMaxNbLRF

; 2523 : 			break;

  01c24	e9 c3 31 00 00	 jmp	 $LN299@process
$LN539@process:

; 2524 : 		}
; 2525 : 
; 2526 : 		case NPPM_INTERNAL_EDGEMULTISETSIZE:
; 2527 : 		{
; 2528 : 			_mainEditView.execute(SCI_MULTIEDGECLEARALL);

  01c29	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01c30	45 33 c9	 xor	 r9d, r9d
  01c33	45 33 c0	 xor	 r8d, r8d
  01c36	ba 87 0a 00 00	 mov	 edx, 2695		; 00000a87H
  01c3b	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2529 : 			_subEditView.execute(SCI_MULTIEDGECLEARALL);

  01c40	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  01c47	45 33 c9	 xor	 r9d, r9d
  01c4a	45 33 c0	 xor	 r8d, r8d
  01c4d	ba 87 0a 00 00	 mov	 edx, 2695		; 00000a87H
  01c52	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2530 : 
; 2531 : 			ScintillaViewParams &svp = const_cast<ScintillaViewParams &>(nppParam.getSVP());
; 2532 : 
; 2533 : 			StyleArray & stylers = NppParameters::getInstance().getMiscStylerArray();

  01c57	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  01c5c	4c 8b e0	 mov	 r12, rax

; 2534 : 			COLORREF multiEdgeColor = liteGrey;

  01c5f	b8 c0 c0 c0 00	 mov	 eax, 12632256		; 00c0c0c0H
  01c64	89 44 24 50	 mov	 DWORD PTR multiEdgeColor$1$[rsp], eax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 524  : 		for (int i = 0 ; i < _nbStyler ; ++i)

  01c68	41 8b fe	 mov	 edi, r14d
  01c6b	45 39 b4 24 58
	2e 03 00	 cmp	 DWORD PTR [r12+208472], r14d
  01c73	7e 49		 jle	 SHORT $LN540@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2033 : 			if ((nppgui._isMinimizedToTray || _pPublicInterface->isPrelaunch()) && (wParam == SC_MINIMIZE))

  01c75	49 8d b4 24 e0
	26 03 00	 lea	 rsi, QWORD PTR [r12+206560]
  01c7d	0f 1f 00	 npad	 3
$LL2343@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 526  : 			if (!lstrcmp(_styleArray[i]._styleDesc, name))

  01c80	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BI@KEEMGJFF@?$AAE?$AAd?$AAg?$AAe?$AA?5?$AAc?$AAo?$AAl?$AAo?$AAu?$AAr@
  01c87	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  01c8a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcmpW
  01c90	85 c0		 test	 eax, eax
  01c92	74 12		 je	 SHORT $LN2340@process

; 524  : 		for (int i = 0 ; i < _nbStyler ; ++i)

  01c94	ff c7		 inc	 edi
  01c96	48 83 c6 40	 add	 rsi, 64			; 00000040H
  01c9a	41 3b bc 24 58
	2e 03 00	 cmp	 edi, DWORD PTR [r12+208472]
  01ca2	7c dc		 jl	 SHORT $LL2343@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1321 : 							|| ((deltaCurrLine == 0) && (currLine == 0) && ((deltaLastLine >= 0) || cursorMovedUp)))

  01ca4	eb 18		 jmp	 SHORT $LN540@process
$LN2340@process:

; 2535 : 			int i = stylers.getStylerIndexByName(TEXT("Edge colour"));
; 2536 : 			if (i != -1)

  01ca6	83 ff ff	 cmp	 edi, -1
  01ca9	74 13		 je	 SHORT $LN540@process

; 2537 : 			{
; 2538 : 				Style & style = stylers.getStyler(i);

  01cab	48 63 c7	 movsxd	 rax, edi
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 495  : 		return _styleArray[index];

  01cae	48 c1 e0 06	 shl	 rax, 6
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2539 : 				multiEdgeColor = style._fgColor;

  01cb2	42 8b 84 20 e8
	26 03 00	 mov	 eax, DWORD PTR [rax+r12+206568]
  01cba	89 44 24 50	 mov	 DWORD PTR multiEdgeColor$1$[rsp], eax
$LN540@process:

; 2540 : 			}
; 2541 : 
; 2542 : 			const size_t twoPower13 = 8192;
; 2543 : 			size_t nbColAdded = 0;

  01cbe	49 8b c6	 mov	 rax, r14
  01cc1	48 89 44 24 70	 mov	 QWORD PTR nbColAdded$1$[rsp], rax

; 2544 : 			for (auto i : svp._edgeMultiColumnPos)

  01cc6	49 8b 8d b8 08
	00 00		 mov	 rcx, QWORD PTR [r13+2232]
  01ccd	48 89 4c 24 78	 mov	 QWORD PTR <end>$L0$1$[rsp], rcx
  01cd2	49 8b b5 b0 08
	00 00		 mov	 rsi, QWORD PTR [r13+2224]
  01cd9	48 3b f1	 cmp	 rsi, rcx
  01cdc	0f 84 cf 00 00
	00		 je	 $LN542@process
  01ce2	44 8b 74 24 50	 mov	 r14d, DWORD PTR multiEdgeColor$1$[rsp]
  01ce7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL63@process:
  01cf0	4c 8b 26	 mov	 r12, QWORD PTR [rsi]

; 2545 : 			{
; 2546 : 				// it's absurd to set columns beyon 8000, even it's a long line.
; 2547 : 				// So let's ignore all the number greater than 2^13
; 2548 : 				if (i > twoPower13)

  01cf3	49 81 fc 00 20
	00 00		 cmp	 r12, 8192		; 00002000H
  01cfa	77 40		 ja	 SHORT $LN61@process

; 2549 : 					continue;
; 2550 : 
; 2551 : 				_mainEditView.execute(SCI_MULTIEDGEADDLINE, i, multiEdgeColor);

  01cfc	4d 8b ce	 mov	 r9, r14
  01cff	4d 8b c4	 mov	 r8, r12
  01d02	ba 86 0a 00 00	 mov	 edx, 2694		; 00000a86H
  01d07	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01d0e	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2552 : 				_subEditView.execute(SCI_MULTIEDGEADDLINE, i, multiEdgeColor);

  01d13	4d 8b ce	 mov	 r9, r14
  01d16	4d 8b c4	 mov	 r8, r12
  01d19	ba 86 0a 00 00	 mov	 edx, 2694		; 00000a86H
  01d1e	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  01d25	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2553 : 
; 2554 : 				++nbColAdded;

  01d2a	48 8b 44 24 70	 mov	 rax, QWORD PTR nbColAdded$1$[rsp]
  01d2f	48 ff c0	 inc	 rax
  01d32	48 89 44 24 70	 mov	 QWORD PTR nbColAdded$1$[rsp], rax
  01d37	48 8b 4c 24 78	 mov	 rcx, QWORD PTR <end>$L0$1$[rsp]
$LN61@process:

; 2544 : 			for (auto i : svp._edgeMultiColumnPos)

  01d3c	48 83 c6 08	 add	 rsi, 8
  01d40	48 3b f1	 cmp	 rsi, rcx
  01d43	75 ab		 jne	 SHORT $LL63@process

; 2555 : 			}
; 2556 : 
; 2557 : 			int mode;
; 2558 : 			switch (nbColAdded)

  01d45	48 85 c0	 test	 rax, rax
  01d48	41 be 00 00 00
	00		 mov	 r14d, 0
  01d4e	4c 8b 7c 24 68	 mov	 r15, QWORD PTR $T7[rsp]
  01d53	74 5c		 je	 SHORT $LN542@process
  01d55	48 83 f8 01	 cmp	 rax, 1
  01d59	74 07		 je	 SHORT $LN543@process
$LN544@process:

; 2573 : 					else
; 2574 : 					{
; 2575 : 						mode = EDGE_MULTILINE;
; 2576 : 					}
; 2577 : 					break;
; 2578 : 				}
; 2579 : 				default:
; 2580 : 					mode = EDGE_MULTILINE;
; 2581 : 			}
; 2582 : 
; 2583 : 			_mainEditView.execute(SCI_SETEDGEMODE, mode);

  01d5b	bf 03 00 00 00	 mov	 edi, 3
  01d60	eb 52		 jmp	 SHORT $LN2686@process
$LN543@process:

; 2563 : 					break;
; 2564 : 				}
; 2565 : 				case 1:
; 2566 : 				{
; 2567 : 					if (svp._isEdgeBgMode)

  01d62	45 38 b5 a9 08
	00 00		 cmp	 BYTE PTR [r13+2217], r14b
  01d69	74 f0		 je	 SHORT $LN544@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01d6b	4d 8b 85 b0 08
	00 00		 mov	 r8, QWORD PTR [r13+2224]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2570 : 						_mainEditView.execute(SCI_SETEDGECOLUMN, svp._edgeMultiColumnPos[0]);

  01d72	45 33 c9	 xor	 r9d, r9d
  01d75	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  01d78	ba 39 09 00 00	 mov	 edx, 2361		; 00000939H
  01d7d	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01d84	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01d89	4d 8b 85 b0 08
	00 00		 mov	 r8, QWORD PTR [r13+2224]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2571 : 						_subEditView.execute(SCI_SETEDGECOLUMN, svp._edgeMultiColumnPos[0]);

  01d90	45 33 c9	 xor	 r9d, r9d
  01d93	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  01d96	ba 39 09 00 00	 mov	 edx, 2361		; 00000939H
  01d9b	48 8d b3 50 06
	00 00		 lea	 rsi, QWORD PTR [rbx+1616]
  01da2	48 8b ce	 mov	 rcx, rsi
  01da5	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  01daa	bf 02 00 00 00	 mov	 edi, 2

; 2572 : 					}

  01daf	eb 0a		 jmp	 SHORT $LN64@process
$LN542@process:

; 2559 : 			{
; 2560 : 				case 0:
; 2561 : 				{
; 2562 : 					mode = EDGE_NONE;

  01db1	49 8b fe	 mov	 rdi, r14
$LN2686@process:

; 2573 : 					else
; 2574 : 					{
; 2575 : 						mode = EDGE_MULTILINE;
; 2576 : 					}
; 2577 : 					break;
; 2578 : 				}
; 2579 : 				default:
; 2580 : 					mode = EDGE_MULTILINE;
; 2581 : 			}
; 2582 : 
; 2583 : 			_mainEditView.execute(SCI_SETEDGEMODE, mode);

  01db4	48 8d b3 50 06
	00 00		 lea	 rsi, QWORD PTR [rbx+1616]
$LN64@process:
  01dbb	45 33 c9	 xor	 r9d, r9d
  01dbe	4c 8b c7	 mov	 r8, rdi
  01dc1	ba 3b 09 00 00	 mov	 edx, 2363		; 0000093bH
  01dc6	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01dcd	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2584 : 			_subEditView.execute(SCI_SETEDGEMODE, mode);

  01dd2	45 33 c9	 xor	 r9d, r9d
  01dd5	4c 8b c7	 mov	 r8, rdi
  01dd8	ba 3b 09 00 00	 mov	 edx, 2363		; 0000093bH
  01ddd	48 8b ce	 mov	 rcx, rsi
  01de0	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2585 : 		}
; 2586 : 		break;

  01de5	e9 02 30 00 00	 jmp	 $LN299@process
$LN547@process:

; 2587 : 
; 2588 : 		case NPPM_INTERNAL_SETTING_TAB_REPLCESPACE:
; 2589 : 		case NPPM_INTERNAL_SETTING_TAB_SIZE:
; 2590 : 		{
; 2591 : 			_pEditView->setTabSettings(_pEditView->getCurrentBuffer()->getCurrentLang());

  01dea	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01df1	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  01df5	e8 00 00 00 00	 call	 ?getCurrentLang@Buffer@@QEBAPEAULang@@XZ ; Buffer::getCurrentLang
  01dfa	48 8b d0	 mov	 rdx, rax
  01dfd	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01e04	e8 00 00 00 00	 call	 ?setTabSettings@ScintillaEditView@@QEAAXPEAULang@@@Z ; ScintillaEditView::setTabSettings

; 2592 : 			break;

  01e09	e9 de 2f 00 00	 jmp	 $LN299@process
$LN550@process:

; 2593 : 		}
; 2594 : 
; 2595 : 		case NPPM_INTERNAL_RECENTFILELIST_UPDATE:
; 2596 : 		{
; 2597 : 			_lastRecentFileList.updateMenu();
; 2598 : 			break;
; 2599 : 		}
; 2600 : 
; 2601 : 		case NPPM_INTERNAL_RECENTFILELIST_SWITCH:
; 2602 : 		{
; 2603 : 			_lastRecentFileList.switchMode();

  01e0e	48 8d 8b f8 79
	09 00		 lea	 rcx, QWORD PTR [rbx+621048]
  01e15	e8 00 00 00 00	 call	 ?switchMode@LastRecentFileList@@QEAAXXZ ; LastRecentFileList::switchMode
$LN549@process:

; 2746 : 	_pluginsManager.relayNppMessages(message, wParam, lParam);

  01e1a	48 8d 8b f8 79
	09 00		 lea	 rcx, QWORD PTR [rbx+621048]
  01e21	e8 00 00 00 00	 call	 ?updateMenu@LastRecentFileList@@QEAAXXZ ; LastRecentFileList::updateMenu
  01e26	e9 c1 2f 00 00	 jmp	 $LN299@process
$LN557@process:

; 2630 : 		}
; 2631 : 
; 2632 : 		case WM_DPICHANGED:
; 2633 : 		{
; 2634 : 			return TRUE;
; 2635 : 		}
; 2636 : 
; 2637 : 		case NPPM_INTERNAL_UPDATECLICKABLELINKS:
; 2638 : 		{
; 2639 : 			ScintillaEditView* pView = reinterpret_cast<ScintillaEditView*>(wParam);
; 2640 : 			if (pView == NULL)

  01e2b	48 8b cb	 mov	 rcx, rbx
  01e2e	4d 85 ff	 test	 r15, r15
  01e31	75 18		 jne	 SHORT $LN558@process

; 2641 : 			{
; 2642 : 				addHotSpot(_pEditView);

  01e33	48 8b 93 d0 08
	00 00		 mov	 rdx, QWORD PTR [rbx+2256]
  01e3a	e8 00 00 00 00	 call	 ?addHotSpot@Notepad_plus@@AEAAXPEAVScintillaEditView@@@Z ; Notepad_plus::addHotSpot

; 2643 : 				addHotSpot(_pNonEditView);

  01e3f	48 8b 93 d8 08
	00 00		 mov	 rdx, QWORD PTR [rbx+2264]
  01e46	48 8b cb	 mov	 rcx, rbx

; 2644 : 			}

  01e49	eb 03		 jmp	 SHORT $LN2687@process
$LN558@process:

; 2645 : 			else
; 2646 : 			{
; 2647 : 				addHotSpot(pView);

  01e4b	49 8b d7	 mov	 rdx, r15
$LN2687@process:

; 2648 : 			}
; 2649 : 		}
; 2650 : 
; 2651 : 		case NPPM_INTERNAL_UPDATETEXTZONEPADDING:
; 2652 : 		{
; 2653 : 			ScintillaViewParams &svp = const_cast<ScintillaViewParams &>(nppParam.getSVP());
; 2654 : 			if (_beforeSpecialView._isDistractionFree)

  01e4e	e8 00 00 00 00	 call	 ?addHotSpot@Notepad_plus@@AEAAXPEAVScintillaEditView@@@Z ; Notepad_plus::addHotSpot
$LN559@process:
  01e53	44 38 b3 8a 7a
	09 00		 cmp	 BYTE PTR [rbx+621194], r14b
  01e5a	74 58		 je	 SHORT $LN561@process

; 2655 : 			{
; 2656 : 				int paddingLen = svp.getDistractionFreePadding(_pEditView->getWidth());

  01e5c	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01e63	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  01e66	ff 50 48	 call	 QWORD PTR [rax+72]
  01e69	44 8b c0	 mov	 r8d, eax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 971  : 		int diviser = _distractionFreeDivPart > 2 ? _distractionFreeDivPart : defaultDiviser;

  01e6c	41 0f b6 8d df
	08 00 00	 movzx	 ecx, BYTE PTR [r13+2271]
  01e74	80 f9 02	 cmp	 cl, 2
  01e77	77 05		 ja	 SHORT $LN2357@process
  01e79	b9 04 00 00 00	 mov	 ecx, 4
$LN2357@process:

; 972  : 		int paddingLen = editViewWidth / diviser;

  01e7e	99		 cdq
  01e7f	f7 f9		 idiv	 ecx

; 973  : 		if (paddingLen <= 0)

  01e81	85 c0		 test	 eax, eax
  01e83	7f 0c		 jg	 SHORT $LN2354@process

; 974  : 			paddingLen = editViewWidth / defaultDiviser;

  01e85	41 8b c0	 mov	 eax, r8d
  01e88	99		 cdq
  01e89	83 e2 03	 and	 edx, 3
  01e8c	03 c2		 add	 eax, edx
  01e8e	c1 f8 02	 sar	 eax, 2
$LN2354@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2657 : 				_pEditView->execute(SCI_SETMARGINLEFT, 0, paddingLen);

  01e91	48 63 f8	 movsxd	 rdi, eax
  01e94	4c 8b cf	 mov	 r9, rdi
  01e97	45 33 c0	 xor	 r8d, r8d
  01e9a	ba 6b 08 00 00	 mov	 edx, 2155		; 0000086bH
  01e9f	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01ea6	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2658 : 				_pEditView->execute(SCI_SETMARGINRIGHT, 0, paddingLen);

  01eab	48 8b 9b d0 08
	00 00		 mov	 rbx, QWORD PTR [rbx+2256]

; 2659 : 			}

  01eb2	eb 5f		 jmp	 SHORT $LN562@process
$LN561@process:

; 2660 : 			else
; 2661 : 			{
; 2662 : 				_mainEditView.execute(SCI_SETMARGINLEFT, 0, svp._paddingLeft);

  01eb4	45 0f b6 8d dd
	08 00 00	 movzx	 r9d, BYTE PTR [r13+2269]
  01ebc	45 33 c0	 xor	 r8d, r8d
  01ebf	ba 6b 08 00 00	 mov	 edx, 2155		; 0000086bH
  01ec4	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01ecb	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2663 : 				_mainEditView.execute(SCI_SETMARGINRIGHT, 0, svp._paddingRight);

  01ed0	45 0f b6 8d de
	08 00 00	 movzx	 r9d, BYTE PTR [r13+2270]
  01ed8	45 33 c0	 xor	 r8d, r8d
  01edb	ba 6d 08 00 00	 mov	 edx, 2157		; 0000086dH
  01ee0	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  01ee7	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2664 : 				_subEditView.execute(SCI_SETMARGINLEFT, 0, svp._paddingLeft);

  01eec	48 81 c3 50 06
	00 00		 add	 rbx, 1616		; 00000650H
  01ef3	45 0f b6 8d dd
	08 00 00	 movzx	 r9d, BYTE PTR [r13+2269]
  01efb	45 33 c0	 xor	 r8d, r8d
  01efe	ba 6b 08 00 00	 mov	 edx, 2155		; 0000086bH
  01f03	48 8b cb	 mov	 rcx, rbx
  01f06	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2665 : 				_subEditView.execute(SCI_SETMARGINRIGHT, 0, svp._paddingRight);

  01f0b	41 0f b6 bd de
	08 00 00	 movzx	 edi, BYTE PTR [r13+2270]
$LN562@process:

; 2666 : 			}
; 2667 : 			return TRUE;

  01f13	4c 8b cf	 mov	 r9, rdi
  01f16	45 33 c0	 xor	 r8d, r8d
  01f19	ba 6d 08 00 00	 mov	 edx, 2157		; 0000086dH
  01f1e	48 8b cb	 mov	 rcx, rbx
  01f21	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  01f26	49 8b c4	 mov	 rax, r12
  01f29	e9 db 2e 00 00	 jmp	 $LN1@process
$LN231@process:

; 926  : 		}
; 927  : 
; 928  : 		case NPPM_GETCURRENTSCINTILLA:
; 929  : 		{
; 930  : 			int *id = reinterpret_cast<int *>(lParam);
; 931  : 			if (_pEditView == &_mainEditView)

  01f2e	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01f35	48 8d 83 f0 06
	00 00		 lea	 rax, QWORD PTR [rbx+1776]
  01f3c	48 3b c8	 cmp	 rcx, rax
  01f3f	75 0b		 jne	 SHORT $LN232@process

; 932  : 				*id = MAIN_VIEW;

  01f41	44 89 36	 mov	 DWORD PTR [rsi], r14d

; 2748 : }

  01f44	49 8b c4	 mov	 rax, r12
  01f47	e9 bd 2e 00 00	 jmp	 $LN1@process
$LN232@process:

; 933  : 			else if (_pEditView == &_subEditView)

  01f4c	48 81 c3 50 06
	00 00		 add	 rbx, 1616		; 00000650H
  01f53	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  01f5a	48 3b cb	 cmp	 rcx, rbx
  01f5d	41 0f 44 fc	 cmove	 edi, r12d
  01f61	89 3e		 mov	 DWORD PTR [rsi], edi

; 2748 : }

  01f63	49 8b c4	 mov	 rax, r12
  01f66	e9 9e 2e 00 00	 jmp	 $LN1@process
$LN598@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  01f6b	81 fa d1 0b 00
	00		 cmp	 edx, 3025		; 00000bd1H
  01f71	0f 87 08 1c 00
	00		 ja	 $LN601@process
  01f77	0f 84 f2 1b 00
	00		 je	 $LN95@process
  01f7d	8d 82 13 f8 ff
	ff		 lea	 eax, DWORD PTR [rdx-2029]
  01f83	83 f8 60	 cmp	 eax, 96			; 00000060H
  01f86	0f 87 a2 25 00
	00		 ja	 $LN563@process
  01f8c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  01f93	41 8b 84 80 00
	00 00 00	 mov	 eax, DWORD PTR $LN2637@process[r8+rax*4]
  01f9b	49 03 c0	 add	 rax, r8
  01f9e	ff e0		 jmp	 rax
$LN114@process:

; 317  : 		}
; 318  : 
; 319  : 		case NPPM_LAUNCHFINDINFILESDLG:
; 320  : 		{
; 321  : 			// Find in files function code should be here due to the number of parameters (2) cannot be passed via WM_COMMAND
; 322  : 			const int strSize = FINDREPLACE_MAXLENGTH;
; 323  : 			TCHAR str[strSize];
; 324  : 
; 325  : 			bool isFirstTime = !_findReplaceDlg.isCreated();

  01fa0	48 8d bb b0 0c
	00 00		 lea	 rdi, QWORD PTR [rbx+3248]
  01fa7	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  01faa	48 8b cf	 mov	 rcx, rdi
  01fad	ff 50 68	 call	 QWORD PTR [rax+104]
  01fb0	84 c0		 test	 al, al
  01fb2	41 0f 94 c6	 sete	 r14b

; 326  : 			_findReplaceDlg.doDialog(FIND_DLG, _nativeLangSpeaker.isRTL());

  01fb6	45 0f b6 cc	 movzx	 r9d, r12b
  01fba	44 0f b6 83 84
	04 00 00	 movzx	 r8d, BYTE PTR [rbx+1156]
  01fc2	33 d2		 xor	 edx, edx
  01fc4	48 8b cf	 mov	 rcx, rdi
  01fc7	e8 00 00 00 00	 call	 ?doDialog@FindReplaceDlg@@QEAAXW4DIALOG_TYPE@@_N1@Z ; FindReplaceDlg::doDialog

; 327  : 			
; 328  : 			const NppGUI & nppGui = nppParam.getNppGUI();
; 329  : 			if (!nppGui._stopFillingFindField)

  01fcc	41 80 bd ec 00
	00 00 00	 cmp	 BYTE PTR [r13+236], 0
  01fd4	75 2c		 jne	 SHORT $LN115@process

; 330  : 			{
; 331  : 				_pEditView->getGenericSelectedText(str, strSize);

  01fd6	45 0f b6 cc	 movzx	 r9d, r12b
  01fda	41 b8 00 08 00
	00		 mov	 r8d, 2048		; 00000800H
  01fe0	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$64[rbp-256]
  01fe7	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  01fee	e8 00 00 00 00	 call	 ?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z ; ScintillaEditView::getGenericSelectedText

; 332  : 				_findReplaceDlg.setSearchText(str);

  01ff3	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$64[rbp-256]
  01ffa	48 8b cf	 mov	 rcx, rdi
  01ffd	e8 00 00 00 00	 call	 ?setSearchText@FindReplaceDlg@@QEAAXPEA_W@Z ; FindReplaceDlg::setSearchText
$LN115@process:

; 333  : 			}
; 334  : 
; 335  : 			if (isFirstTime)

  02002	45 84 f6	 test	 r14b, r14b
  02005	74 0f		 je	 SHORT $LN116@process

; 336  : 				_nativeLangSpeaker.changeFindReplaceDlgLang(_findReplaceDlg);

  02007	48 8d 8b 78 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1144]
  0200e	48 8b d7	 mov	 rdx, rdi
  02011	e8 00 00 00 00	 call	 ?changeFindReplaceDlgLang@NativeLangSpeaker@@QEAAXAEAVFindReplaceDlg@@@Z ; NativeLangSpeaker::changeFindReplaceDlgLang
$LN116@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h

; 275  : 		doDialog(FINDINFILES_DLG);

  02016	45 0f b6 cc	 movzx	 r9d, r12b
  0201a	45 33 c0	 xor	 r8d, r8d
  0201d	41 8d 50 02	 lea	 edx, QWORD PTR [r8+2]
  02021	48 8b cf	 mov	 rcx, rdi
  02024	e8 00 00 00 00	 call	 ?doDialog@FindReplaceDlg@@QEAAXW4DIALOG_TYPE@@_N1@Z ; FindReplaceDlg::doDialog
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 338  : 			setFindReplaceFolderFilter(reinterpret_cast<const TCHAR*>(wParam), reinterpret_cast<const TCHAR*>(lParam));

  02029	4c 8b c6	 mov	 r8, rsi
  0202c	49 8b d7	 mov	 rdx, r15
  0202f	48 8b cb	 mov	 rcx, rbx
  02032	e8 00 00 00 00	 call	 ?setFindReplaceFolderFilter@Notepad_plus@@QEAAXPEB_W0@Z ; Notepad_plus::setFindReplaceFolderFilter

; 339  : 
; 340  : 			return TRUE;

  02037	49 8b c4	 mov	 rax, r12
  0203a	e9 ca 2d 00 00	 jmp	 $LN1@process
$LN124@process:

; 386  : 			break;
; 387  : 		}
; 388  : 
; 389  : 		case NPPM_INTERNAL_SETFILENAME:
; 390  : 		{
; 391  : 			if (!lParam && !wParam)

  0203f	48 85 f6	 test	 rsi, rsi
  02042	75 09		 jne	 SHORT $LN125@process
  02044	4d 85 ff	 test	 r15, r15
  02047	0f 84 6a e1 ff
	ff		 je	 $LN2622@process
$LN125@process:

; 392  : 				return FALSE;
; 393  : 			BufferID id = (BufferID)wParam;
; 394  : 			Buffer * b = MainFileManager.getBufferByID(id);

  0204d	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 395  : 			if (b && b->getStatus() == DOC_UNNAMED)

  02052	4d 85 ff	 test	 r15, r15
  02055	0f 84 5c e1 ff
	ff		 je	 $LN2622@process
  0205b	41 83 bf a0 00
	00 00 02	 cmp	 DWORD PTR [r15+160], 2
  02063	0f 85 4e e1 ff
	ff		 jne	 $LN2622@process

; 396  : 			{
; 397  : 				b->setFileName(reinterpret_cast<const TCHAR*>(lParam));

  02069	45 33 c0	 xor	 r8d, r8d
  0206c	48 8b d6	 mov	 rdx, rsi
  0206f	49 8b cf	 mov	 rcx, r15
  02072	e8 00 00 00 00	 call	 ?setFileName@Buffer@@QEAAXPEB_WW4LangType@@@Z ; Buffer::setFileName

; 398  : 				return TRUE;

  02077	49 8b c4	 mov	 rax, r12
  0207a	e9 8a 2d 00 00	 jmp	 $LN1@process
$LN127@process:

; 399  : 			}
; 400  : 			return FALSE;
; 401  : 		}
; 402  : 
; 403  : 		case NPPM_GETBUFFERLANGTYPE:
; 404  : 		{
; 405  : 			if (!wParam)

  0207f	4d 85 ff	 test	 r15, r15
  02082	0f 84 9e 10 00
	00		 je	 $LN394@process

; 406  : 				return -1;
; 407  : 			BufferID id = (BufferID)wParam;
; 408  : 			Buffer * b = MainFileManager.getBufferByID(id);

  02088	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 409  : 			return b->getLangType();

  0208d	49 63 47 20	 movsxd	 rax, DWORD PTR [r15+32]
  02091	e9 73 2d 00 00	 jmp	 $LN1@process
$LN129@process:

; 410  : 		}
; 411  : 
; 412  : 		case NPPM_SETBUFFERLANGTYPE:
; 413  : 		{
; 414  : 			if (!wParam)

  02096	4d 85 ff	 test	 r15, r15
  02099	0f 84 18 e1 ff
	ff		 je	 $LN2622@process

; 415  : 				return FALSE;
; 416  : 			if (lParam < L_TEXT || lParam >= L_EXTERNAL || lParam == L_USER)

  0209f	48 85 f6	 test	 rsi, rsi
  020a2	0f 88 0f e1 ff
	ff		 js	 $LN2622@process
  020a8	48 83 fe 55	 cmp	 rsi, 85			; 00000055H
  020ac	0f 8d 05 e1 ff
	ff		 jge	 $LN2622@process
  020b2	48 83 fe 0f	 cmp	 rsi, 15
  020b6	0f 84 fb e0 ff
	ff		 je	 $LN2622@process

; 417  : 				return FALSE;
; 418  : 
; 419  : 			BufferID id = (BufferID)wParam;
; 420  : 			Buffer * b = MainFileManager.getBufferByID(id);

  020bc	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 421  : 			b->setLangType((LangType)lParam);

  020c1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_11LOCGONAA@@
  020c8	48 8b d6	 mov	 rdx, rsi
  020cb	49 8b cf	 mov	 rcx, r15
  020ce	e8 00 00 00 00	 call	 ?setLangType@Buffer@@QEAAXW4LangType@@PEB_W@Z ; Buffer::setLangType

; 422  : 			return TRUE;

  020d3	49 8b c4	 mov	 rax, r12
  020d6	e9 2e 2d 00 00	 jmp	 $LN1@process
$LN133@process:

; 423  : 		}
; 424  : 
; 425  : 		case NPPM_GETBUFFERENCODING:
; 426  : 		{
; 427  : 			if (!wParam)

  020db	4d 85 ff	 test	 r15, r15
  020de	0f 84 42 10 00
	00		 je	 $LN394@process

; 428  : 				return -1;
; 429  : 			BufferID id = (BufferID)wParam;
; 430  : 			Buffer * b = MainFileManager.getBufferByID(id);

  020e4	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 431  : 			return b->getUnicodeMode();

  020e9	49 63 47 4c	 movsxd	 rax, DWORD PTR [r15+76]
  020ed	e9 17 2d 00 00	 jmp	 $LN1@process
$LN135@process:

; 432  : 		}
; 433  : 
; 434  : 		case NPPM_SETBUFFERENCODING:
; 435  : 		{
; 436  : 			if (!wParam)

  020f2	4d 85 ff	 test	 r15, r15
  020f5	0f 84 bc e0 ff
	ff		 je	 $LN2622@process

; 437  : 				return FALSE;
; 438  : 			if (lParam < uni8Bit || lParam >= uniEnd)

  020fb	48 85 f6	 test	 rsi, rsi
  020fe	0f 88 b3 e0 ff
	ff		 js	 $LN2622@process
  02104	48 83 fe 08	 cmp	 rsi, 8
  02108	0f 8d a9 e0 ff
	ff		 jge	 $LN2622@process

; 439  : 				return FALSE;
; 440  : 
; 441  : 			BufferID id = (BufferID)wParam;
; 442  : 			Buffer * b = MainFileManager.getBufferByID(id);

  0210e	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 443  : 			if (b->getStatus() != DOC_UNNAMED || b->isDirty())	//do not allow to change the encoding if the file has any content

  02113	41 83 bf a0 00
	00 00 02	 cmp	 DWORD PTR [r15+160], 2
  0211b	0f 85 96 e0 ff
	ff		 jne	 $LN2622@process
  02121	45 38 77 48	 cmp	 BYTE PTR [r15+72], r14b
  02125	0f 85 8c e0 ff
	ff		 jne	 $LN2622@process

; 444  : 				return FALSE;
; 445  : 			b->setUnicodeMode((UniMode)lParam);

  0212b	48 8b d6	 mov	 rdx, rsi
  0212e	49 8b cf	 mov	 rcx, r15
  02131	e8 00 00 00 00	 call	 ?setUnicodeMode@Buffer@@QEAAXW4UniMode@@@Z ; Buffer::setUnicodeMode

; 446  : 			return TRUE;

  02136	49 8b c4	 mov	 rax, r12
  02139	e9 cb 2c 00 00	 jmp	 $LN1@process
$LN141@process:

; 447  : 		}
; 448  : 
; 449  : 		case NPPM_GETBUFFERFORMAT:
; 450  : 		{
; 451  : 			if (!wParam)

  0213e	4d 85 ff	 test	 r15, r15
  02141	0f 84 df 0f 00
	00		 je	 $LN394@process

; 452  : 				return -1;
; 453  : 			BufferID id = (BufferID)wParam;
; 454  : 			Buffer * b = MainFileManager.getBufferByID(id);

  02147	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance

; 455  : 			return static_cast<LRESULT>(b->getEolFormat());

  0214c	41 0f b6 47 49	 movzx	 eax, BYTE PTR [r15+73]
  02151	e9 b3 2c 00 00	 jmp	 $LN1@process
$LN143@process:

; 456  : 		}
; 457  : 
; 458  : 		case NPPM_SETBUFFERFORMAT:
; 459  : 		{
; 460  : 			if (!wParam)

  02156	4d 85 ff	 test	 r15, r15
  02159	0f 84 58 e0 ff
	ff		 je	 $LN2622@process

; 461  : 				return FALSE;
; 462  : 
; 463  : 			EolType newFormat = convertIntToFormatType(static_cast<int>(lParam), EolType::unknown);

  0215f	b2 03		 mov	 dl, 3
  02161	48 8b ce	 mov	 rcx, rsi
  02164	e8 00 00 00 00	 call	 ?convertIntToFormatType@@YA?AW4EolType@@HW41@@Z ; convertIntToFormatType
  02169	0f b6 d8	 movzx	 ebx, al

; 464  : 			if (EolType::unknown == newFormat)

  0216c	3c 03		 cmp	 al, 3
  0216e	0f 84 43 e0 ff
	ff		 je	 $LN2622@process

; 465  : 			{
; 466  : 				assert(false and "invalid buffer format message");
; 467  : 				return FALSE;
; 468  : 			}
; 469  : 
; 470  : 			BufferID id = (BufferID)wParam;
; 471  : 			Buffer * b = MainFileManager.getBufferByID(id);

  02174	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\Buffer.h

; 217  : 		_eolFormat = format;

  02179	41 88 5f 49	 mov	 BYTE PTR [r15+73], bl

; 218  : 		doNotify(BufferChangeFormat);

  0217d	ba 04 00 00 00	 mov	 edx, 4
  02182	49 8b cf	 mov	 rcx, r15
  02185	e8 00 00 00 00	 call	 ?doNotify@Buffer@@AEAAXH@Z ; Buffer::doNotify
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 473  : 			return TRUE;

  0218a	49 8b c4	 mov	 rax, r12
  0218d	e9 77 2c 00 00	 jmp	 $LN1@process
$LN146@process:

; 474  : 		}
; 475  : 
; 476  : 		case NPPM_GETBUFFERIDFROMPOS:
; 477  : 		{
; 478  : 			DocTabView* pView = nullptr;
; 479  : 			if (lParam == MAIN_VIEW)

  02192	48 85 f6	 test	 rsi, rsi
  02195	75 09		 jne	 SHORT $LN147@process

; 480  : 				pView = &_mainDocTab;

  02197	48 8d 8b 90 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1168]
  0219e	eb 10		 jmp	 SHORT $LN150@process
$LN147@process:

; 481  : 			else if (lParam == SUB_VIEW)

  021a0	49 3b f4	 cmp	 rsi, r12
  021a3	0f 85 0e e0 ff
	ff		 jne	 $LN2622@process

; 482  : 				pView = &_subDocTab;

  021a9	48 8d 8b 68 05
	00 00		 lea	 rcx, QWORD PTR [rbx+1384]
$LN150@process:

; 483  : 			else
; 484  : 				return reinterpret_cast<LRESULT>(BUFFER_INVALID);
; 485  : 
; 486  : 			if ((size_t)wParam < pView->nbItem())

  021b0	4c 3b 79 20	 cmp	 r15, QWORD PTR [rcx+32]
  021b4	0f 83 fd df ff
	ff		 jae	 $LN2622@process

; 487  : 				return reinterpret_cast<LRESULT>(pView->getBufferByIndex(wParam));

  021ba	49 8b d7	 mov	 rdx, r15
  021bd	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  021c2	e9 42 2c 00 00	 jmp	 $LN1@process
$LN152@process:

; 488  : 
; 489  : 			return reinterpret_cast<LRESULT>(BUFFER_INVALID);
; 490  : 		}
; 491  : 
; 492  : 		case NPPM_GETCURRENTBUFFERID:
; 493  : 		{
; 494  : 			return reinterpret_cast<LRESULT>(_pEditView->getCurrentBufferID());

  021c7	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  021ce	48 8b 40 38	 mov	 rax, QWORD PTR [rax+56]
  021d2	e9 32 2c 00 00	 jmp	 $LN1@process
$LN153@process:

; 495  : 		}
; 496  : 
; 497  : 		case NPPM_RELOADBUFFERID:
; 498  : 		{
; 499  : 			if (!wParam)

  021d7	4d 85 ff	 test	 r15, r15
  021da	0f 84 d7 df ff
	ff		 je	 $LN2622@process

; 500  : 				return FALSE;
; 501  : 			return doReload(reinterpret_cast<BufferID>(wParam), lParam != 0);

  021e0	48 85 f6	 test	 rsi, rsi
  021e3	41 0f 95 c0	 setne	 r8b
  021e7	49 8b d7	 mov	 rdx, r15
  021ea	48 8b cb	 mov	 rcx, rbx
  021ed	e8 00 00 00 00	 call	 ?doReload@Notepad_plus@@QEAA_NPEAVBuffer@@_N@Z ; Notepad_plus::doReload
  021f2	0f b6 c0	 movzx	 eax, al
  021f5	e9 0f 2c 00 00	 jmp	 $LN1@process
$LN155@process:

; 502  : 		}
; 503  : 
; 504  : 		case NPPM_RELOADFILE:
; 505  : 		{
; 506  : 			BufferID id = MainFileManager.getBufferFromName(reinterpret_cast<const TCHAR *>(lParam));

  021fa	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  021ff	48 8b c8	 mov	 rcx, rax
  02202	48 8b d6	 mov	 rdx, rsi
  02205	e8 00 00 00 00	 call	 ?getBufferFromName@FileManager@@QEAAPEAVBuffer@@PEB_W@Z ; FileManager::getBufferFromName

; 507  : 			if (id != BUFFER_INVALID)

  0220a	48 85 c0	 test	 rax, rax
  0220d	0f 84 d9 2b 00
	00		 je	 $LN299@process

; 508  : 				doReload(id, wParam != 0);

  02213	4d 85 ff	 test	 r15, r15
  02216	41 0f 95 c0	 setne	 r8b
  0221a	48 8b d0	 mov	 rdx, rax
  0221d	48 8b cb	 mov	 rcx, rbx
  02220	e8 00 00 00 00	 call	 ?doReload@Notepad_plus@@QEAA_NPEAVBuffer@@_N@Z ; Notepad_plus::doReload

; 509  : 			break;

  02225	e9 c2 2b 00 00	 jmp	 $LN299@process
$LN157@process:

; 510  : 		}
; 511  : 
; 512  : 		case NPPM_SWITCHTOFILE :
; 513  : 		{
; 514  : 			BufferID id = MainFileManager.getBufferFromName(reinterpret_cast<const TCHAR *>(lParam));

  0222a	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  0222f	48 8b c8	 mov	 rcx, rax
  02232	48 8b d6	 mov	 rdx, rsi
  02235	e8 00 00 00 00	 call	 ?getBufferFromName@FileManager@@QEAAPEAVBuffer@@PEB_W@Z ; FileManager::getBufferFromName

; 515  : 			if (id != BUFFER_INVALID)

  0223a	48 85 c0	 test	 rax, rax
  0223d	0f 84 74 df ff
	ff		 je	 $LN2622@process

; 516  : 				return switchToFile(id);

  02243	48 8b d0	 mov	 rdx, rax
  02246	48 8b cb	 mov	 rcx, rbx
  02249	e8 00 00 00 00	 call	 ?switchToFile@Notepad_plus@@QEAA_NPEAVBuffer@@@Z ; Notepad_plus::switchToFile
  0224e	0f b6 c0	 movzx	 eax, al
  02251	e9 b3 2b 00 00	 jmp	 $LN1@process
$LN159@process:

; 517  : 			return false;
; 518  : 		}
; 519  : 
; 520  : 		case NPPM_SAVECURRENTFILE:
; 521  : 		{
; 522  : 			return fileSave();

  02256	33 d2		 xor	 edx, edx
  02258	48 8b cb	 mov	 rcx, rbx
  0225b	e8 00 00 00 00	 call	 ?fileSave@Notepad_plus@@QEAA_NPEAVBuffer@@@Z ; Notepad_plus::fileSave
  02260	0f b6 c0	 movzx	 eax, al
  02263	e9 a1 2b 00 00	 jmp	 $LN1@process
$LN160@process:

; 523  : 		}
; 524  : 
; 525  : 		case NPPM_SAVECURRENTFILEAS:
; 526  : 		{
; 527  : 			BufferID currentBufferID = _pEditView->getCurrentBufferID();

  02268	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]

; 529  : 			const TCHAR *filename = reinterpret_cast<const TCHAR *>(lParam);
; 530  : 			if (!filename) return FALSE;

  0226f	48 85 f6	 test	 rsi, rsi
  02272	0f 84 3f df ff
	ff		 je	 $LN2622@process

; 528  : 			bool asCopy = wParam == TRUE;

  02278	4d 3b fc	 cmp	 r15, r12
  0227b	41 0f 94 c1	 sete	 r9b

; 531  : 			return doSave(currentBufferID, filename, asCopy);

  0227f	4c 8b c6	 mov	 r8, rsi
  02282	48 8b 50 38	 mov	 rdx, QWORD PTR [rax+56]
  02286	48 8b cb	 mov	 rcx, rbx
  02289	e8 00 00 00 00	 call	 ?doSave@Notepad_plus@@QEAA_NPEAVBuffer@@PEB_W_N@Z ; Notepad_plus::doSave
  0228e	0f b6 c0	 movzx	 eax, al
  02291	e9 73 2b 00 00	 jmp	 $LN1@process
$LN162@process:

; 532  : 		}
; 533  : 
; 534  : 		case NPPM_SAVEALLFILES:
; 535  : 		{
; 536  : 			return fileSaveAll();

  02296	48 8b cb	 mov	 rcx, rbx
  02299	e8 00 00 00 00	 call	 ?fileSaveAll@Notepad_plus@@QEAA_NXZ ; Notepad_plus::fileSaveAll
  0229e	0f b6 c0	 movzx	 eax, al
  022a1	e9 63 2b 00 00	 jmp	 $LN1@process
$LN163@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  022a6	4c 89 75 a0	 mov	 QWORD PTR $T32[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  022aa	4c 89 75 b0	 mov	 QWORD PTR $T32[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  022ae	4c 89 75 b8	 mov	 QWORD PTR $T32[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  022b2	4c 89 75 b0	 mov	 QWORD PTR $T32[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  022b6	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T32[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  022be	66 44 89 75 a0	 mov	 WORD PTR $T32[rbp-256], r14w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  022c3	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  022ca	66 0f 1f 44 00
	00		 npad	 6
$LL2636@process:
  022d0	48 ff c0	 inc	 rax
  022d3	66 44 39 34 46	 cmp	 WORD PTR [rsi+rax*2], r14w
  022d8	75 f6		 jne	 SHORT $LL2636@process

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  022da	4c 8b c0	 mov	 r8, rax
  022dd	48 8b d6	 mov	 rdx, rsi
  022e0	48 8d 4d a0	 lea	 rcx, QWORD PTR $T32[rbp-256]
  022e4	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  022e9	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 541  : 			return fileSaveSpecific(reinterpret_cast<const TCHAR *>(lParam));

  022ea	48 8d 55 a0	 lea	 rdx, QWORD PTR $T32[rbp-256]
  022ee	48 8b cb	 mov	 rcx, rbx
  022f1	e8 00 00 00 00	 call	 ?fileSaveSpecific@Notepad_plus@@QEAA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; Notepad_plus::fileSaveSpecific
  022f6	0f b6 d8	 movzx	 ebx, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  022f9	48 8b 55 b8	 mov	 rdx, QWORD PTR $T32[rbp-232]
  022fd	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  02301	72 36		 jb	 SHORT $LN916@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02303	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0230b	48 8b 4d a0	 mov	 rcx, QWORD PTR $T32[rbp-256]
  0230f	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02312	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02319	72 19		 jb	 SHORT $LN915@process

; 155  :     _Bytes += _Non_user_size;

  0231b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0231f	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  02323	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02326	48 83 c0 f8	 add	 rax, -8
  0232a	48 83 f8 1f	 cmp	 rax, 31
  0232e	0f 87 6b 2b 00
	00		 ja	 $LN2716@process
$LN915@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  02334	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN916@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  02339	4c 89 75 b0	 mov	 QWORD PTR $T32[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0233d	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T32[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  02345	66 44 89 75 a0	 mov	 WORD PTR $T32[rbp-256], r14w
$LN2699@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  0234a	48 8b c3	 mov	 rax, rbx
  0234d	e9 b7 2a 00 00	 jmp	 $LN1@process
$LN164@process:

; 542  : 		}
; 543  : 
; 544  : 		case NPPM_GETCURRENTNATIVELANGENCODING:
; 545  : 		{
; 546  : 			return _nativeLangSpeaker.getLangEncoding();

  02352	48 63 83 80 04
	00 00		 movsxd	 rax, DWORD PTR [rbx+1152]
  02359	e9 ab 2a 00 00	 jmp	 $LN1@process
$LN169@process:

; 582  : 			::PostMessage(_pPublicInterface->getHSelf(), WM_COMMAND, IDM_FILE_EXIT, 0);
; 583  : 		}
; 584  : 		break;
; 585  : 
; 586  : 		case NPPM_DISABLEAUTOUPDATE:
; 587  : 		{
; 588  : 			NppGUI & nppGUI = nppParam.getNppGUI();
; 589  : 			nppGUI._autoUpdateOpt._doAutoUpdate = false;

  0235e	45 88 b5 e0 03
	00 00		 mov	 BYTE PTR [r13+992], r14b

; 590  : 			return TRUE;

  02365	49 8b c4	 mov	 rax, r12
  02368	e9 9c 2a 00 00	 jmp	 $LN1@process
$LN198@process:

; 764  : 		}
; 765  : 
; 766  : 		case NPPM_GETSHORTCUTBYCMDID:
; 767  : 		{
; 768  : 			int cmdID = static_cast<int32_t>(wParam); // cmdID
; 769  : 			ShortcutKey *sk = reinterpret_cast<ShortcutKey *>(lParam); // ShortcutKey structure
; 770  : 
; 771  : 			return _pluginsManager.getShortcutByCmdID(cmdID, sk);

  0236d	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  02374	4c 8b c6	 mov	 r8, rsi
  02377	41 8b d7	 mov	 edx, r15d
  0237a	e8 00 00 00 00	 call	 ?getShortcutByCmdID@PluginsManager@@QEAA_NHPEAUShortcutKey@@@Z ; PluginsManager::getShortcutByCmdID
  0237f	0f b6 c0	 movzx	 eax, al
  02382	e9 82 2a 00 00	 jmp	 $LN1@process
$LN199@process:

; 772  : 		}
; 773  : 
; 774  : 		case NPPM_MENUCOMMAND:
; 775  : 		{
; 776  : 			command(static_cast<int32_t>(lParam));

  02387	48 8b d6	 mov	 rdx, rsi
  0238a	48 8b cb	 mov	 rcx, rbx
  0238d	e8 00 00 00 00	 call	 ?command@Notepad_plus@@AEAAXH@Z ; Notepad_plus::command

; 2748 : }

  02392	49 8b c4	 mov	 rax, r12
  02395	e9 6f 2a 00 00	 jmp	 $LN1@process
$LN236@process:

; 934  : 				*id = SUB_VIEW;
; 935  : 			else
; 936  : 				*id = -1;
; 937  : 			return TRUE;
; 938  : 		}
; 939  : 
; 940  : 		case NPPM_GETCURRENTLANGTYPE:
; 941  : 		{
; 942  : 			*(reinterpret_cast<LangType *>(lParam)) = _pEditView->getCurrentBuffer()->getLangType();

  0239a	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  023a1	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  023a5	8b 41 20	 mov	 eax, DWORD PTR [rcx+32]
  023a8	89 06		 mov	 DWORD PTR [rsi], eax

; 2748 : }

  023aa	49 8b c4	 mov	 rax, r12
  023ad	e9 57 2a 00 00	 jmp	 $LN1@process
$LN237@process:

; 943  : 			return TRUE;
; 944  : 		}
; 945  : 
; 946  : 		case NPPM_SETCURRENTLANGTYPE:
; 947  : 		{
; 948  : 			_pEditView->getCurrentBuffer()->setLangType(static_cast<LangType>(lParam));

  023b2	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  023b9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_11LOCGONAA@@
  023c0	48 8b d6	 mov	 rdx, rsi
  023c3	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  023c7	e8 00 00 00 00	 call	 ?setLangType@Buffer@@QEAAXW4LangType@@PEB_W@Z ; Buffer::setLangType

; 2748 : }

  023cc	49 8b c4	 mov	 rax, r12
  023cf	e9 35 2a 00 00	 jmp	 $LN1@process
$LN238@process:

; 949  : 			return TRUE;
; 950  : 		}
; 951  : 
; 952  : 		case NPPM_GETNBOPENFILES:
; 953  : 		{
; 954  : 			size_t nbDocPrimary = _mainDocTab.nbItem();

  023d4	48 8b 83 b0 04
	00 00		 mov	 rax, QWORD PTR [rbx+1200]

; 955  : 			size_t nbDocSecond = _subDocTab.nbItem();

  023db	48 8b 8b 88 05
	00 00		 mov	 rcx, QWORD PTR [rbx+1416]
  023e2	48 85 f6	 test	 rsi, rsi

; 956  : 			if (lParam == ALL_OPEN_FILES)

  023e5	75 08		 jne	 SHORT $LN239@process

; 957  : 				return nbDocPrimary + nbDocSecond;

  023e7	48 03 c1	 add	 rax, rcx
  023ea	e9 1a 2a 00 00	 jmp	 $LN1@process
$LN239@process:

; 958  : 			else if (lParam == PRIMARY_VIEW)

  023ef	49 3b f4	 cmp	 rsi, r12
  023f2	0f 84 11 2a 00
	00		 je	 $LN1@process

; 959  : 				return nbDocPrimary;
; 960  : 			else if (lParam == SECOND_VIEW)

  023f8	48 83 fe 02	 cmp	 rsi, 2
  023fc	0f 84 f8 20 00
	00		 je	 $LN2704@process
$LN243@process:

; 961  : 				return nbDocSecond;
; 962  : 		}
; 963  : 
; 964  : 		case NPPM_GETOPENFILENAMESPRIMARY:
; 965  : 		case NPPM_GETOPENFILENAMESSECOND:
; 966  : 		case NPPM_GETOPENFILENAMES:
; 967  : 		{
; 968  : 			if (!wParam)

  02402	4d 85 ff	 test	 r15, r15
  02405	0f 84 ac dd ff
	ff		 je	 $LN2622@process

; 969  : 				return 0;
; 970  : 
; 971  : 			TCHAR** fileNames = reinterpret_cast<TCHAR**>(wParam);
; 972  : 			size_t nbFileNames = static_cast<size_t>(lParam);
; 973  : 
; 974  : 			size_t j = 0;

  0240b	4d 8b e6	 mov	 r12, r14

; 975  : 			if (message != NPPM_GETOPENFILENAMESSECOND)

  0240e	81 fa fa 07 00
	00		 cmp	 edx, 2042		; 000007faH
  02414	74 5d		 je	 SHORT $LN2620@process

; 976  : 			{
; 977  : 				for (size_t i = 0; i < _mainDocTab.nbItem() && j < nbFileNames; ++i)

  02416	4c 39 b3 b0 04
	00 00		 cmp	 QWORD PTR [rbx+1200], r14
  0241d	76 48		 jbe	 SHORT $LN20@process
  0241f	90		 npad	 1
$LL21@process:
  02420	4c 3b e6	 cmp	 r12, rsi
  02423	73 3e		 jae	 SHORT $LN2678@process

; 978  : 				{
; 979  : 					BufferID id = _mainDocTab.getBufferByIndex(i);

  02425	48 8d 8b 90 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1168]
  0242c	49 8b d4	 mov	 rdx, r12
  0242f	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  02434	48 8b f8	 mov	 rdi, rax

; 980  : 					Buffer * buf = MainFileManager.getBufferByID(id);

  02437	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  0243c	48 8d 97 b0 00
	00 00		 lea	 rdx, QWORD PTR [rdi+176]

; 2319 :         return _BUF_SIZE <= _Myres;

  02443	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  02448	72 03		 jb	 SHORT $LN1298@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0244a	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN1298@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 981  : 					lstrcpy(fileNames[j++], buf->getFullPathName());

  0244d	4b 8b 0c e7	 mov	 rcx, QWORD PTR [r15+r12*8]
  02451	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
  02457	49 ff c4	 inc	 r12

; 976  : 			{
; 977  : 				for (size_t i = 0; i < _mainDocTab.nbItem() && j < nbFileNames; ++i)

  0245a	4c 3b a3 b0 04
	00 00		 cmp	 r12, QWORD PTR [rbx+1200]
  02461	72 bd		 jb	 SHORT $LL21@process
$LN2678@process:
  02463	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
$LN20@process:

; 982  : 				}
; 983  : 			}
; 984  : 
; 985  : 			if (message != NPPM_GETOPENFILENAMESPRIMARY)

  02467	81 fa f9 07 00
	00		 cmp	 edx, 2041		; 000007f9H
  0246d	0f 84 8f ec ff
	ff		 je	 $LN2695@process
$LN2620@process:

; 986  : 			{
; 987  : 				for (size_t i = 0; i < _subDocTab.nbItem() && j < nbFileNames; ++i)

  02473	4c 39 b3 88 05
	00 00		 cmp	 QWORD PTR [rbx+1416], r14
  0247a	0f 86 82 ec ff
	ff		 jbe	 $LN2695@process
$LL24@process:
  02480	4c 3b e6	 cmp	 r12, rsi
  02483	0f 83 79 ec ff
	ff		 jae	 $LN2695@process

; 988  : 				{
; 989  : 					BufferID id = _subDocTab.getBufferByIndex(i);

  02489	48 8d 8b 68 05
	00 00		 lea	 rcx, QWORD PTR [rbx+1384]
  02490	49 8b d6	 mov	 rdx, r14
  02493	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  02498	48 8b f8	 mov	 rdi, rax

; 990  : 					Buffer * buf = MainFileManager.getBufferByID(id);

  0249b	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  024a0	48 8d 97 b0 00
	00 00		 lea	 rdx, QWORD PTR [rdi+176]

; 2319 :         return _BUF_SIZE <= _Myres;

  024a7	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  024ac	72 03		 jb	 SHORT $LN1307@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  024ae	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN1307@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 991  : 					lstrcpy(fileNames[j++], buf->getFullPathName());

  024b1	4b 8b 0c e7	 mov	 rcx, QWORD PTR [r15+r12*8]
  024b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
  024bb	49 ff c4	 inc	 r12

; 986  : 			{
; 987  : 				for (size_t i = 0; i < _subDocTab.nbItem() && j < nbFileNames; ++i)

  024be	49 ff c6	 inc	 r14
  024c1	4c 3b b3 88 05
	00 00		 cmp	 r14, QWORD PTR [rbx+1416]
  024c8	72 b6		 jb	 SHORT $LL24@process

; 2748 : }

  024ca	49 8b c4	 mov	 rax, r12
  024cd	e9 37 29 00 00	 jmp	 $LN1@process
$LN263@process:

; 1068 : 		}
; 1069 : 
; 1070 : 		case NPPM_GETNBSESSIONFILES:
; 1071 : 		{
; 1072 : 			const TCHAR *sessionFileName = reinterpret_cast<const TCHAR *>(lParam);
; 1073 : 			if ((!sessionFileName) || (sessionFileName[0] == '\0'))

  024d2	48 85 f6	 test	 rsi, rsi
  024d5	0f 84 dc dc ff
	ff		 je	 $LN2622@process
  024db	66 44 39 36	 cmp	 WORD PTR [rsi], r14w
  024df	0f 84 d2 dc ff
	ff		 je	 $LN2622@process
  024e5	4c 89 75 10	 mov	 QWORD PTR session2Load$51[rbp-256], r14
  024e9	4c 89 75 18	 mov	 QWORD PTR session2Load$51[rbp-248], r14
  024ed	4c 89 75 20	 mov	 QWORD PTR session2Load$51[rbp-240], r14
  024f1	44 88 75 28	 mov	 BYTE PTR session2Load$51[rbp-232], r14b
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  024f5	4c 89 75 30	 mov	 QWORD PTR session2Load$51[rbp-224], r14
  024f9	0f 57 c0	 xorps	 xmm0, xmm0

; 2355 :     size_type _Mysize = 0; // current length of string

  024fc	66 0f 7f 45 40	 movdqa	 XMMWORD PTR session2Load$51[rbp-208], xmm0

; 4596 :         _My_data._Mysize = 0;

  02501	66 0f 6f 0d 00
	00 00 00	 movdqa	 xmm1, XMMWORD PTR __xmm@00000000000000070000000000000000
  02509	66 0f 7f 4d 40	 movdqa	 XMMWORD PTR session2Load$51[rbp-208], xmm1

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0250e	66 44 89 75 30	 mov	 WORD PTR session2Load$51[rbp-224], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  02513	66 0f 7f 45 50	 movdqa	 XMMWORD PTR session2Load$51[rbp-192], xmm0
  02518	4c 89 75 60	 mov	 QWORD PTR session2Load$51[rbp-176], r14
  0251c	4c 89 75 68	 mov	 QWORD PTR session2Load$51[rbp-168], r14
  02520	66 0f 7f 45 70	 movdqa	 XMMWORD PTR session2Load$51[rbp-160], xmm0
  02525	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$51[rbp-144], xmm0
  0252d	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$51[rbp-128], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1076 : 			if (nppParam.loadSession(session2Load, sessionFileName))

  02534	4c 8b c6	 mov	 r8, rsi
  02537	48 8d 55 10	 lea	 rdx, QWORD PTR session2Load$51[rbp-256]
  0253b	49 8b cd	 mov	 rcx, r13
  0253e	e8 00 00 00 00	 call	 ?loadSession@NppParameters@@QEAA_NAEAUSession@@PEB_W@Z ; NppParameters::loadSession
  02543	84 c0		 test	 al, al
  02545	0f 84 38 01 00
	00		 je	 $LN266@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0254b	48 8b 4d 70	 mov	 rcx, QWORD PTR session2Load$51[rbp-160]
  0254f	48 2b 4d 68	 sub	 rcx, QWORD PTR session2Load$51[rbp-168]
  02553	49 bd 09 21 84
	10 42 08 21 84	 mov	 r13, -8925843906633654007 ; 8421084210842109H
  0255d	49 8b c5	 mov	 rax, r13
  02560	48 f7 e9	 imul	 rcx
  02563	4c 8d 04 11	 lea	 r8, QWORD PTR [rcx+rdx]
  02567	49 c1 f8 07	 sar	 r8, 7
  0256b	49 8b c0	 mov	 rax, r8
  0256e	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  02572	4c 03 c0	 add	 r8, rax
  02575	48 8b 4d 58	 mov	 rcx, QWORD PTR session2Load$51[rbp-184]
  02579	48 2b 4d 50	 sub	 rcx, QWORD PTR session2Load$51[rbp-192]
  0257d	49 8b c5	 mov	 rax, r13
  02580	48 f7 e9	 imul	 rcx
  02583	48 03 d1	 add	 rdx, rcx
  02586	48 c1 fa 07	 sar	 rdx, 7
  0258a	48 8b f2	 mov	 rsi, rdx
  0258d	48 c1 ee 3f	 shr	 rsi, 63			; 0000003fH
  02591	49 03 d0	 add	 rdx, r8
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1077 : 				return session2Load.nbMainFiles() + session2Load.nbSubFiles();

  02594	48 03 f2	 add	 rsi, rdx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  02597	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$51[rbp-144]
  0259e	48 85 db	 test	 rbx, rbx
  025a1	74 72		 je	 SHORT $LN1396@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  025a3	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR session2Load$51[rbp-136]
  025aa	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  025ad	74 19		 je	 SHORT $LN1402@process
  025af	90		 npad	 1
$LL1403@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  025b0	48 8b cb	 mov	 rcx, rbx
  025b3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  025b8	48 83 c3 20	 add	 rbx, 32			; 00000020H
  025bc	48 3b df	 cmp	 rbx, rdi
  025bf	75 ef		 jne	 SHORT $LL1403@process
  025c1	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$51[rbp-144]
$LN1402@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  025c8	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR session2Load$51[rbp-128]
  025cf	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  025d2	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  025d6	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  025d9	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  025e0	72 19		 jb	 SHORT $LN1426@process

; 155  :     _Bytes += _Non_user_size;

  025e2	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  025e6	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  025ea	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  025ed	48 83 c0 f8	 add	 rax, -8
  025f1	48 83 f8 1f	 cmp	 rax, 31
  025f5	0f 87 aa 28 00
	00		 ja	 $LN2717@process
$LN1426@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  025fb	48 8b cb	 mov	 rcx, rbx
  025fe	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  02603	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  02606	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$51[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  0260e	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$51[rbp-128], r14
$LN1396@process:
  02615	48 8d 4d 68	 lea	 rcx, QWORD PTR session2Load$51[rbp-168]
  02619	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  0261e	90		 npad	 1
  0261f	48 8d 4d 50	 lea	 rcx, QWORD PTR session2Load$51[rbp-192]
  02623	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  02628	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  02629	48 8b 55 48	 mov	 rdx, QWORD PTR session2Load$51[rbp-200]
  0262d	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  02631	72 36		 jb	 SHORT $LN1454@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02633	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0263b	48 8b 4d 30	 mov	 rcx, QWORD PTR session2Load$51[rbp-224]
  0263f	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02642	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02649	72 19		 jb	 SHORT $LN1453@process

; 155  :     _Bytes += _Non_user_size;

  0264b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0264f	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  02653	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02656	48 83 c0 f8	 add	 rax, -8
  0265a	48 83 f8 1f	 cmp	 rax, 31
  0265e	0f 87 4d 28 00
	00		 ja	 $LN1521@process
$LN1453@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  02664	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN1454@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  02669	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  02671	66 0f 7f 45 40	 movdqa	 XMMWORD PTR session2Load$51[rbp-208], xmm0

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  02676	66 44 89 75 30	 mov	 WORD PTR session2Load$51[rbp-224], r14w
$LN51@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  0267b	48 8b c6	 mov	 rax, rsi
  0267e	e9 86 27 00 00	 jmp	 $LN1@process
$LN266@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  02683	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$51[rbp-144]
  0268a	48 85 db	 test	 rbx, rbx
  0268d	74 76		 je	 SHORT $LN1467@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0268f	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR session2Load$51[rbp-136]
  02696	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  02699	74 1d		 je	 SHORT $LN1473@process
  0269b	0f 1f 44 00 00	 npad	 5
$LL1474@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  026a0	48 8b cb	 mov	 rcx, rbx
  026a3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  026a8	48 83 c3 20	 add	 rbx, 32			; 00000020H
  026ac	48 3b df	 cmp	 rbx, rdi
  026af	75 ef		 jne	 SHORT $LL1474@process
  026b1	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$51[rbp-144]
$LN1473@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  026b8	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR session2Load$51[rbp-128]
  026bf	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  026c2	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  026c6	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  026c9	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  026d0	72 19		 jb	 SHORT $LN1497@process

; 155  :     _Bytes += _Non_user_size;

  026d2	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  026d6	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  026da	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  026dd	48 83 c0 f8	 add	 rax, -8
  026e1	48 83 f8 1f	 cmp	 rax, 31
  026e5	0f 87 c0 27 00
	00		 ja	 $LN2718@process
$LN1497@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  026eb	48 8b cb	 mov	 rcx, rbx
  026ee	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  026f3	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  026f6	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$51[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  026fe	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$51[rbp-128], r14
$LN1467@process:
  02705	48 8d 4d 68	 lea	 rcx, QWORD PTR session2Load$51[rbp-168]
  02709	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  0270e	90		 npad	 1
  0270f	48 8d 4d 50	 lea	 rcx, QWORD PTR session2Load$51[rbp-192]
  02713	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  02718	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  02719	48 8b 55 48	 mov	 rdx, QWORD PTR session2Load$51[rbp-200]
  0271d	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  02721	72 36		 jb	 SHORT $LN1525@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02723	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0272b	48 8b 4d 30	 mov	 rcx, QWORD PTR session2Load$51[rbp-224]
  0272f	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02732	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02739	72 19		 jb	 SHORT $LN1524@process

; 155  :     _Bytes += _Non_user_size;

  0273b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0273f	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  02743	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02746	48 83 c0 f8	 add	 rax, -8
  0274a	48 83 f8 1f	 cmp	 rax, 31
  0274e	0f 87 5d 27 00
	00		 ja	 $LN1521@process
$LN1524@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  02754	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN1525@process:
  02759	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  02761	66 0f 7f 45 40	 movdqa	 XMMWORD PTR session2Load$51[rbp-208], xmm0
  02766	66 44 89 75 30	 mov	 WORD PTR session2Load$51[rbp-224], r14w
  0276b	33 c0		 xor	 eax, eax
  0276d	e9 97 26 00 00	 jmp	 $LN1@process
$LN267@process:

; 1078 : 			return 0;
; 1079 : 		}
; 1080 : 
; 1081 : 		case NPPM_GETSESSIONFILES:
; 1082 : 		{
; 1083 : 			const TCHAR *sessionFileName = reinterpret_cast<const TCHAR *>(lParam);
; 1084 : 			TCHAR **sessionFileArray = reinterpret_cast<TCHAR **>(wParam);
; 1085 : 
; 1086 : 			if ((!sessionFileName) || (sessionFileName[0] == '\0'))

  02772	48 85 f6	 test	 rsi, rsi
  02775	0f 84 3c da ff
	ff		 je	 $LN2622@process
  0277b	66 44 39 36	 cmp	 WORD PTR [rsi], r14w
  0277f	0f 84 32 da ff
	ff		 je	 $LN2622@process
  02785	4c 89 75 10	 mov	 QWORD PTR session2Load$50[rbp-256], r14
  02789	4c 89 75 18	 mov	 QWORD PTR session2Load$50[rbp-248], r14
  0278d	4c 89 75 20	 mov	 QWORD PTR session2Load$50[rbp-240], r14
  02791	44 88 75 28	 mov	 BYTE PTR session2Load$50[rbp-232], r14b
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  02795	4c 89 75 30	 mov	 QWORD PTR session2Load$50[rbp-224], r14
  02799	0f 57 c0	 xorps	 xmm0, xmm0

; 2355 :     size_type _Mysize = 0; // current length of string

  0279c	66 0f 7f 45 40	 movdqa	 XMMWORD PTR session2Load$50[rbp-208], xmm0

; 4596 :         _My_data._Mysize = 0;

  027a1	66 0f 6f 0d 00
	00 00 00	 movdqa	 xmm1, XMMWORD PTR __xmm@00000000000000070000000000000000
  027a9	66 0f 7f 4d 40	 movdqa	 XMMWORD PTR session2Load$50[rbp-208], xmm1

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  027ae	66 44 89 75 30	 mov	 WORD PTR session2Load$50[rbp-224], r14w
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  027b3	66 0f 7f 45 50	 movdqa	 XMMWORD PTR session2Load$50[rbp-192], xmm0
  027b8	4c 89 75 60	 mov	 QWORD PTR session2Load$50[rbp-176], r14
  027bc	4c 89 75 68	 mov	 QWORD PTR session2Load$50[rbp-168], r14
  027c0	66 0f 7f 45 70	 movdqa	 XMMWORD PTR session2Load$50[rbp-160], xmm0
  027c5	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$50[rbp-144], xmm0
  027cd	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$50[rbp-128], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1090 : 			if (nppParam.loadSession(session2Load, sessionFileName))

  027d4	4c 8b c6	 mov	 r8, rsi
  027d7	48 8d 55 10	 lea	 rdx, QWORD PTR session2Load$50[rbp-256]
  027db	49 8b cd	 mov	 rcx, r13
  027de	e8 00 00 00 00	 call	 ?loadSession@NppParameters@@QEAA_NAEAUSession@@PEB_W@Z ; NppParameters::loadSession
  027e3	84 c0		 test	 al, al
  027e5	0f 84 da 01 00
	00		 je	 $LN270@process

; 1091 : 			{
; 1092 : 				size_t i = 0;

  027eb	49 8b de	 mov	 rbx, r14
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  027ee	48 8b 4d 58	 mov	 rcx, QWORD PTR session2Load$50[rbp-184]
  027f2	4c 8b 45 50	 mov	 r8, QWORD PTR session2Load$50[rbp-192]
  027f6	49 2b c8	 sub	 rcx, r8
  027f9	49 bd 09 21 84
	10 42 08 21 84	 mov	 r13, -8925843906633654007 ; 8421084210842109H
  02803	49 8b c5	 mov	 rax, r13
  02806	48 f7 e9	 imul	 rcx
  02809	48 03 d1	 add	 rdx, rcx
  0280c	48 c1 fa 07	 sar	 rdx, 7
  02810	48 8b c2	 mov	 rax, rdx
  02813	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  02817	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1093 : 				for ( ; i < session2Load.nbMainFiles() ; )

  0281a	74 50		 je	 SHORT $LN34@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0281c	49 8b fe	 mov	 rdi, r14
  0281f	90		 npad	 1
$LL33@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  02820	49 8d 50 20	 lea	 rdx, QWORD PTR [r8+32]
  02824	48 03 d7	 add	 rdx, rdi

; 2319 :         return _BUF_SIZE <= _Myres;

  02827	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  0282c	72 03		 jb	 SHORT $LN1572@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0282e	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN1572@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1096 : 					lstrcpy(sessionFileArray[i++], pFn);

  02831	49 8b 0c df	 mov	 rcx, QWORD PTR [r15+rbx*8]
  02835	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
  0283b	48 ff c3	 inc	 rbx
  0283e	48 81 c7 f8 00
	00 00		 add	 rdi, 248		; 000000f8H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  02845	48 8b 4d 58	 mov	 rcx, QWORD PTR session2Load$50[rbp-184]
  02849	4c 8b 45 50	 mov	 r8, QWORD PTR session2Load$50[rbp-192]
  0284d	49 2b c8	 sub	 rcx, r8
  02850	49 8b c5	 mov	 rax, r13
  02853	48 f7 e9	 imul	 rcx
  02856	48 03 d1	 add	 rdx, rcx
  02859	48 c1 fa 07	 sar	 rdx, 7
  0285d	48 8b c2	 mov	 rax, rdx
  02860	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  02864	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1093 : 				for ( ; i < session2Load.nbMainFiles() ; )

  02867	48 3b da	 cmp	 rbx, rdx
  0286a	72 b4		 jb	 SHORT $LL33@process
$LN34@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0286c	48 8b 4d 70	 mov	 rcx, QWORD PTR session2Load$50[rbp-160]
  02870	4c 8b 45 68	 mov	 r8, QWORD PTR session2Load$50[rbp-168]
  02874	49 2b c8	 sub	 rcx, r8
  02877	49 8b c5	 mov	 rax, r13
  0287a	48 f7 e9	 imul	 rcx
  0287d	48 8d 3c 11	 lea	 rdi, QWORD PTR [rcx+rdx]
  02881	48 c1 ff 07	 sar	 rdi, 7
  02885	48 8b c7	 mov	 rax, rdi
  02888	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  0288c	48 03 f8	 add	 rdi, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1099 : 				for (size_t j = 0, len = session2Load.nbSubFiles(); j < len ; ++j)

  0288f	74 41		 je	 SHORT $LN2676@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  02891	48 8d 34 dd 00
	00 00 00	 lea	 rsi, QWORD PTR [rbx*8]
  02899	49 8b de	 mov	 rbx, r14
  0289c	0f 1f 40 00	 npad	 4
$LL38@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  028a0	49 8d 50 20	 lea	 rdx, QWORD PTR [r8+32]
  028a4	48 03 d3	 add	 rdx, rbx

; 2319 :         return _BUF_SIZE <= _Myres;

  028a7	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  028ac	72 03		 jb	 SHORT $LN1585@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  028ae	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN1585@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1102 : 					lstrcpy(sessionFileArray[i++], pFn);

  028b1	4a 8b 0c 3e	 mov	 rcx, QWORD PTR [rsi+r15]
  028b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
  028bb	48 83 c6 08	 add	 rsi, 8

; 1099 : 				for (size_t j = 0, len = session2Load.nbSubFiles(); j < len ; ++j)

  028bf	48 81 c3 f8 00
	00 00		 add	 rbx, 248		; 000000f8H
  028c6	48 83 ef 01	 sub	 rdi, 1
  028ca	74 06		 je	 SHORT $LN2676@process
  028cc	4c 8b 45 68	 mov	 r8, QWORD PTR session2Load$50[rbp-168]
  028d0	eb ce		 jmp	 SHORT $LL38@process
$LN2676@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  028d2	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$50[rbp-144]
  028d9	48 85 db	 test	 rbx, rbx
  028dc	74 77		 je	 SHORT $LN1598@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  028de	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR session2Load$50[rbp-136]
  028e5	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  028e8	74 1e		 je	 SHORT $LN1604@process
  028ea	66 0f 1f 44 00
	00		 npad	 6
$LL1605@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  028f0	48 8b cb	 mov	 rcx, rbx
  028f3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  028f8	48 83 c3 20	 add	 rbx, 32			; 00000020H
  028fc	48 3b df	 cmp	 rbx, rdi
  028ff	75 ef		 jne	 SHORT $LL1605@process
  02901	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$50[rbp-144]
$LN1604@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  02908	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR session2Load$50[rbp-128]
  0290f	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02912	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  02916	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02919	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02920	72 19		 jb	 SHORT $LN1628@process

; 155  :     _Bytes += _Non_user_size;

  02922	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  02926	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  0292a	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0292d	48 83 c0 f8	 add	 rax, -8
  02931	48 83 f8 1f	 cmp	 rax, 31
  02935	0f 87 7c 25 00
	00		 ja	 $LN2719@process
$LN1628@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0293b	48 8b cb	 mov	 rcx, rbx
  0293e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  02943	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  02946	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$50[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  0294e	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$50[rbp-128], r14
$LN1598@process:
  02955	48 8d 4d 68	 lea	 rcx, QWORD PTR session2Load$50[rbp-168]
  02959	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  0295e	90		 npad	 1
  0295f	48 8d 4d 50	 lea	 rcx, QWORD PTR session2Load$50[rbp-192]
  02963	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  02968	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  02969	48 8b 55 48	 mov	 rdx, QWORD PTR session2Load$50[rbp-200]
  0296d	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  02971	72 36		 jb	 SHORT $LN1656@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02973	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0297b	48 8b 4d 30	 mov	 rcx, QWORD PTR session2Load$50[rbp-224]
  0297f	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02982	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02989	72 19		 jb	 SHORT $LN1655@process

; 155  :     _Bytes += _Non_user_size;

  0298b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0298f	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  02993	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02996	48 83 c0 f8	 add	 rax, -8
  0299a	48 83 f8 1f	 cmp	 rax, 31
  0299e	0f 87 94 24 00
	00		 ja	 $LN1723@process
$LN1655@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  029a4	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN1656@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  029a9	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR __xmm@00000000000000070000000000000000
  029b1	66 0f 7f 45 40	 movdqa	 XMMWORD PTR session2Load$50[rbp-208], xmm0

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  029b6	66 44 89 75 30	 mov	 WORD PTR session2Load$50[rbp-224], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1104 : 				return TRUE;

  029bb	b8 01 00 00 00	 mov	 eax, 1
  029c0	e9 44 24 00 00	 jmp	 $LN1@process
$LN270@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  029c5	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$50[rbp-144]
  029cc	48 85 db	 test	 rbx, rbx
  029cf	74 74		 je	 SHORT $LN1669@process

; 1764 :             _Destroy(_Myfirst, _Mylast);

  029d1	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR session2Load$50[rbp-136]
  029d8	48 3b df	 cmp	 rbx, rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  029db	74 1b		 je	 SHORT $LN1675@process
  029dd	0f 1f 00	 npad	 3
$LL1676@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  029e0	48 8b cb	 mov	 rcx, rbx
  029e3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  029e8	48 83 c3 20	 add	 rbx, 32			; 00000020H
  029ec	48 3b df	 cmp	 rbx, rdi
  029ef	75 ef		 jne	 SHORT $LL1676@process
  029f1	48 8b 9d 80 00
	00 00		 mov	 rbx, QWORD PTR session2Load$50[rbp-144]
$LN1675@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  029f8	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR session2Load$50[rbp-128]
  029ff	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02a02	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H
  02a06	48 8b c3	 mov	 rax, rbx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02a09	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02a10	72 19		 jb	 SHORT $LN1699@process

; 155  :     _Bytes += _Non_user_size;

  02a12	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  02a16	48 8b 5b f8	 mov	 rbx, QWORD PTR [rbx-8]
  02a1a	48 2b c3	 sub	 rax, rbx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02a1d	48 83 c0 f8	 add	 rax, -8
  02a21	48 83 f8 1f	 cmp	 rax, 31
  02a25	0f 87 92 24 00
	00		 ja	 $LN2720@process
$LN1699@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  02a2b	48 8b cb	 mov	 rcx, rbx
  02a2e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  02a33	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  02a36	66 0f 7f 85 80
	00 00 00	 movdqa	 XMMWORD PTR session2Load$50[rbp-144], xmm0

; 1769 :             _Myend   = nullptr;

  02a3e	4c 89 b5 90 00
	00 00		 mov	 QWORD PTR session2Load$50[rbp-128], r14
$LN1669@process:
  02a45	48 8d 4d 68	 lea	 rcx, QWORD PTR session2Load$50[rbp-168]
  02a49	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  02a4e	90		 npad	 1
  02a4f	48 8d 4d 50	 lea	 rcx, QWORD PTR session2Load$50[rbp-192]
  02a53	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  02a58	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  02a59	48 8b 55 48	 mov	 rdx, QWORD PTR session2Load$50[rbp-200]
  02a5d	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  02a61	0f 82 f2 fc ff
	ff		 jb	 $LN1525@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  02a67	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  02a6f	48 8b 4d 30	 mov	 rcx, QWORD PTR session2Load$50[rbp-224]
  02a73	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  02a76	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  02a7d	0f 82 d1 fc ff
	ff		 jb	 $LN1524@process

; 155  :     _Bytes += _Non_user_size;

  02a83	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  02a87	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  02a8b	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  02a8e	48 83 c0 f8	 add	 rax, -8
  02a92	48 83 f8 1f	 cmp	 rax, 31
  02a96	0f 87 9c 23 00
	00		 ja	 $LN1723@process
  02a9c	e9 b3 fc ff ff	 jmp	 $LN1524@process
$LN271@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1113 : 			if (wParam == MAIN_VIEW)

  02aa1	4d 85 ff	 test	 r15, r15
  02aa4	75 09		 jne	 SHORT $LN272@process

; 1114 : 				pSci = &_mainEditView;

  02aa6	4c 8d b3 f0 06
	00 00		 lea	 r14, QWORD PTR [rbx+1776]
  02aad	eb 10		 jmp	 SHORT $LN275@process
$LN272@process:

; 1115 : 			else if (wParam == SUB_VIEW)

  02aaf	4d 3b fc	 cmp	 r15, r12
  02ab2	0f 85 6e 06 00
	00		 jne	 $LN394@process

; 1116 : 				pSci = &_subEditView;

  02ab8	4c 8d b3 50 06
	00 00		 lea	 r14, QWORD PTR [rbx+1616]
$LN275@process:

; 1117 : 			else
; 1118 : 				return -1;
; 1119 : 
; 1120 : 			// get text of current scintilla
; 1121 : 			auto length = pSci->execute(SCI_GETTEXTLENGTH, 0, 0) + 1;

  02abf	45 33 c9	 xor	 r9d, r9d
  02ac2	45 33 c0	 xor	 r8d, r8d
  02ac5	ba 87 08 00 00	 mov	 edx, 2183		; 00000887H
  02aca	49 8b ce	 mov	 rcx, r14
  02acd	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  02ad2	48 8b d8	 mov	 rbx, rax

; 1122 : 			char* buffer = new char[length];

  02ad5	48 8d 48 01	 lea	 rcx, QWORD PTR [rax+1]
  02ad9	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  02ade	48 8b f0	 mov	 rsi, rax

; 1123 : 			pSci->execute(SCI_GETTEXT, length, reinterpret_cast<LPARAM>(buffer));

  02ae1	4c 8b c8	 mov	 r9, rax
  02ae4	4c 8d 43 01	 lea	 r8, QWORD PTR [rbx+1]
  02ae8	ba 86 08 00 00	 mov	 edx, 2182		; 00000886H
  02aed	49 8b ce	 mov	 rcx, r14
  02af0	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1124 : 
; 1125 : 			// convert here
; 1126 : 			UniMode unicodeMode = pSci->getCurrentBuffer()->getUnicodeMode();

  02af5	49 8b 4e 40	 mov	 rcx, QWORD PTR [r14+64]
  02af9	48 63 79 4c	 movsxd	 rdi, DWORD PTR [rcx+76]

; 1127 : 			Utf8_16_Write UnicodeConvertor;

  02afd	48 8d 4d a0	 lea	 rcx, QWORD PTR UnicodeConvertor$30[rbp-256]
  02b01	e8 00 00 00 00	 call	 ??0Utf8_16_Write@@QEAA@XZ ; Utf8_16_Write::Utf8_16_Write
  02b06	90		 npad	 1

; 1128 : 			UnicodeConvertor.setEncoding(unicodeMode);

  02b07	8b d7		 mov	 edx, edi
  02b09	48 8d 4d a0	 lea	 rcx, QWORD PTR UnicodeConvertor$30[rbp-256]
  02b0d	e8 00 00 00 00	 call	 ?setEncoding@Utf8_16_Write@@QEAAXW4UniMode@@@Z ; Utf8_16_Write::setEncoding

; 1129 : 			length = UnicodeConvertor.convert(buffer, length-1);

  02b12	4c 8b c3	 mov	 r8, rbx
  02b15	48 8b d6	 mov	 rdx, rsi
  02b18	48 8d 4d a0	 lea	 rcx, QWORD PTR UnicodeConvertor$30[rbp-256]
  02b1c	e8 00 00 00 00	 call	 ?convert@Utf8_16_Write@@QEAA_KPEAD_K@Z ; Utf8_16_Write::convert
  02b21	48 8b d8	 mov	 rbx, rax

; 1130 : 
; 1131 : 			// set text in target
; 1132 : 			pSci->execute(SCI_CLEARALL);

  02b24	45 33 c9	 xor	 r9d, r9d
  02b27	45 33 c0	 xor	 r8d, r8d
  02b2a	ba d4 07 00 00	 mov	 edx, 2004		; 000007d4H
  02b2f	49 8b ce	 mov	 rcx, r14
  02b32	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1133 : 			pSci->addText(length, UnicodeConvertor.getNewBuf());

  02b37	4c 8b 45 b0	 mov	 r8, QWORD PTR UnicodeConvertor$30[rbp-240]
  02b3b	48 8b d3	 mov	 rdx, rbx
  02b3e	49 8b ce	 mov	 rcx, r14
  02b41	e8 00 00 00 00	 call	 ?addText@ScintillaEditView@@QEAAX_KPEBD@Z ; ScintillaEditView::addText

; 1134 : 			pSci->execute(SCI_EMPTYUNDOBUFFER);

  02b46	45 33 c9	 xor	 r9d, r9d
  02b49	45 33 c0	 xor	 r8d, r8d
  02b4c	ba 7f 08 00 00	 mov	 edx, 2175		; 0000087fH
  02b51	49 8b ce	 mov	 rcx, r14
  02b54	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1135 : 
; 1136 : 			pSci->execute(SCI_SETCODEPAGE);

  02b59	45 33 c9	 xor	 r9d, r9d
  02b5c	45 33 c0	 xor	 r8d, r8d
  02b5f	ba f5 07 00 00	 mov	 edx, 2037		; 000007f5H
  02b64	49 8b ce	 mov	 rcx, r14
  02b67	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1137 : 
; 1138 : 			// set cursor position
; 1139 : 			pSci->execute(SCI_GOTOPOS);

  02b6c	45 33 c9	 xor	 r9d, r9d
  02b6f	45 33 c0	 xor	 r8d, r8d
  02b72	ba e9 07 00 00	 mov	 edx, 2025		; 000007e9H
  02b77	49 8b ce	 mov	 rcx, r14
  02b7a	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1140 : 
; 1141 : 			// clean buffer
; 1142 : 			delete [] buffer;

  02b7f	48 8b ce	 mov	 rcx, rsi
  02b82	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
  02b87	90		 npad	 1

; 1143 : 
; 1144 : 			return unicodeMode;

  02b88	48 8d 4d a0	 lea	 rcx, QWORD PTR UnicodeConvertor$30[rbp-256]
  02b8c	e8 00 00 00 00	 call	 ??1Utf8_16_Write@@QEAA@XZ ; Utf8_16_Write::~Utf8_16_Write
  02b91	48 8b c7	 mov	 rax, rdi
  02b94	e9 70 22 00 00	 jmp	 $LN1@process
$LN276@process:

; 1145 : 		}
; 1146 : 
; 1147 : 		case NPPM_ENCODESCI:
; 1148 : 		{
; 1149 : 			// convert
; 1150 : 			ScintillaEditView *pSci;
; 1151 : 			if (wParam == MAIN_VIEW)

  02b99	4d 85 ff	 test	 r15, r15
  02b9c	75 09		 jne	 SHORT $LN277@process

; 1152 : 				pSci = &_mainEditView;

  02b9e	48 8d b3 f0 06
	00 00		 lea	 rsi, QWORD PTR [rbx+1776]
  02ba5	eb 10		 jmp	 SHORT $LN280@process
$LN277@process:

; 1153 : 			else if (wParam == SUB_VIEW)

  02ba7	4d 3b fc	 cmp	 r15, r12
  02baa	0f 85 76 05 00
	00		 jne	 $LN394@process

; 1154 : 				pSci = &_subEditView;

  02bb0	48 8d b3 50 06
	00 00		 lea	 rsi, QWORD PTR [rbx+1616]
$LN280@process:

; 1155 : 			else
; 1156 : 				return -1;
; 1157 : 
; 1158 : 			// get text of current scintilla
; 1159 : 			auto length = pSci->execute(SCI_GETTEXTLENGTH, 0, 0) + 1;

  02bb7	45 33 c9	 xor	 r9d, r9d
  02bba	45 33 c0	 xor	 r8d, r8d
  02bbd	ba 87 08 00 00	 mov	 edx, 2183		; 00000887H
  02bc2	48 8b ce	 mov	 rcx, rsi
  02bc5	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  02bca	48 8b d8	 mov	 rbx, rax

; 1160 : 			char* buffer = new char[length];

  02bcd	48 8d 48 01	 lea	 rcx, QWORD PTR [rax+1]
  02bd1	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  02bd6	48 8b f8	 mov	 rdi, rax

; 1161 : 			pSci->execute(SCI_GETTEXT, length, reinterpret_cast<LPARAM>(buffer));

  02bd9	4c 8b c8	 mov	 r9, rax
  02bdc	4c 8d 43 01	 lea	 r8, QWORD PTR [rbx+1]
  02be0	ba 86 08 00 00	 mov	 edx, 2182		; 00000886H
  02be5	48 8b ce	 mov	 rcx, rsi
  02be8	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1162 : 
; 1163 : 			Utf8_16_Read UnicodeConvertor;

  02bed	48 8d 4d 10	 lea	 rcx, QWORD PTR UnicodeConvertor$49[rbp-256]
  02bf1	e8 00 00 00 00	 call	 ??0Utf8_16_Read@@QEAA@XZ ; Utf8_16_Read::Utf8_16_Read
  02bf6	90		 npad	 1

; 1164 : 			length = UnicodeConvertor.convert(buffer, length-1);

  02bf7	4c 8b c3	 mov	 r8, rbx
  02bfa	48 8b d7	 mov	 rdx, rdi
  02bfd	48 8d 4d 10	 lea	 rcx, QWORD PTR UnicodeConvertor$49[rbp-256]
  02c01	e8 00 00 00 00	 call	 ?convert@Utf8_16_Read@@QEAA_KPEAD_K@Z ; Utf8_16_Read::convert
  02c06	48 8b d8	 mov	 rbx, rax

; 1165 : 
; 1166 : 			// set text in target
; 1167 : 			pSci->execute(SCI_CLEARALL);

  02c09	45 33 c9	 xor	 r9d, r9d
  02c0c	45 33 c0	 xor	 r8d, r8d
  02c0f	ba d4 07 00 00	 mov	 edx, 2004		; 000007d4H
  02c14	48 8b ce	 mov	 rcx, rsi
  02c17	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1168 : 			pSci->addText(length, UnicodeConvertor.getNewBuf());

  02c1c	4c 8b 45 20	 mov	 r8, QWORD PTR UnicodeConvertor$49[rbp-240]
  02c20	48 8b d3	 mov	 rdx, rbx
  02c23	48 8b ce	 mov	 rcx, rsi
  02c26	e8 00 00 00 00	 call	 ?addText@ScintillaEditView@@QEAAX_KPEBD@Z ; ScintillaEditView::addText

; 1169 : 
; 1170 : 			pSci->execute(SCI_EMPTYUNDOBUFFER);

  02c2b	45 33 c9	 xor	 r9d, r9d
  02c2e	45 33 c0	 xor	 r8d, r8d
  02c31	ba 7f 08 00 00	 mov	 edx, 2175		; 0000087fH
  02c36	48 8b ce	 mov	 rcx, rsi
  02c39	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1171 : 
; 1172 : 			// set cursor position
; 1173 : 			pSci->execute(SCI_GOTOPOS);

  02c3e	45 33 c9	 xor	 r9d, r9d
  02c41	45 33 c0	 xor	 r8d, r8d
  02c44	ba e9 07 00 00	 mov	 edx, 2025		; 000007e9H
  02c49	48 8b ce	 mov	 rcx, rsi
  02c4c	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1174 : 
; 1175 : 			// clean buffer
; 1176 : 			delete [] buffer;

  02c51	48 8b cf	 mov	 rcx, rdi
  02c54	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]

; 1177 : 
; 1178 : 			// set new encoding if BOM was changed by other programms
; 1179 : 			UniMode um = UnicodeConvertor.getEncoding();

  02c59	48 63 5d 10	 movsxd	 rbx, DWORD PTR UnicodeConvertor$49[rbp-256]

; 1180 : 			(pSci->getCurrentBuffer())->setUnicodeMode(um);

  02c5d	8b d3		 mov	 edx, ebx
  02c5f	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  02c63	e8 00 00 00 00	 call	 ?setUnicodeMode@Buffer@@QEAAXW4UniMode@@@Z ; Buffer::setUnicodeMode

; 1181 : 			(pSci->getCurrentBuffer())->setDirty(true);

  02c68	b2 01		 mov	 dl, 1
  02c6a	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  02c6e	e8 00 00 00 00	 call	 ?setDirty@Buffer@@QEAAX_N@Z ; Buffer::setDirty
  02c73	90		 npad	 1

; 1182 : 			return um;

  02c74	48 8d 4d 10	 lea	 rcx, QWORD PTR UnicodeConvertor$49[rbp-256]
  02c78	e8 00 00 00 00	 call	 ??1Utf8_16_Read@@QEAA@XZ ; Utf8_16_Read::~Utf8_16_Read
  02c7d	48 8b c3	 mov	 rax, rbx
  02c80	e9 84 21 00 00	 jmp	 $LN1@process
$LN281@process:

; 1183 : 		}
; 1184 : 
; 1185 : 		case NPPM_ACTIVATEDOC:
; 1186 : 		case NPPM_TRIGGERTABBARCONTEXTMENU:
; 1187 : 		{
; 1188 : 			// similar to NPPM_ACTIVEDOC
; 1189 : 			int whichView = ((wParam != MAIN_VIEW) && (wParam != SUB_VIEW)) ? currentView() : static_cast<int32_t>(wParam);

  02c85	4d 85 ff	 test	 r15, r15
  02c88	74 0c		 je	 SHORT $LN578@process
  02c8a	4d 3b fc	 cmp	 r15, r12
  02c8d	74 07		 je	 SHORT $LN578@process
  02c8f	44 8b bb d4 84
	09 00		 mov	 r15d, DWORD PTR [rbx+623828]
$LN578@process:

; 1190 : 			int index = static_cast<int32_t>(lParam);
; 1191 : 
; 1192 : 			switchEditViewTo(whichView);

  02c96	41 8b d7	 mov	 edx, r15d
  02c99	48 8b cb	 mov	 rcx, rbx
  02c9c	e8 00 00 00 00	 call	 ?switchEditViewTo@Notepad_plus@@AEAAHH@Z ; Notepad_plus::switchEditViewTo
  02ca1	48 63 d6	 movsxd	 rdx, esi

; 1193 : 			activateDoc(index);

  02ca4	48 8b cb	 mov	 rcx, rbx
  02ca7	e8 00 00 00 00	 call	 ?activateDoc@Notepad_plus@@AEAAX_K@Z ; Notepad_plus::activateDoc

; 1194 : 
; 1195 : 			if (message == NPPM_TRIGGERTABBARCONTEXTMENU)

  02cac	81 7c 24 44 19
	08 00 00	 cmp	 DWORD PTR message$GSCopy$1$[rsp], 2073 ; 00000819H
  02cb4	0f 85 48 e4 ff
	ff		 jne	 $LN2695@process

; 1196 : 			{
; 1197 : 				// open here tab menu
; 1198 : 				NMHDR	nmhdr;
; 1199 : 				nmhdr.code = NM_RCLICK;

  02cba	c7 45 90 fb ff
	ff ff		 mov	 DWORD PTR nmhdr$14[rbp-240], -5 ; fffffffbH

; 1200 : 
; 1201 : 				nmhdr.hwndFrom = (whichView == MAIN_VIEW)?_mainDocTab.getHSelf():_subDocTab.getHSelf();

  02cc1	45 85 ff	 test	 r15d, r15d
  02cc4	75 09		 jne	 SHORT $LN579@process
  02cc6	48 8b 8b a8 04
	00 00		 mov	 rcx, QWORD PTR [rbx+1192]
  02ccd	eb 07		 jmp	 SHORT $LN2688@process
$LN579@process:
  02ccf	48 8b 8b 80 05
	00 00		 mov	 rcx, QWORD PTR [rbx+1408]
$LN2688@process:

; 1202 : 
; 1203 : 				nmhdr.idFrom = ::GetDlgCtrlID(nmhdr.hwndFrom);

  02cd6	48 89 4d 80	 mov	 QWORD PTR nmhdr$14[rbp-256], rcx
  02cda	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetDlgCtrlID
  02ce0	4c 63 c0	 movsxd	 r8, eax
  02ce3	4c 89 45 88	 mov	 QWORD PTR nmhdr$14[rbp-248], r8

; 1204 : 				::SendMessage(hwnd, WM_NOTIFY, nmhdr.idFrom, reinterpret_cast<LPARAM>(&nmhdr));

  02ce7	4c 8d 4d 80	 lea	 r9, QWORD PTR nmhdr$14[rbp-256]
  02ceb	ba 4e 00 00 00	 mov	 edx, 78			; 0000004eH
  02cf0	48 8b cf	 mov	 rcx, rdi
  02cf3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 2748 : }

  02cf9	49 8b c4	 mov	 rax, r12
  02cfc	e9 08 21 00 00	 jmp	 $LN1@process
$LN284@process:

; 1205 : 			}
; 1206 : 			return TRUE;
; 1207 : 		}
; 1208 : 
; 1209 : 		case NPPM_GETNPPVERSION:
; 1210 : 		{
; 1211 : 			const TCHAR * verStr = VERSION_VALUE;
; 1212 : 			TCHAR mainVerStr[16];
; 1213 : 			TCHAR auxVerStr[16];
; 1214 : 			bool isDot = false;

  02d01	32 db		 xor	 bl, bl

; 1215 : 			int j =0;

  02d03	45 8b d6	 mov	 r10d, r14d

; 1216 : 			int k = 0;

  02d06	45 8b de	 mov	 r11d, r14d

; 2033 : 			if ((nppgui._isMinimizedToTray || _pPublicInterface->isPrelaunch()) && (wParam == SC_MINIMIZE))

  02d09	4d 8b ce	 mov	 r9, r14
  02d0c	b8 38 00 00 00	 mov	 eax, 56			; 00000038H

; 1205 : 			}
; 1206 : 			return TRUE;
; 1207 : 		}
; 1208 : 
; 1209 : 		case NPPM_GETNPPVERSION:
; 1210 : 		{
; 1211 : 			const TCHAR * verStr = VERSION_VALUE;
; 1212 : 			TCHAR mainVerStr[16];
; 1213 : 			TCHAR auxVerStr[16];
; 1214 : 			bool isDot = false;

  02d11	48 8d 4d 80	 lea	 rcx, QWORD PTR auxVerStr$13[rbp-256]
  02d15	48 8d 55 a0	 lea	 rdx, QWORD PTR mainVerStr$29[rbp-256]
  02d19	0f 1f 80 00 00
	00 00		 npad	 7
$LL41@process:

; 1218 : 			{
; 1219 : 				if (verStr[i] == '.')

  02d20	66 83 f8 2e	 cmp	 ax, 46			; 0000002eH
  02d24	75 06		 jne	 SHORT $LN285@process

; 1220 : 				{
; 1221 : 					isDot = true;

  02d26	41 0f b6 dc	 movzx	 ebx, r12b

; 1222 : 				}

  02d2a	eb 1a		 jmp	 SHORT $LN39@process
$LN285@process:

; 1223 : 				else
; 1224 : 				{
; 1225 : 					if (!isDot)

  02d2c	84 db		 test	 bl, bl
  02d2e	75 0c		 jne	 SHORT $LN287@process

; 1226 : 						mainVerStr[j++] = verStr[i];

  02d30	66 89 02	 mov	 WORD PTR [rdx], ax
  02d33	41 ff c2	 inc	 r10d
  02d36	48 83 c2 02	 add	 rdx, 2
  02d3a	eb 0a		 jmp	 SHORT $LN39@process
$LN287@process:

; 1227 : 					else
; 1228 : 						auxVerStr[k++] = verStr[i];

  02d3c	66 89 01	 mov	 WORD PTR [rcx], ax
  02d3f	41 ff c3	 inc	 r11d
  02d42	48 83 c1 02	 add	 rcx, 2
$LN39@process:

; 1217 : 			for (int i = 0 ; verStr[i] ; ++i)

  02d46	49 ff c1	 inc	 r9
  02d49	43 0f b7 84 48
	00 00 00 00	 movzx	 eax, WORD PTR ??_C@_1M@EBNKMNOC@?$AA8?$AA?4?$AA1?$AA1?$AA?$AA@[r8+r9*2]
  02d52	66 85 c0	 test	 ax, ax
  02d55	75 c9		 jne	 SHORT $LL41@process

; 1232 : 			mainVerStr[j] = '\0';

  02d57	49 63 c2	 movsxd	 rax, r10d
  02d5a	48 03 c0	 add	 rax, rax
  02d5d	48 83 f8 20	 cmp	 rax, 32			; 00000020H
  02d61	0f 83 5c 21 00
	00		 jae	 $LN581@process
  02d67	66 44 89 74 05
	a0		 mov	 WORD PTR mainVerStr$29[rbp+rax-256], r14w

; 1233 : 			auxVerStr[k] = '\0';

  02d6d	49 63 c3	 movsxd	 rax, r11d
  02d70	48 03 c0	 add	 rax, rax
  02d73	48 83 f8 20	 cmp	 rax, 32			; 00000020H
  02d77	0f 83 46 21 00
	00		 jae	 $LN581@process
  02d7d	66 44 89 74 05
	80		 mov	 WORD PTR auxVerStr$13[rbp+rax-256], r14w

; 1234 : 
; 1235 : 			int mainVer = 0, auxVer = 0;

  02d83	41 8b de	 mov	 ebx, r14d

; 1236 : 			if (mainVerStr[0])

  02d86	66 39 5d a0	 cmp	 WORD PTR mainVerStr$29[rbp-256], bx
  02d8a	74 0c		 je	 SHORT $LN289@process

; 1237 : 				mainVer = generic_atoi(mainVerStr);

  02d8c	48 8d 4d a0	 lea	 rcx, QWORD PTR mainVerStr$29[rbp-256]
  02d90	e8 00 00 00 00	 call	 _wtoi
  02d95	44 8b f0	 mov	 r14d, eax
$LN289@process:

; 1238 : 
; 1239 : 			if (auxVerStr[0])

  02d98	66 39 5d 80	 cmp	 WORD PTR auxVerStr$13[rbp-256], bx
  02d9c	74 0b		 je	 SHORT $LN290@process

; 1240 : 				auxVer = generic_atoi(auxVerStr);

  02d9e	48 8d 4d 80	 lea	 rcx, QWORD PTR auxVerStr$13[rbp-256]
  02da2	e8 00 00 00 00	 call	 _wtoi
  02da7	8b d8		 mov	 ebx, eax
$LN290@process:

; 1241 : 
; 1242 : 			return MAKELONG(auxVer, mainVer);

  02da9	41 0f b7 ce	 movzx	 ecx, r14w
  02dad	c1 e1 10	 shl	 ecx, 16
  02db0	0f b7 c3	 movzx	 eax, bx
  02db3	0b c1		 or	 eax, ecx
  02db5	48 98		 cdqe
  02db7	e9 4d 20 00 00	 jmp	 $LN1@process
$LN310@process:

; 1328 : 			}
; 1329 : 			break;
; 1330 : 		}
; 1331 : 
; 1332 : 		case NPPM_CREATESCINTILLAHANDLE:
; 1333 : 		{
; 1334 : 			return (LRESULT)_scintillaCtrls4Plugins.createSintilla((lParam ? reinterpret_cast<HWND>(lParam) : hwnd));

  02dbc	48 85 f6	 test	 rsi, rsi
  02dbf	48 0f 45 fe	 cmovne	 rdi, rsi
  02dc3	48 8d 8b a8 7c
	09 00		 lea	 rcx, QWORD PTR [rbx+621736]
  02dca	48 8b d7	 mov	 rdx, rdi
  02dcd	e8 00 00 00 00	 call	 ?createSintilla@ScintillaCtrls@@QEAAPEAUHWND__@@PEAU2@@Z ; ScintillaCtrls::createSintilla
  02dd2	e9 32 20 00 00	 jmp	 $LN1@process
$LN314@process:

; 1345 : 			return TRUE;
; 1346 : 		}
; 1347 : 
; 1348 : 		case NPPM_DESTROYSCINTILLAHANDLE:
; 1349 : 		{
; 1350 : 			//return _scintillaCtrls4Plugins.destroyScintilla(reinterpret_cast<HWND>(lParam));
; 1351 : 
; 1352 : 			// Destroying allocated Scintilla makes Notepad++ crash
; 1353 : 			// because created Scintilla view's pointer is added into _referees of Buffer object automatically.
; 1354 : 			// The deallocated scintilla view in _referees is used in Buffer::nextUntitledNewNumber().
; 1355 : 
; 1356 : 			// So we do nothing here and let Notepad++ destroy allocated Scintilla while it exits
; 1357 : 			// and we keep this message for the sake of compability withe the existing plugins.
; 1358 : 			return true;
; 1359 : 		}
; 1360 : 
; 1361 : 		case NPPM_GETNBUSERLANG:
; 1362 : 		{
; 1363 : 			if (lParam)

  02dd7	48 85 f6	 test	 rsi, rsi
  02dda	74 06		 je	 SHORT $LN315@process

; 1364 : 				*(reinterpret_cast<int *>(lParam)) = IDM_LANG_USER;

  02ddc	c7 06 64 b4 00
	00		 mov	 DWORD PTR [rsi], 46180	; 0000b464H
$LN315@process:

; 1365 : 			return nppParam.getNbUserLang();

  02de2	41 0f b6 85 90
	0e 00 00	 movzx	 eax, BYTE PTR [r13+3728]
  02dea	e9 1a 20 00 00	 jmp	 $LN1@process
$LN316@process:

; 1366 : 		}
; 1367 : 
; 1368 : 		case NPPM_GETCURRENTDOCINDEX:
; 1369 : 		{
; 1370 : 			if (lParam == SUB_VIEW)

  02def	48 8b cb	 mov	 rcx, rbx
  02df2	49 3b f4	 cmp	 rsi, r12
  02df5	75 2f		 jne	 SHORT $LN317@process

; 1371 : 			{
; 1372 : 				if (!viewVisible(SUB_VIEW))

  02df7	49 8b d4	 mov	 rdx, r12
  02dfa	e8 00 00 00 00	 call	 ?viewVisible@Notepad_plus@@AEAA_NH@Z ; Notepad_plus::viewVisible
  02dff	84 c0		 test	 al, al
  02e01	0f 84 1f 03 00
	00		 je	 $LN394@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h

; 70   : 		return static_cast<int32_t>(SendMessage(_hSelf, TCM_GETCURSEL, 0, 0));

  02e07	45 33 c9	 xor	 r9d, r9d
  02e0a	45 33 c0	 xor	 r8d, r8d
  02e0d	ba 0b 13 00 00	 mov	 edx, 4875		; 0000130bH
  02e12	48 8b 8b 80 05
	00 00		 mov	 rcx, QWORD PTR [rbx+1408]
  02e19	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1374 : 				return _subDocTab.getCurrentTabIndex();

  02e1f	48 98		 cdqe
  02e21	e9 e3 1f 00 00	 jmp	 $LN1@process
$LN317@process:

; 1375 : 			}
; 1376 : 			else //MAIN_VIEW
; 1377 : 			{
; 1378 : 				if (!viewVisible(MAIN_VIEW))

  02e26	33 d2		 xor	 edx, edx
  02e28	e8 00 00 00 00	 call	 ?viewVisible@Notepad_plus@@AEAA_NH@Z ; Notepad_plus::viewVisible
  02e2d	84 c0		 test	 al, al
  02e2f	0f 84 f1 02 00
	00		 je	 $LN394@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h

; 70   : 		return static_cast<int32_t>(SendMessage(_hSelf, TCM_GETCURSEL, 0, 0));

  02e35	45 33 c9	 xor	 r9d, r9d
  02e38	45 33 c0	 xor	 r8d, r8d
  02e3b	ba 0b 13 00 00	 mov	 edx, 4875		; 0000130bH
  02e40	48 8b 8b a8 04
	00 00		 mov	 rcx, QWORD PTR [rbx+1192]
  02e47	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1380 : 				return _mainDocTab.getCurrentTabIndex();

  02e4d	48 98		 cdqe
  02e4f	e9 b5 1f 00 00	 jmp	 $LN1@process
$LN318@process:

; 1381 : 			}
; 1382 : 		}
; 1383 : 
; 1384 : 		case NPPM_SETSTATUSBAR:
; 1385 : 		{
; 1386 : 			TCHAR *str2set = reinterpret_cast<TCHAR *>(lParam);
; 1387 : 			if (!str2set || !str2set[0])

  02e54	48 85 f6	 test	 rsi, rsi
  02e57	0f 84 5a d3 ff
	ff		 je	 $LN2622@process
  02e5d	66 44 39 36	 cmp	 WORD PTR [rsi], r14w
  02e61	0f 84 50 d3 ff
	ff		 je	 $LN2622@process

; 1388 : 				return FALSE;
; 1389 : 
; 1390 : 			switch (wParam)

  02e67	49 83 ff 05	 cmp	 r15, 5
  02e6b	0f 87 46 d3 ff
	ff		 ja	 $LN2622@process
  02e71	43 8b 84 b8 00
	00 00 00	 mov	 eax, DWORD PTR $LN2635@process[r8+r15*4]
  02e79	49 03 c0	 add	 rax, r8
  02e7c	ff e0		 jmp	 rax
$LN324@process:

; 1391 : 			{
; 1392 : 				case STATUSBAR_DOC_TYPE:
; 1393 : 				case STATUSBAR_DOC_SIZE:
; 1394 : 				case STATUSBAR_CUR_POS:
; 1395 : 				case STATUSBAR_EOF_FORMAT:
; 1396 : 				case STATUSBAR_UNICODE_TYPE:
; 1397 : 				case STATUSBAR_TYPING_MODE:
; 1398 : 					_statusBar.setText(str2set, static_cast<int32_t>(wParam));

  02e7e	48 8d 8b d0 0b
	00 00		 lea	 rcx, QWORD PTR [rbx+3024]
  02e85	45 8b c7	 mov	 r8d, r15d
  02e88	48 8b d6	 mov	 rdx, rsi
  02e8b	e8 00 00 00 00	 call	 ?setText@StatusBar@@QEAA_NPEB_WH@Z ; StatusBar::setText

; 2748 : }

  02e90	49 8b c4	 mov	 rax, r12
  02e93	e9 71 1f 00 00	 jmp	 $LN1@process
$LN331@process:

; 1399 : 					return TRUE;
; 1400 : 				default :
; 1401 : 					return FALSE;
; 1402 : 			}
; 1403 : 		}
; 1404 : 
; 1405 : 		case NPPM_GETMENUHANDLE:
; 1406 : 		{
; 1407 : 			if (wParam == NPPPLUGINMENU)

  02e98	4d 85 ff	 test	 r15, r15
  02e9b	75 0c		 jne	 SHORT $LN332@process

; 1408 : 				return (LRESULT)_pluginsManager.getMenuHandle();

  02e9d	48 8b 83 f8 7b
	09 00		 mov	 rax, QWORD PTR [rbx+621560]
  02ea4	e9 60 1f 00 00	 jmp	 $LN1@process
$LN332@process:

; 1409 : 			else if (wParam == NPPMAINMENU)

  02ea9	4d 3b fc	 cmp	 r15, r12
  02eac	0f 85 05 d3 ff
	ff		 jne	 $LN2622@process
$LN507@process:

; 2748 : }

  02eb2	48 8b 83 78 7a
	09 00		 mov	 rax, QWORD PTR [rbx+621176]
  02eb9	e9 4b 1f 00 00	 jmp	 $LN1@process
$LN335@process:

; 1410 : 				return (LRESULT)_mainMenuHandle;
; 1411 : 			else
; 1412 : 				return NULL;
; 1413 : 		}
; 1414 : 
; 1415 : 		case NPPM_LOADSESSION:
; 1416 : 		{
; 1417 : 			fileLoadSession(reinterpret_cast<const TCHAR *>(lParam));

  02ebe	48 8b d6	 mov	 rdx, rsi
  02ec1	48 8b cb	 mov	 rcx, rbx
  02ec4	e8 00 00 00 00	 call	 ?fileLoadSession@Notepad_plus@@QEAA_NPEB_W@Z ; Notepad_plus::fileLoadSession

; 2748 : }

  02ec9	49 8b c4	 mov	 rax, r12
  02ecc	e9 38 1f 00 00	 jmp	 $LN1@process
$LN337@process:

; 1418 : 			return TRUE;
; 1419 : 		}
; 1420 : 
; 1421 : 		case NPPM_SAVECURRENTSESSION:
; 1422 : 		{
; 1423 : 			return (LRESULT)fileSaveSession(0, NULL, reinterpret_cast<const TCHAR *>(lParam));

  02ed1	44 88 74 24 20	 mov	 BYTE PTR [rsp+32], r14b
  02ed6	4c 8b ce	 mov	 r9, rsi
  02ed9	45 33 c0	 xor	 r8d, r8d
  02edc	33 d2		 xor	 edx, edx
  02ede	48 8b cb	 mov	 rcx, rbx
  02ee1	e8 00 00 00 00	 call	 ?fileSaveSession@Notepad_plus@@QEAAPEB_W_KPEAPEA_WPEB_W_N@Z ; Notepad_plus::fileSaveSession
  02ee6	e9 1e 1f 00 00	 jmp	 $LN1@process
$LN338@process:

; 1424 : 		}
; 1425 : 
; 1426 : 		case NPPM_SAVESESSION:
; 1427 : 		{
; 1428 : 			sessionInfo *pSi = reinterpret_cast<sessionInfo *>(lParam);
; 1429 : 			return (LRESULT)fileSaveSession(pSi->nbFile, pSi->files, pSi->sessionFilePathName);

  02eeb	48 63 56 08	 movsxd	 rdx, DWORD PTR [rsi+8]
  02eef	44 88 74 24 20	 mov	 BYTE PTR [rsp+32], r14b
  02ef4	4c 8b 0e	 mov	 r9, QWORD PTR [rsi]
  02ef7	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  02efb	48 8b cb	 mov	 rcx, rbx
  02efe	e8 00 00 00 00	 call	 ?fileSaveSession@Notepad_plus@@QEAAPEB_W_KPEAPEA_WPEB_W_N@Z ; Notepad_plus::fileSaveSession
  02f03	e9 01 1f 00 00	 jmp	 $LN1@process
$LN352@process:

; 1501 : 		}
; 1502 : 
; 1503 : 		case NPPM_SETSMOOTHFONT:
; 1504 : 		{
; 1505 : 			int param = (lParam == 0 ? SC_EFF_QUALITY_DEFAULT : SC_EFF_QUALITY_LCD_OPTIMIZED);
; 1506 : 			_mainEditView.execute(SCI_SETFONTQUALITY, param);

  02f08	48 f7 de	 neg	 rsi
  02f0b	48 1b ff	 sbb	 rdi, rdi
  02f0e	83 e7 03	 and	 edi, 3
  02f11	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  02f18	45 33 c9	 xor	 r9d, r9d
  02f1b	44 8b c7	 mov	 r8d, edi
  02f1e	ba 33 0a 00 00	 mov	 edx, 2611		; 00000a33H
  02f23	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 1507 : 			_subEditView.execute(SCI_SETFONTQUALITY, param);

  02f28	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  02f2f	45 33 c9	 xor	 r9d, r9d
  02f32	44 8b c7	 mov	 r8d, edi
  02f35	ba 33 0a 00 00	 mov	 edx, 2611		; 00000a33H
  02f3a	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 2748 : }

  02f3f	49 8b c4	 mov	 rax, r12
  02f42	e9 c2 1e 00 00	 jmp	 $LN1@process
$LN353@process:

; 1514 : 			if (NppDarkMode::isEnabled()) 

  02f47	48 8d bb f0 06
	00 00		 lea	 rdi, QWORD PTR [rbx+1776]
  02f4e	4c 8d b3 50 06
	00 00		 lea	 r14, QWORD PTR [rbx+1616]
  02f55	e8 00 00 00 00	 call	 ?isEnabled@NppDarkMode@@YA_NXZ ; NppDarkMode::isEnabled
  02f5a	84 c0		 test	 al, al
  02f5c	74 04		 je	 SHORT $LN354@process

; 1515 : 			{
; 1516 : 				_mainEditView.setBorderEdge(false);
; 1517 : 				_subEditView.setBorderEdge(false);

  02f5e	32 db		 xor	 bl, bl

; 1518 : 			}

  02f60	eb 06		 jmp	 SHORT $LN355@process
$LN354@process:

; 1508 : 			return TRUE;
; 1509 : 		}
; 1510 : 
; 1511 : 		case NPPM_SETEDITORBORDEREDGE:
; 1512 : 		{
; 1513 : 			bool withBorderEdge = (lParam == 1);

  02f62	49 3b f4	 cmp	 rsi, r12
  02f65	0f 94 c3	 sete	 bl
$LN355@process:

; 1519 : 			else
; 1520 : 			{
; 1521 : 				_mainEditView.setBorderEdge(withBorderEdge);
; 1522 : 				_subEditView.setBorderEdge(withBorderEdge);
; 1523 : 			}
; 1524 : 			return TRUE;

  02f68	0f b6 d3	 movzx	 edx, bl
  02f6b	48 8b cf	 mov	 rcx, rdi
  02f6e	e8 00 00 00 00	 call	 ?setBorderEdge@ScintillaEditView@@QEAAX_N@Z ; ScintillaEditView::setBorderEdge
  02f73	0f b6 d3	 movzx	 edx, bl
  02f76	49 8b ce	 mov	 rcx, r14
  02f79	e8 00 00 00 00	 call	 ?setBorderEdge@ScintillaEditView@@QEAAX_N@Z ; ScintillaEditView::setBorderEdge

; 2748 : }

  02f7e	49 8b c4	 mov	 rax, r12
  02f81	e9 83 1e 00 00	 jmp	 $LN1@process
$LN361@process:

; 1561 : 		}
; 1562 : 
; 1563 : 		// ADD: success->hwnd; failure->NULL
; 1564 : 		// REMOVE: success->NULL; failure->hwnd
; 1565 : 		case NPPM_MODELESSDIALOG:
; 1566 : 		{
; 1567 : 			if (wParam == MODELESSDIALOGADD)

  02f86	4d 85 ff	 test	 r15, r15
  02f89	75 68		 jne	 SHORT $LN362@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1548 :         auto& _My_data = _Mypair._Myval2;

  02f8b	48 81 c3 e0 79
	09 00		 add	 rbx, 621024		; 000979e0H

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  02f92	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  02f96	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  02f99	48 8b ca	 mov	 rcx, rdx
  02f9c	48 2b c8	 sub	 rcx, rax
  02f9f	48 c1 f9 03	 sar	 rcx, 3
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1569 : 				for (size_t i = 0, len = _hModelessDlgs.size() ; i < len ; ++i)

  02fa3	48 85 c9	 test	 rcx, rcx
  02fa6	74 1d		 je	 SHORT $LN48@process
  02fa8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL49@process:

; 1570 : 				{
; 1571 : 					if (_hModelessDlgs[i] == reinterpret_cast<HWND>(lParam))

  02fb0	48 39 30	 cmp	 QWORD PTR [rax], rsi
  02fb3	0f 84 fe d1 ff
	ff		 je	 $LN2622@process

; 1569 : 				for (size_t i = 0, len = _hModelessDlgs.size() ; i < len ; ++i)

  02fb9	49 ff c6	 inc	 r14
  02fbc	48 83 c0 08	 add	 rax, 8
  02fc0	4c 3b f1	 cmp	 r14, rcx
  02fc3	72 eb		 jb	 SHORT $LL49@process
$LN48@process:

; 1572 : 						return NULL;
; 1573 : 				}
; 1574 : 
; 1575 : 				_hModelessDlgs.push_back(reinterpret_cast<HWND>(lParam));

  02fc5	48 89 75 f0	 mov	 QWORD PTR $T43[rbp-256], rsi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  02fc9	48 3b 53 10	 cmp	 rdx, QWORD PTR [rbx+16]
  02fcd	74 10		 je	 SHORT $LN1769@process

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  02fcf	48 89 32	 mov	 QWORD PTR [rdx], rsi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  02fd2	48 83 43 08 08	 add	 QWORD PTR [rbx+8], 8
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  02fd7	48 8b c6	 mov	 rax, rsi
  02fda	e9 2a 1e 00 00	 jmp	 $LN1@process
$LN1769@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  02fdf	4c 8d 45 f0	 lea	 r8, QWORD PTR $T43[rbp-256]
  02fe3	48 8b cb	 mov	 rcx, rbx
  02fe6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@PEAUHWND__@@@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@QEAAPEAPEAUHWND__@@QEAPEAU2@$$QEAPEAU2@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Emplace_reallocate<HWND__ *>
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  02feb	48 8b c6	 mov	 rax, rsi
  02fee	e9 16 1e 00 00	 jmp	 $LN1@process
$LN362@process:

; 1576 : 				return lParam;
; 1577 : 			}
; 1578 : 			else
; 1579 : 			{
; 1580 : 				if (wParam == MODELESSDIALOGREMOVE)

  02ff3	4d 3b fc	 cmp	 r15, r12
  02ff6	0f 85 06 e1 ff
	ff		 jne	 $LN2695@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  02ffc	48 8b 83 e0 79
	09 00		 mov	 rax, QWORD PTR [rbx+621024]
  03003	48 8b 8b e8 79
	09 00		 mov	 rcx, QWORD PTR [rbx+621032]
  0300a	48 2b c8	 sub	 rcx, rax
  0300d	48 c1 f9 03	 sar	 rcx, 3
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1582 : 					for (size_t i = 0, len = _hModelessDlgs.size(); i < len ; ++i)

  03011	48 85 c9	 test	 rcx, rcx
  03014	0f 84 61 f6 ff
	ff		 je	 $LN51@process
  0301a	66 0f 1f 44 00
	00		 npad	 6
$LL52@process:

; 1583 : 					{
; 1584 : 						if (_hModelessDlgs[i] == reinterpret_cast<HWND>(lParam))

  03020	48 39 30	 cmp	 QWORD PTR [rax], rsi
  03023	74 14		 je	 SHORT $LN2467@process

; 1582 : 					for (size_t i = 0, len = _hModelessDlgs.size(); i < len ; ++i)

  03025	49 ff c6	 inc	 r14
  03028	48 83 c0 08	 add	 rax, 8
  0302c	4c 3b f1	 cmp	 r14, rcx
  0302f	72 ef		 jb	 SHORT $LL52@process

; 2748 : }

  03031	48 8b c6	 mov	 rax, rsi
  03034	e9 d0 1d 00 00	 jmp	 $LN1@process
$LN2467@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 123  :         _Ptr += _Off;

  03039	48 8b 83 e0 79
	09 00		 mov	 rax, QWORD PTR [rbx+621024]
  03040	4a 8d 0c f0	 lea	 rcx, QWORD PTR [rax+r14*8]

; 1419 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  03044	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4160 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  03048	4c 8b 83 e8 79
	09 00		 mov	 r8, QWORD PTR [rbx+621032]
  0304f	4c 2b c2	 sub	 r8, rdx

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  03052	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1421 :         --_Mylast;

  03057	48 83 83 e8 79
	09 00 f8	 add	 QWORD PTR [rbx+621032], -8
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1588 : 							return NULL;

  0305f	33 c0		 xor	 eax, eax
  03061	e9 a3 1d 00 00	 jmp	 $LN1@process
$LN383@process:

; 1669 : 			}
; 1670 : 			return FALSE;
; 1671 : 		}
; 1672 : 
; 1673 : 		case NPPM_INTERNAL_CHECKDOCSTATUS:
; 1674 : 		{
; 1675 : 			// This is an workaround to deal with Microsoft issue in ReadDirectoryChanges notification
; 1676 : 			// If command prompt is used to write file continuously (e.g. ping -t 8.8.8.8 > ping.log)
; 1677 : 			// Then ReadDirectoryChanges does not detect the change.
; 1678 : 			// Fortunately, notification is sent if right click or double click happens on that file
; 1679 : 			// Let's leverage this as workaround to enhance npp file monitoring functionality.
; 1680 : 			// So calling "PathFileExists" is a workaround here.
; 1681 : 
; 1682 : 			Buffer* currBuf = getCurrentBuffer();

  03066	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  0306d	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]

; 1683 : 			if (currBuf && currBuf->isMonitoringOn())

  03071	48 85 c9	 test	 rcx, rcx
  03074	74 20		 je	 SHORT $LN384@process
  03076	44 38 b1 10 01
	00 00		 cmp	 BYTE PTR [rcx+272], r14b
  0307d	74 17		 je	 SHORT $LN384@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  0307f	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H

; 2319 :         return _BUF_SIZE <= _Myres;

  03086	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  0308b	72 03		 jb	 SHORT $LN1824@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0308d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN1824@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1684 : 				::PathFileExists(currBuf->getFullPathName());

  03090	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFileExistsW
$LN384@process:

; 1685 : 
; 1686 : 			const NppGUI & nppgui = nppParam.getNppGUI();
; 1687 : 			if (nppgui._fileAutoDetection != cdDisabled)

  03096	41 8b 85 ac 00
	00 00		 mov	 eax, DWORD PTR [r13+172]
  0309d	85 c0		 test	 eax, eax
  0309f	0f 84 12 d1 ff
	ff		 je	 $LN2622@process

; 1688 : 			{
; 1689 : 				bool bCheckOnlyCurrentBuffer = (nppgui._fileAutoDetection & cdEnabledNew) ? true : false;

  030a5	d1 e8		 shr	 eax, 1
  030a7	41 22 c4	 and	 al, r12b

; 1690 : 
; 1691 : 				checkModifiedDocument(bCheckOnlyCurrentBuffer);

  030aa	0f b6 d0	 movzx	 edx, al
  030ad	48 8b cb	 mov	 rcx, rbx
  030b0	e8 00 00 00 00	 call	 ?checkModifiedDocument@Notepad_plus@@AEAAX_N@Z ; Notepad_plus::checkModifiedDocument

; 2748 : }

  030b5	49 8b c4	 mov	 rax, r12
  030b8	e9 4c 1d 00 00	 jmp	 $LN1@process
$LN388@process:

; 1708 : 			return TRUE;
; 1709 : 		}
; 1710 : 
; 1711 : 		case NPPM_GETPOSFROMBUFFERID:
; 1712 : 		{
; 1713 : 			int i;
; 1714 : 
; 1715 : 			if (lParam == SUB_VIEW)

  030bd	49 8b d7	 mov	 rdx, r15
  030c0	49 3b f4	 cmp	 rsi, r12
  030c3	75 38		 jne	 SHORT $LN389@process

; 1716 : 			{
; 1717 : 				if ((i = _subDocTab.getIndexByBuffer((BufferID)wParam)) != -1)

  030c5	48 8d 8b 68 05
	00 00		 lea	 rcx, QWORD PTR [rbx+1384]
  030cc	e8 00 00 00 00	 call	 ?getIndexByBuffer@DocTabView@@QEAAHPEAVBuffer@@@Z ; DocTabView::getIndexByBuffer
  030d1	83 f8 ff	 cmp	 eax, -1
  030d4	74 0c		 je	 SHORT $LN391@process
$LN2705@process:

; 2748 : }

  030d6	48 98		 cdqe
  030d8	48 0f ba e8 1e	 bts	 rax, 30
  030dd	e9 27 1d 00 00	 jmp	 $LN1@process
$LN391@process:

; 1718 : 				{
; 1719 : 					long view = SUB_VIEW;
; 1720 : 					view <<= 30;
; 1721 : 					return view|i;
; 1722 : 				}
; 1723 : 				if ((i = _mainDocTab.getIndexByBuffer((BufferID)wParam)) != -1)

  030e2	48 8d 8b 90 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1168]
  030e9	49 8b d7	 mov	 rdx, r15
  030ec	e8 00 00 00 00	 call	 ?getIndexByBuffer@DocTabView@@QEAAHPEAVBuffer@@@Z ; DocTabView::getIndexByBuffer
  030f1	83 f8 ff	 cmp	 eax, -1
  030f4	74 30		 je	 SHORT $LN394@process

; 1724 : 				{
; 1725 : 					long view = MAIN_VIEW;
; 1726 : 					view <<= 30;
; 1727 : 					return view|i;

  030f6	48 98		 cdqe
  030f8	e9 0c 1d 00 00	 jmp	 $LN1@process
$LN389@process:

; 1728 : 				}
; 1729 : 			}
; 1730 : 			else
; 1731 : 			{
; 1732 : 				if ((i = _mainDocTab.getIndexByBuffer((BufferID)wParam)) != -1)

  030fd	48 8d 8b 90 04
	00 00		 lea	 rcx, QWORD PTR [rbx+1168]
  03104	e8 00 00 00 00	 call	 ?getIndexByBuffer@DocTabView@@QEAAHPEAVBuffer@@@Z ; DocTabView::getIndexByBuffer
  03109	83 f8 ff	 cmp	 eax, -1
  0310c	0f 85 bd 13 00
	00		 jne	 $LN2703@process

; 1733 : 				{
; 1734 : 					long view = MAIN_VIEW;
; 1735 : 					view <<= 30;
; 1736 : 					return view|i;
; 1737 : 				}
; 1738 : 				if ((i = _subDocTab.getIndexByBuffer((BufferID)wParam)) != -1)

  03112	48 8d 8b 68 05
	00 00		 lea	 rcx, QWORD PTR [rbx+1384]
  03119	49 8b d7	 mov	 rdx, r15
  0311c	e8 00 00 00 00	 call	 ?getIndexByBuffer@DocTabView@@QEAAHPEAVBuffer@@@Z ; DocTabView::getIndexByBuffer
  03121	83 f8 ff	 cmp	 eax, -1
  03124	75 b0		 jne	 SHORT $LN2705@process
$LN394@process:

; 1739 : 				{
; 1740 : 					long view = SUB_VIEW;
; 1741 : 					view <<= 30;
; 1742 : 					return view|i;
; 1743 : 				}
; 1744 : 			}
; 1745 : 			return -1;

  03126	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  0312d	e9 d7 1c 00 00	 jmp	 $LN1@process
$LN395@process:

; 1746 : 		}
; 1747 : 
; 1748 : 		case NPPM_GETFULLPATHFROMBUFFERID:
; 1749 : 		{
; 1750 : 			return MainFileManager.getFileNameFromBuffer(reinterpret_cast<BufferID>(wParam), reinterpret_cast<TCHAR *>(lParam));

  03132	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03137	48 8b c8	 mov	 rcx, rax
  0313a	4c 8b c6	 mov	 r8, rsi
  0313d	49 8b d7	 mov	 rdx, r15
  03140	e8 00 00 00 00	 call	 ?getFileNameFromBuffer@FileManager@@QEAAHPEAVBuffer@@PEA_W@Z ; FileManager::getFileNameFromBuffer
  03145	48 98		 cdqe
  03147	e9 bd 1c 00 00	 jmp	 $LN1@process
$LN396@process:

; 1751 : 		}
; 1752 : 
; 1753 : 		case NPPM_INTERNAL_ENABLECHECKDOCOPT:
; 1754 : 		{
; 1755 : 			NppGUI& nppgui = nppParam.getNppGUI();

  0314c	4d 85 ff	 test	 r15, r15

; 1756 : 			if (wParam == CHECKDOCOPT_NONE)

  0314f	75 0f		 jne	 SHORT $LN397@process

; 1757 : 				nppgui._fileAutoDetection = cdDisabled;

  03151	45 89 b5 ac 00
	00 00		 mov	 DWORD PTR [r13+172], r14d

; 2748 : }

  03158	49 8b c4	 mov	 rax, r12
  0315b	e9 a9 1c 00 00	 jmp	 $LN1@process
$LN397@process:

; 1758 : 			else if (wParam == CHECKDOCOPT_UPDATESILENTLY)

  03160	4d 3b fc	 cmp	 r15, r12
  03163	75 13		 jne	 SHORT $LN399@process

; 1759 : 				nppgui._fileAutoDetection = (cdEnabledOld | cdAutoUpdate);

  03165	41 c7 85 ac 00
	00 00 05 00 00
	00		 mov	 DWORD PTR [r13+172], 5

; 2748 : }

  03170	49 8b c4	 mov	 rax, r12
  03173	e9 91 1c 00 00	 jmp	 $LN1@process
$LN399@process:

; 1760 : 			else if (wParam == CHECKDOCOPT_UPDATEGO2END)

  03178	49 83 ff 02	 cmp	 r15, 2
  0317c	75 13		 jne	 SHORT $LN401@process

; 1761 : 				nppgui._fileAutoDetection = (cdEnabledOld | cdGo2end);

  0317e	41 c7 85 ac 00
	00 00 09 00 00
	00		 mov	 DWORD PTR [r13+172], 9

; 2748 : }

  03189	49 8b c4	 mov	 rax, r12
  0318c	e9 78 1c 00 00	 jmp	 $LN1@process
$LN401@process:

; 1762 : 			else if (wParam == (CHECKDOCOPT_UPDATESILENTLY | CHECKDOCOPT_UPDATEGO2END))

  03191	49 83 ff 03	 cmp	 r15, 3
  03195	0f 85 67 df ff
	ff		 jne	 $LN2695@process

; 1763 : 				nppgui._fileAutoDetection = (cdEnabledOld | cdGo2end | cdAutoUpdate);

  0319b	41 c7 85 ac 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR [r13+172], 13

; 2748 : }

  031a6	49 8b c4	 mov	 rax, r12
  031a9	e9 5b 1c 00 00	 jmp	 $LN1@process
$LN456@process:

; 2100 : 					return TRUE;
; 2101 : 				}
; 2102 : 			}
; 2103 : 			return TRUE;
; 2104 : 		}
; 2105 : 
; 2106 : 		case NPPM_DMMSHOW:
; 2107 : 		{
; 2108 : 			_dockingManager.showDockableDlg(reinterpret_cast<HWND>(lParam), SW_SHOW);

  031ae	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  031b2	41 b8 05 00 00
	00		 mov	 r8d, 5
  031b8	48 8b d6	 mov	 rdx, rsi
  031bb	e8 00 00 00 00	 call	 ?showDockableDlg@DockingManager@@QEAAXPEAUHWND__@@H@Z ; DockingManager::showDockableDlg

; 2748 : }

  031c0	49 8b c4	 mov	 rax, r12
  031c3	e9 41 1c 00 00	 jmp	 $LN1@process
$LN457@process:

; 2109 : 			return TRUE;
; 2110 : 		}
; 2111 : 
; 2112 : 		case NPPM_DMMHIDE:
; 2113 : 		{
; 2114 : 			_dockingManager.showDockableDlg(reinterpret_cast<HWND>(lParam), SW_HIDE);

  031c8	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  031cc	45 33 c0	 xor	 r8d, r8d
  031cf	48 8b d6	 mov	 rdx, rsi
  031d2	e8 00 00 00 00	 call	 ?showDockableDlg@DockingManager@@QEAAXPEAUHWND__@@H@Z ; DockingManager::showDockableDlg

; 2748 : }

  031d7	49 8b c4	 mov	 rax, r12
  031da	e9 2a 1c 00 00	 jmp	 $LN1@process
$LN458@process:

; 2115 : 			return TRUE;
; 2116 : 		}
; 2117 : 
; 2118 : 		case NPPM_DMMUPDATEDISPINFO:
; 2119 : 		{
; 2120 : 			if (::IsWindowVisible(reinterpret_cast<HWND>(lParam)))

  031df	48 8b ce	 mov	 rcx, rsi
  031e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IsWindowVisible
  031e8	85 c0		 test	 eax, eax
  031ea	0f 84 12 df ff
	ff		 je	 $LN2695@process

; 2121 : 				_dockingManager.updateContainerInfo(reinterpret_cast<HWND>(lParam));

  031f0	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  031f4	48 8b d6	 mov	 rdx, rsi
  031f7	e8 00 00 00 00	 call	 ?updateContainerInfo@DockingManager@@QEAAXPEAUHWND__@@@Z ; DockingManager::updateContainerInfo

; 2748 : }

  031fc	49 8b c4	 mov	 rax, r12
  031ff	e9 05 1c 00 00	 jmp	 $LN1@process
$LN460@process:

; 2122 : 			return TRUE;
; 2123 : 		}
; 2124 : 
; 2125 : 		case NPPM_DMMREGASDCKDLG:
; 2126 : 		{
; 2127 : 			tTbData *pData = reinterpret_cast<tTbData *>(lParam);
; 2128 : 			int		iCont	= -1;

  03204	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  0320b	89 7c 24 50	 mov	 DWORD PTR iCont$5[rsp], edi

; 2129 : 			bool	isVisible	= false;

  0320f	44 88 74 24 40	 mov	 BYTE PTR isVisible$2[rsp], r14b

; 2130 : 
; 2131 : 			getIntegralDockingData(*pData, iCont, isVisible);

  03214	4c 8d 4c 24 40	 lea	 r9, QWORD PTR isVisible$2[rsp]
  03219	4c 8d 44 24 50	 lea	 r8, QWORD PTR iCont$5[rsp]
  0321e	48 8b d6	 mov	 rdx, rsi
  03221	48 8b cb	 mov	 rcx, rbx
  03224	e8 00 00 00 00	 call	 ?getIntegralDockingData@Notepad_plus@@AEAA_NAEAUtTbData@@AEAHAEA_N@Z ; Notepad_plus::getIntegralDockingData

; 2132 : 			_dockingManager.createDockableDlg(*pData, iCont, isVisible);

  03229	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  0322c	0f 29 45 a0	 movaps	 XMMWORD PTR $T18[rbp-256], xmm0
  03230	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  03234	0f 29 4d b0	 movaps	 XMMWORD PTR $T18[rbp-240], xmm1
  03238	0f 10 46 20	 movups	 xmm0, XMMWORD PTR [rsi+32]
  0323c	0f 29 45 c0	 movaps	 XMMWORD PTR $T18[rbp-224], xmm0
  03240	0f 10 4e 30	 movups	 xmm1, XMMWORD PTR [rsi+48]
  03244	0f 29 4d d0	 movaps	 XMMWORD PTR $T18[rbp-208], xmm1
  03248	f2 0f 10 46 40	 movsd	 xmm0, QWORD PTR [rsi+64]
  0324d	f2 0f 11 45 e0	 movsd	 QWORD PTR $T18[rbp-192], xmm0
  03252	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  03256	44 0f b6 4c 24
	40		 movzx	 r9d, BYTE PTR isVisible$2[rsp]
  0325c	44 8b 44 24 50	 mov	 r8d, DWORD PTR iCont$5[rsp]
  03261	48 8d 55 a0	 lea	 rdx, QWORD PTR $T18[rbp-256]
  03265	e8 00 00 00 00	 call	 ?createDockableDlg@DockingManager@@QEAAXUtTbData@@H_N@Z ; DockingManager::createDockableDlg

; 2748 : }

  0326a	49 8b c4	 mov	 rax, r12
  0326d	e9 97 1b 00 00	 jmp	 $LN1@process
$LN461@process:

; 2133 : 			return TRUE;
; 2134 : 		}
; 2135 : 
; 2136 : 		case NPPM_DMMVIEWOTHERTAB:
; 2137 : 		{
; 2138 : 			_dockingManager.showDockableDlg(reinterpret_cast<TCHAR *>(lParam), SW_SHOW);

  03272	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  03276	41 b8 05 00 00
	00		 mov	 r8d, 5
  0327c	48 8b d6	 mov	 rdx, rsi
  0327f	e8 00 00 00 00	 call	 ?showDockableDlg@DockingManager@@QEAAXPEA_WH@Z ; DockingManager::showDockableDlg

; 2748 : }

  03284	49 8b c4	 mov	 rax, r12
  03287	e9 7d 1b 00 00	 jmp	 $LN1@process
$LN462@process:

; 2139 : 			return TRUE;
; 2140 : 		}
; 2141 : 
; 2142 : 		case NPPM_DMMGETPLUGINHWNDBYNAME : //(const TCHAR *windowName, const TCHAR *moduleName)
; 2143 : 		{
; 2144 : 			if (!lParam)

  0328c	48 85 f6	 test	 rsi, rsi
  0328f	0f 84 22 cf ff
	ff		 je	 $LN2622@process
  03295	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  03298	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR dockContainer$10[rbp-256], xmm0
  0329d	4c 89 75 90	 mov	 QWORD PTR dockContainer$10[rbp-240], r14

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  032a1	4c 8b ab 80 00
	00 00		 mov	 r13, QWORD PTR [rbx+128]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  032a8	4c 8b a3 88 00
	00 00		 mov	 r12, QWORD PTR [rbx+136]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  032af	4d 3b ec	 cmp	 r13, r12
  032b2	74 62		 je	 SHORT $LN2051@process

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  032b4	4d 2b e5	 sub	 r12, r13
  032b7	49 8b fc	 mov	 rdi, r12
  032ba	48 c1 ff 03	 sar	 rdi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  032be	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  032c8	48 3b f8	 cmp	 rdi, rax
  032cb	0f 87 f8 1b 00
	00		 ja	 $LN2721@process

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  032d1	48 8d 3c fd 00
	00 00 00	 lea	 rdi, QWORD PTR [rdi*8]

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  032d9	48 8b cf	 mov	 rcx, rdi
  032dc	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  032e1	48 89 45 80	 mov	 QWORD PTR dockContainer$10[rbp-256], rax

; 1713 :         _Mylast            = _Newvec;

  032e5	48 89 45 88	 mov	 QWORD PTR dockContainer$10[rbp-248], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  032e9	48 03 c7	 add	 rax, rdi
  032ec	48 89 45 90	 mov	 QWORD PTR dockContainer$10[rbp-240], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  032f0	48 8d 45 80	 lea	 rax, QWORD PTR dockContainer$10[rbp-256]
  032f4	48 89 45 f0	 mov	 QWORD PTR _Guard$36[rbp-256], rax

; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  032f8	48 8b 5d 80	 mov	 rbx, QWORD PTR dockContainer$10[rbp-256]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  032fc	4d 8b c4	 mov	 r8, r12
  032ff	49 8b d5	 mov	 rdx, r13
  03302	48 8b cb	 mov	 rcx, rbx
  03305	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1644 :             _Dest += _ULast - _UFirst;

  0330a	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  0330e	48 89 45 88	 mov	 QWORD PTR dockContainer$10[rbp-248], rax

; 566  :             _Guard._Target   = nullptr;

  03312	4c 89 75 f0	 mov	 QWORD PTR _Guard$36[rbp-256], r14
$LN2051@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2151 : 			for (size_t i = 0, len = dockContainer.size(); i < len ; ++i)

  03316	4d 8b e6	 mov	 r12, r14
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  03319	4c 8b 6d 88	 mov	 r13, QWORD PTR dockContainer$10[rbp-248]
  0331d	48 8b 4d 80	 mov	 rcx, QWORD PTR dockContainer$10[rbp-256]
  03321	4c 2b e9	 sub	 r13, rcx
  03324	49 c1 fd 03	 sar	 r13, 3
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2151 : 			for (size_t i = 0, len = dockContainer.size(); i < len ; ++i)

  03328	4d 85 ed	 test	 r13, r13
  0332b	0f 84 33 02 00
	00		 je	 $LN2624@process
$LL57@process:

; 2152 : 			{
; 2153 : 				std::vector<tTbData *> tbData = dockContainer[i]->getDataOfAllTb();

  03331	48 8d 55 f0	 lea	 rdx, QWORD PTR tbData$40[rbp-256]
  03335	4a 8b 0c e1	 mov	 rcx, QWORD PTR [rcx+r12*8]
  03339	e8 00 00 00 00	 call	 ?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfAllTb
  0333e	90		 npad	 1

; 2154 : 				for (size_t j = 0, len2 = tbData.size() ; j < len2 ; ++j)

  0333f	49 8b de	 mov	 rbx, r14
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  03342	48 8b 7d f8	 mov	 rdi, QWORD PTR tbData$40[rbp-248]
  03346	48 8b 55 f0	 mov	 rdx, QWORD PTR tbData$40[rbp-256]
  0334a	48 2b fa	 sub	 rdi, rdx
  0334d	48 c1 ff 03	 sar	 rdi, 3
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2154 : 				for (size_t j = 0, len2 = tbData.size() ; j < len2 ; ++j)

  03351	48 85 ff	 test	 rdi, rdi
  03354	74 4d		 je	 SHORT $LN2677@process
  03356	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL60@process:

; 2155 : 				{
; 2156 : 					if (generic_stricmp(moduleName, tbData[j]->pszModuleName) == 0)

  03360	48 8b 14 da	 mov	 rdx, QWORD PTR [rdx+rbx*8]
  03364	48 8b 52 40	 mov	 rdx, QWORD PTR [rdx+64]
  03368	48 8b ce	 mov	 rcx, rsi
  0336b	e8 00 00 00 00	 call	 wcsicmp
  03370	85 c0		 test	 eax, eax
  03372	75 21		 jne	 SHORT $LN58@process

; 2157 : 					{
; 2158 : 						if (!windowName)

  03374	48 8b 45 f0	 mov	 rax, QWORD PTR tbData$40[rbp-256]
  03378	4d 85 ff	 test	 r15, r15
  0337b	0f 84 38 01 00
	00		 je	 $LN2468@process

; 2160 : 
; 2161 : 						if (generic_stricmp(windowName, tbData[j]->pszName) == 0)

  03381	48 8b 14 d8	 mov	 rdx, QWORD PTR [rax+rbx*8]
  03385	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  03389	49 8b cf	 mov	 rcx, r15
  0338c	e8 00 00 00 00	 call	 wcsicmp
  03391	85 c0		 test	 eax, eax
  03393	74 75		 je	 SHORT $LN2469@process
$LN58@process:

; 2154 : 				for (size_t j = 0, len2 = tbData.size() ; j < len2 ; ++j)

  03395	48 ff c3	 inc	 rbx
  03398	48 3b df	 cmp	 rbx, rdi
  0339b	73 06		 jae	 SHORT $LN2677@process
  0339d	48 8b 55 f0	 mov	 rdx, QWORD PTR tbData$40[rbp-256]
  033a1	eb bd		 jmp	 SHORT $LL60@process
$LN2677@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  033a3	48 8b 4d f0	 mov	 rcx, QWORD PTR tbData$40[rbp-256]
  033a7	48 85 c9	 test	 rcx, rcx
  033aa	74 49		 je	 SHORT $LN55@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  033ac	48 8b 45 00	 mov	 rax, QWORD PTR tbData$40[rbp-240]
  033b0	48 2b c1	 sub	 rax, rcx
  033b3	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  033b7	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]
  033bf	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  033c2	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  033c9	72 19		 jb	 SHORT $LN2223@process

; 155  :     _Bytes += _Non_user_size;

  033cb	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  033cf	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  033d3	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  033d6	48 83 c0 f8	 add	 rax, -8
  033da	48 83 f8 1f	 cmp	 rax, 31
  033de	0f 87 f1 1a 00
	00		 ja	 $LN2220@process
$LN2223@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  033e4	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  033e9	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  033ec	f3 0f 7f 45 f0	 movdqu	 XMMWORD PTR tbData$40[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  033f1	4c 89 75 00	 mov	 QWORD PTR tbData$40[rbp-240], r14
$LN55@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2151 : 			for (size_t i = 0, len = dockContainer.size(); i < len ; ++i)

  033f5	49 ff c4	 inc	 r12
  033f8	4d 3b e5	 cmp	 r12, r13
  033fb	0f 83 63 01 00
	00		 jae	 $LN2624@process
  03401	48 8b 4d 80	 mov	 rcx, QWORD PTR dockContainer$10[rbp-256]
  03405	e9 27 ff ff ff	 jmp	 $LL57@process
$LN2469@process:

; 2162 : 							return (LRESULT)tbData[j]->hClient;

  0340a	48 8b 45 f0	 mov	 rax, QWORD PTR tbData$40[rbp-256]
  0340e	48 8b 0c d8	 mov	 rcx, QWORD PTR [rax+rbx*8]
  03412	48 8b 39	 mov	 rdi, QWORD PTR [rcx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  03415	48 8b 4d f0	 mov	 rcx, QWORD PTR tbData$40[rbp-256]
  03419	48 85 c9	 test	 rcx, rcx
  0341c	74 49		 je	 SHORT $LN2159@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0341e	48 8b 45 00	 mov	 rax, QWORD PTR tbData$40[rbp-240]
  03422	48 2b c1	 sub	 rax, rcx
  03425	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03429	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]
  03431	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  03434	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0343b	72 19		 jb	 SHORT $LN2175@process

; 155  :     _Bytes += _Non_user_size;

  0343d	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  03441	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  03445	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03448	48 83 c0 f8	 add	 rax, -8
  0344c	48 83 f8 1f	 cmp	 rax, 31
  03450	0f 87 7f 1a 00
	00		 ja	 $LN2220@process
$LN2175@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  03456	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0345b	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0345e	f3 0f 7f 45 f0	 movdqu	 XMMWORD PTR tbData$40[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  03463	4c 89 75 00	 mov	 QWORD PTR tbData$40[rbp-240], r14
$LN2159@process:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  03467	48 8b 4d 80	 mov	 rcx, QWORD PTR dockContainer$10[rbp-256]
  0346b	48 85 c9	 test	 rcx, rcx
  0346e	74 41		 je	 SHORT $LN2183@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  03470	48 8b 55 90	 mov	 rdx, QWORD PTR dockContainer$10[rbp-240]
  03474	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03477	48 83 e2 f8	 and	 rdx, -8
  0347b	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0347e	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03485	72 19		 jb	 SHORT $LN2199@process

; 155  :     _Bytes += _Non_user_size;

  03487	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0348b	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  0348f	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03492	48 83 c0 f8	 add	 rax, -8
  03496	48 83 f8 1f	 cmp	 rax, 31
  0349a	0f 87 2f 1a 00
	00		 ja	 $LN2196@process
$LN2199@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  034a0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  034a5	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  034a8	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR dockContainer$10[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  034ad	4c 89 75 90	 mov	 QWORD PTR dockContainer$10[rbp-240], r14
$LN2183@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2162 : 							return (LRESULT)tbData[j]->hClient;

  034b1	48 8b c7	 mov	 rax, rdi
  034b4	e9 50 19 00 00	 jmp	 $LN1@process
$LN2468@process:

; 2159 : 							return (LRESULT)tbData[j]->hClient;

  034b9	48 8b 0c d8	 mov	 rcx, QWORD PTR [rax+rbx*8]
  034bd	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  034c0	48 8b 4d f0	 mov	 rcx, QWORD PTR tbData$40[rbp-256]
  034c4	48 85 c9	 test	 rcx, rcx
  034c7	74 49		 je	 SHORT $LN2107@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  034c9	48 8b 45 00	 mov	 rax, QWORD PTR tbData$40[rbp-240]
  034cd	48 2b c1	 sub	 rax, rcx
  034d0	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  034d4	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]
  034dc	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  034df	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  034e6	72 19		 jb	 SHORT $LN2123@process

; 155  :     _Bytes += _Non_user_size;

  034e8	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  034ec	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  034f0	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  034f3	48 83 c0 f8	 add	 rax, -8
  034f7	48 83 f8 1f	 cmp	 rax, 31
  034fb	0f 87 d4 19 00
	00		 ja	 $LN2220@process
$LN2123@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  03501	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  03506	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  03509	f3 0f 7f 45 f0	 movdqu	 XMMWORD PTR tbData$40[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  0350e	4c 89 75 00	 mov	 QWORD PTR tbData$40[rbp-240], r14
$LN2107@process:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  03512	48 8b 4d 80	 mov	 rcx, QWORD PTR dockContainer$10[rbp-256]
  03516	48 85 c9	 test	 rcx, rcx
  03519	74 41		 je	 SHORT $LN2131@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0351b	48 8b 55 90	 mov	 rdx, QWORD PTR dockContainer$10[rbp-240]
  0351f	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03522	48 83 e2 f8	 and	 rdx, -8
  03526	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  03529	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03530	72 19		 jb	 SHORT $LN2147@process

; 155  :     _Bytes += _Non_user_size;

  03532	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  03536	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  0353a	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0353d	48 83 c0 f8	 add	 rax, -8
  03541	48 83 f8 1f	 cmp	 rax, 31
  03545	0f 87 84 19 00
	00		 ja	 $LN2196@process
$LN2147@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0354b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  03550	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  03553	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR dockContainer$10[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  03558	4c 89 75 90	 mov	 QWORD PTR dockContainer$10[rbp-240], r14
$LN2131@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2159 : 							return (LRESULT)tbData[j]->hClient;

  0355c	48 8b c3	 mov	 rax, rbx
  0355f	e9 a5 18 00 00	 jmp	 $LN1@process
$LN2624@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  03564	48 8b 4d 80	 mov	 rcx, QWORD PTR dockContainer$10[rbp-256]
  03568	48 85 c9	 test	 rcx, rcx
  0356b	0f 84 46 cc ff
	ff		 je	 $LN2622@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  03571	48 8b 55 90	 mov	 rdx, QWORD PTR dockContainer$10[rbp-240]
  03575	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03578	48 83 e2 f8	 and	 rdx, -8
  0357c	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0357f	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03586	72 19		 jb	 SHORT $LN2247@process

; 155  :     _Bytes += _Non_user_size;

  03588	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0358c	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  03590	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03593	48 83 c0 f8	 add	 rax, -8
  03597	48 83 f8 1f	 cmp	 rax, 31
  0359b	0f 87 3a 19 00
	00		 ja	 $LN2722@process
$LN2247@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  035a1	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  035a6	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  035a9	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR dockContainer$10[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  035ae	4c 89 75 90	 mov	 QWORD PTR dockContainer$10[rbp-240], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  035b2	33 c0		 xor	 eax, eax
  035b4	e9 50 18 00 00	 jmp	 $LN1@process
$LN467@process:

; 2163 : 					}
; 2164 : 				}
; 2165 : 			}
; 2166 : 			return NULL;
; 2167 : 		}
; 2168 : 
; 2169 : 		case NPPM_ADDTOOLBARICON_DEPRECATED:
; 2170 : 		{
; 2171 : 			_toolBar.registerDynBtn(static_cast<UINT>(wParam), reinterpret_cast<toolbarIcons*>(lParam), _pPublicInterface->getAbsentIcoHandle());

  035b9	4c 8b 0b	 mov	 r9, QWORD PTR [rbx]
  035bc	48 8d 8b 18 0a
	00 00		 lea	 rcx, QWORD PTR [rbx+2584]
  035c3	4d 8b 89 40 85
	09 00		 mov	 r9, QWORD PTR [r9+623936]
  035ca	4c 8b c6	 mov	 r8, rsi
  035cd	41 8b d7	 mov	 edx, r15d
  035d0	e8 00 00 00 00	 call	 ?registerDynBtn@ToolBar@@QEAAXIPEAUtoolbarIcons@@PEAUHICON__@@@Z ; ToolBar::registerDynBtn

; 2748 : }

  035d5	49 8b c4	 mov	 rax, r12
  035d8	e9 2c 18 00 00	 jmp	 $LN1@process
$LN468@process:

; 2172 : 			return TRUE;
; 2173 : 		}
; 2174 : 
; 2175 : 		case NPPM_ADDTOOLBARICON_FORDARKMODE:
; 2176 : 		{
; 2177 : 			_toolBar.registerDynBtnDM(static_cast<UINT>(wParam), reinterpret_cast<toolbarIconsWithDarkMode*>(lParam));

  035dd	48 8d 8b 18 0a
	00 00		 lea	 rcx, QWORD PTR [rbx+2584]
  035e4	4c 8b c6	 mov	 r8, rsi
  035e7	41 8b d7	 mov	 edx, r15d
  035ea	e8 00 00 00 00	 call	 ?registerDynBtnDM@ToolBar@@QEAAXIPEAUtoolbarIconsWithDarkMode@@@Z ; ToolBar::registerDynBtnDM

; 2748 : }

  035ef	49 8b c4	 mov	 rax, r12
  035f2	e9 12 18 00 00	 jmp	 $LN1@process
$LN469@process:

; 2178 : 			return TRUE;
; 2179 : 		}
; 2180 : 
; 2181 : 		case NPPM_SETMENUITEMCHECK:
; 2182 : 		{
; 2183 : 			::CheckMenuItem(_mainMenuHandle, static_cast<UINT>(wParam), MF_BYCOMMAND | (static_cast<BOOL>(lParam) ? MF_CHECKED : MF_UNCHECKED));

  035f7	8b c6		 mov	 eax, esi
  035f9	f7 d8		 neg	 eax
  035fb	45 1b c0	 sbb	 r8d, r8d
  035fe	41 83 e0 08	 and	 r8d, 8
  03602	41 8b d7	 mov	 edx, r15d
  03605	48 8b 8b 78 7a
	09 00		 mov	 rcx, QWORD PTR [rbx+621176]
  0360c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CheckMenuItem
  03612	48 85 f6	 test	 rsi, rsi

; 2184 : 			_toolBar.setCheck(static_cast<int>(wParam), lParam != 0);

  03615	41 0f 95 c6	 setne	 r14b
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h

; 78   : 		::SendMessage(_hSelf, TB_CHECKBUTTON, ID2Check, MAKELONG(willBeChecked, 0));

  03619	4d 63 c7	 movsxd	 r8, r15d
  0361c	4d 8b ce	 mov	 r9, r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2185 : 			return TRUE;

  0361f	e9 18 09 00 00	 jmp	 $LN2706@process
$LN470@process:

; 2186 : 		}
; 2187 : 
; 2188 : 		case NPPM_GETWINDOWSVERSION:
; 2189 : 		{
; 2190 : 			return (NppParameters::getInstance()).getWinVersion();

  03624	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  03629	48 63 80 24 34
	03 00		 movsxd	 rax, DWORD PTR [rax+209956]
  03630	e9 d4 17 00 00	 jmp	 $LN1@process
$LN471@process:

; 2191 : 		}
; 2192 : 
; 2193 : 		case NPPM_MAKECURRENTBUFFERDIRTY:
; 2194 : 		{
; 2195 : 			_pEditView->getCurrentBuffer()->setDirty(true);

  03635	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  0363c	41 0f b6 d4	 movzx	 edx, r12b
  03640	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  03644	e8 00 00 00 00	 call	 ?setDirty@Buffer@@QEAAX_N@Z ; Buffer::setDirty

; 2748 : }

  03649	49 8b c4	 mov	 rax, r12
  0364c	e9 b8 17 00 00	 jmp	 $LN1@process
$LN472@process:

; 2196 : 			return TRUE;
; 2197 : 		}
; 2198 : 
; 2199 : 		case NPPM_GETENABLETHEMETEXTUREFUNC:
; 2200 : 		{
; 2201 : 			return (LRESULT)nppParam.getEnableThemeDlgTexture();

  03651	49 8b 85 b8 2e
	03 00		 mov	 rax, QWORD PTR [r13+208568]
  03658	e9 ac 17 00 00	 jmp	 $LN1@process
$LN473@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  0365d	49 8d 95 98 32
	03 00		 lea	 rdx, QWORD PTR [r13+209560]

; 2319 :         return _BUF_SIZE <= _Myres;

  03664	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  03669	72 03		 jb	 SHORT $LN2259@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0366b	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN2259@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2206 : 			generic_string userPluginConfDir = nppParam.getUserPluginConfDir();

  0366e	48 8d 4d a0	 lea	 rcx, QWORD PTR userPluginConfDir$23[rbp-256]
  03672	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  03677	90		 npad	 1
  03678	48 85 f6	 test	 rsi, rsi

; 2207 : 			if (lParam != 0)

  0367b	74 41		 je	 SHORT $LN474@process

; 2208 : 			{
; 2209 : 				if (userPluginConfDir.length() >= static_cast<size_t>(wParam))

  0367d	4c 39 7d b0	 cmp	 QWORD PTR userPluginConfDir$23[rbp-240], r15
  03681	72 10		 jb	 SHORT $LN475@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  03683	48 8d 4d a0	 lea	 rcx, QWORD PTR userPluginConfDir$23[rbp-256]
  03687	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2211 : 					return 0;

  0368c	33 c0		 xor	 eax, eax
  0368e	e9 76 17 00 00	 jmp	 $LN1@process
$LN475@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  03693	48 8d 55 a0	 lea	 rdx, QWORD PTR userPluginConfDir$23[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03697	48 83 7d b8 08	 cmp	 QWORD PTR userPluginConfDir$23[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  0369c	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR userPluginConfDir$23[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2213 : 				lstrcpy(reinterpret_cast<TCHAR *>(lParam), userPluginConfDir.c_str());

  036a1	48 8b ce	 mov	 rcx, rsi
  036a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
  036aa	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  036ab	48 8d 4d a0	 lea	 rcx, QWORD PTR userPluginConfDir$23[rbp-256]
  036af	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2216 : 				return TRUE;

  036b4	b8 01 00 00 00	 mov	 eax, 1
  036b9	e9 4b 17 00 00	 jmp	 $LN1@process
$LN474@process:

; 2218 : 			return userPluginConfDir.length();

  036be	48 8b 5d b0	 mov	 rbx, QWORD PTR userPluginConfDir$23[rbp-240]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  036c2	48 8d 4d a0	 lea	 rcx, QWORD PTR userPluginConfDir$23[rbp-256]
  036c6	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2218 : 			return userPluginConfDir.length();

  036cb	48 8b c3	 mov	 rax, rbx
  036ce	e9 36 17 00 00	 jmp	 $LN1@process
$LN476@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  036d3	49 8d 95 58 32
	03 00		 lea	 rdx, QWORD PTR [r13+209496]

; 2319 :         return _BUF_SIZE <= _Myres;

  036da	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  036df	72 03		 jb	 SHORT $LN2281@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  036e1	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN2281@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2223 : 			generic_string pluginHomePath = nppParam.getPluginRootDir();

  036e4	48 8d 4d a0	 lea	 rcx, QWORD PTR pluginHomePath$22[rbp-256]
  036e8	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  036ed	90		 npad	 1
  036ee	48 85 f6	 test	 rsi, rsi

; 2224 : 			if (lParam != 0)

  036f1	74 2d		 je	 SHORT $LN477@process

; 2225 : 			{
; 2226 : 				if (pluginHomePath.length() >= static_cast<size_t>(wParam))

  036f3	4c 39 7d b0	 cmp	 QWORD PTR pluginHomePath$22[rbp-240], r15
  036f7	72 10		 jb	 SHORT $LN478@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  036f9	48 8d 4d a0	 lea	 rcx, QWORD PTR pluginHomePath$22[rbp-256]
  036fd	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2228 : 					return 0;

  03702	33 c0		 xor	 eax, eax
  03704	e9 00 17 00 00	 jmp	 $LN1@process
$LN478@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  03709	48 8d 55 a0	 lea	 rdx, QWORD PTR pluginHomePath$22[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  0370d	48 83 7d b8 08	 cmp	 QWORD PTR pluginHomePath$22[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  03712	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR pluginHomePath$22[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2230 : 				lstrcpy(reinterpret_cast<TCHAR *>(lParam), pluginHomePath.c_str());

  03717	48 8b ce	 mov	 rcx, rsi
  0371a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN477@process:

; 2232 : 			return pluginHomePath.length();

  03720	48 8b 5d b0	 mov	 rbx, QWORD PTR pluginHomePath$22[rbp-240]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  03724	48 8d 4d a0	 lea	 rcx, QWORD PTR pluginHomePath$22[rbp-256]
  03728	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2232 : 			return pluginHomePath.length();

  0372d	48 8b c3	 mov	 rax, rbx
  03730	e9 d4 16 00 00	 jmp	 $LN1@process
$LN479@process:

; 2233 : 		}
; 2234 : 
; 2235 : 		case NPPM_GETSETTINGSONCLOUDPATH:
; 2236 : 		{
; 2237 : 			const NppGUI & nppGUI = nppParam.getNppGUI();
; 2238 : 			generic_string settingsOnCloudPath = nppGUI._cloudPath;

  03735	49 8d 95 48 08
	00 00		 lea	 rdx, QWORD PTR [r13+2120]
  0373c	48 8d 4d a0	 lea	 rcx, QWORD PTR settingsOnCloudPath$21[rbp-256]
  03740	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  03745	90		 npad	 1
  03746	48 85 f6	 test	 rsi, rsi

; 2239 : 			if (lParam != 0)

  03749	74 2d		 je	 SHORT $LN480@process

; 2240 : 			{
; 2241 : 				if (settingsOnCloudPath.length() >= static_cast<size_t>(wParam))

  0374b	4c 39 7d b0	 cmp	 QWORD PTR settingsOnCloudPath$21[rbp-240], r15
  0374f	72 10		 jb	 SHORT $LN481@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  03751	48 8d 4d a0	 lea	 rcx, QWORD PTR settingsOnCloudPath$21[rbp-256]
  03755	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2243 : 					return 0;

  0375a	33 c0		 xor	 eax, eax
  0375c	e9 a8 16 00 00	 jmp	 $LN1@process
$LN481@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  03761	48 8d 55 a0	 lea	 rdx, QWORD PTR settingsOnCloudPath$21[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03765	48 83 7d b8 08	 cmp	 QWORD PTR settingsOnCloudPath$21[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  0376a	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR settingsOnCloudPath$21[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2245 : 				lstrcpy(reinterpret_cast<TCHAR *>(lParam), settingsOnCloudPath.c_str());

  0376f	48 8b ce	 mov	 rcx, rsi
  03772	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN480@process:

; 2247 : 			return settingsOnCloudPath.length();

  03778	48 8b 5d b0	 mov	 rbx, QWORD PTR settingsOnCloudPath$21[rbp-240]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  0377c	48 8d 4d a0	 lea	 rcx, QWORD PTR settingsOnCloudPath$21[rbp-256]
  03780	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2247 : 			return settingsOnCloudPath.length();

  03785	48 8b c3	 mov	 rax, rbx
  03788	e9 7c 16 00 00	 jmp	 $LN1@process
$LN482@process:

; 2248 : 		}
; 2249 : 
; 2250 : 		case NPPM_SETLINENUMBERWIDTHMODE:
; 2251 : 		{
; 2252 : 			if (lParam != LINENUMWIDTH_DYNAMIC && lParam != LINENUMWIDTH_CONSTANT)

  0378d	48 85 f6	 test	 rsi, rsi
  03790	74 0c		 je	 SHORT $LN2689@process
  03792	49 3b f4	 cmp	 rsi, r12
  03795	0f 85 1c ca ff
	ff		 jne	 $LN2622@process

; 2253 : 				return FALSE;
; 2254 : 
; 2255 : 			ScintillaViewParams &svp = const_cast<ScintillaViewParams &>(nppParam.getSVP());
; 2256 : 			svp._lineNumberMarginDynamicWidth = lParam == LINENUMWIDTH_DYNAMIC;

  0379b	48 85 f6	 test	 rsi, rsi
$LN2689@process:
  0379e	0f 94 c0	 sete	 al
  037a1	41 88 85 99 08
	00 00		 mov	 BYTE PTR [r13+2201], al

; 2257 : 			::SendMessage(hwnd, WM_COMMAND, IDM_VIEW_LINENUMBER, 0);

  037a8	45 33 c9	 xor	 r9d, r9d
  037ab	ba 11 01 00 00	 mov	 edx, 273		; 00000111H
  037b0	41 b8 ec ab 00
	00		 mov	 r8d, 44012		; 0000abecH
  037b6	48 8b cf	 mov	 rcx, rdi

; 2748 : }

  037b9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
  037bf	49 8b c4	 mov	 rax, r12
  037c2	e9 42 16 00 00	 jmp	 $LN1@process
$LN484@process:

; 2258 : 
; 2259 : 			return TRUE;
; 2260 : 		}
; 2261 : 
; 2262 : 		case NPPM_GETLINENUMBERWIDTHMODE:
; 2263 : 		{
; 2264 : 			const ScintillaViewParams &svp = nppParam.getSVP();
; 2265 : 			return svp._lineNumberMarginDynamicWidth ? LINENUMWIDTH_DYNAMIC : LINENUMWIDTH_CONSTANT;

  037c7	45 38 b5 99 08
	00 00		 cmp	 BYTE PTR [r13+2201], r14b
  037ce	41 0f 94 c6	 sete	 r14b
  037d2	49 8b c6	 mov	 rax, r14
  037d5	e9 2f 16 00 00	 jmp	 $LN1@process
$LN485@process:

; 2266 : 		}
; 2267 : 
; 2268 : 		case NPPM_MSGTOPLUGIN :
; 2269 : 		{
; 2270 : 			return _pluginsManager.relayPluginMessages(message, wParam, lParam);

  037da	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  037e1	4c 8b ce	 mov	 r9, rsi
  037e4	4d 8b c7	 mov	 r8, r15
  037e7	e8 00 00 00 00	 call	 ?relayPluginMessages@PluginsManager@@QEAA_NI_K_J@Z ; PluginsManager::relayPluginMessages
  037ec	0f b6 c0	 movzx	 eax, al
  037ef	e9 15 16 00 00	 jmp	 $LN1@process
$LN487@process:

; 2271 : 		}
; 2272 : 
; 2273 : 		case NPPM_ALLOCATESUPPORTED:
; 2274 : 		{
; 2275 : 			return TRUE;
; 2276 : 		}
; 2277 : 
; 2278 : 		case NPPM_ALLOCATECMDID:
; 2279 : 		{
; 2280 : 			return _pluginsManager.allocateCmdID(static_cast<int32_t>(wParam), reinterpret_cast<int *>(lParam));

  037f4	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  037fb	4c 8b c6	 mov	 r8, rsi
  037fe	41 8b d7	 mov	 edx, r15d
  03801	e8 00 00 00 00	 call	 ?allocateCmdID@PluginsManager@@QEAA_NHPEAH@Z ; PluginsManager::allocateCmdID
  03806	0f b6 c0	 movzx	 eax, al
  03809	e9 fb 15 00 00	 jmp	 $LN1@process
$LN488@process:

; 2281 : 		}
; 2282 : 
; 2283 : 		case NPPM_ALLOCATEMARKER:
; 2284 : 		{
; 2285 : 			return _pluginsManager.allocateMarker(static_cast<int32_t>(wParam), reinterpret_cast<int *>(lParam));

  0380e	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  03815	4c 8b c6	 mov	 r8, rsi
  03818	41 8b d7	 mov	 edx, r15d
  0381b	e8 00 00 00 00	 call	 ?allocateMarker@PluginsManager@@QEAA_NHPEAH@Z ; PluginsManager::allocateMarker
  03820	0f b6 c0	 movzx	 eax, al
  03823	e9 e1 15 00 00	 jmp	 $LN1@process
$LN489@process:

; 2286 : 		}
; 2287 : 
; 2288 : 		case NPPM_HIDETABBAR:
; 2289 : 		{
; 2290 : 			bool hide = (lParam != 0);

  03828	48 85 f6	 test	 rsi, rsi
  0382b	0f 95 c0	 setne	 al

; 2291 : 			bool oldVal = DocTabView::getHideTabBarStatus();

  0382e	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?_hideTabBarStatus@DocTabView@@0_NA ; DocTabView::_hideTabBarStatus
  03835	8b d9		 mov	 ebx, ecx

; 2292 : 			if (hide == oldVal) return oldVal;

  03837	3a c1		 cmp	 al, cl
  03839	0f 84 0b eb ff
	ff		 je	 $LN2699@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h

; 79   : 		_hideTabBarStatus = hideOrNot;

  0383f	88 05 00 00 00
	00		 mov	 BYTE PTR ?_hideTabBarStatus@DocTabView@@0_NA, al ; DocTabView::_hideTabBarStatus
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2295 : 			::SendMessage(hwnd, WM_SIZE, 0, 0);

  03845	45 33 c9	 xor	 r9d, r9d
  03848	45 33 c0	 xor	 r8d, r8d
  0384b	41 8d 51 05	 lea	 edx, QWORD PTR [r9+5]
  0384f	48 8b cf	 mov	 rcx, rdi
  03852	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW

; 2296 : 
; 2297 : 			NppGUI & nppGUI = (NppParameters::getInstance()).getNppGUI();

  03858	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  0385d	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [rax+152]

; 2298 : 			if (hide)
; 2299 : 				nppGUI._tabStatus |= TAB_HIDE;
; 2300 : 			else
; 2301 : 				nppGUI._tabStatus &= ~TAB_HIDE;
; 2302 : 
; 2303 : 			return oldVal;

  03863	8b ca		 mov	 ecx, edx
  03865	0f ba f1 08	 btr	 ecx, 8
  03869	0f ba ea 08	 bts	 edx, 8
  0386d	48 85 f6	 test	 rsi, rsi
  03870	0f 44 d1	 cmove	 edx, ecx
  03873	89 90 98 00 00
	00		 mov	 DWORD PTR [rax+152], edx
  03879	8b c3		 mov	 eax, ebx
  0387b	e9 89 15 00 00	 jmp	 $LN1@process
$LN493@process:

; 2304 : 		}
; 2305 : 
; 2306 : 		case NPPM_ISTABBARHIDDEN:
; 2307 : 		{
; 2308 : 			return _mainDocTab.getHideTabBarStatus();

  03880	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?_hideTabBarStatus@DocTabView@@0_NA ; DocTabView::_hideTabBarStatus
  03887	e9 7d 15 00 00	 jmp	 $LN1@process
$LN494@process:

; 2309 : 		}
; 2310 : 
; 2311 : 		case NPPM_HIDETOOLBAR:
; 2312 : 		{
; 2313 : 			bool show = (lParam != TRUE);

  0388c	49 3b f4	 cmp	 rsi, r12
  0388f	40 0f 95 c7	 setne	 dil

; 2314 : 			bool currentStatus = _rebarTop.getIDVisible(REBAR_BAR_TOOLBAR);

  03893	48 8d b3 40 0c
	00 00		 lea	 rsi, QWORD PTR [rbx+3136]
  0389a	33 d2		 xor	 edx, edx
  0389c	48 8b ce	 mov	 rcx, rsi
  0389f	e8 00 00 00 00	 call	 ?getIDVisible@ReBar@@QEAA_NH@Z ; ReBar::getIDVisible
  038a4	0f b6 d8	 movzx	 ebx, al

; 2315 : 			if (show != currentStatus)

  038a7	40 3a fb	 cmp	 dil, bl
  038aa	0f 84 9a ea ff
	ff		 je	 $LN2699@process

; 2316 : 				_rebarTop.setIDVisible(REBAR_BAR_TOOLBAR, show);

  038b0	44 0f b6 c7	 movzx	 r8d, dil
  038b4	33 d2		 xor	 edx, edx
  038b6	48 8b ce	 mov	 rcx, rsi
  038b9	e8 00 00 00 00	 call	 ?setIDVisible@ReBar@@QEAAXH_N@Z ; ReBar::setIDVisible

; 2317 : 			return currentStatus;

  038be	8b c3		 mov	 eax, ebx
  038c0	e9 44 15 00 00	 jmp	 $LN1@process
$LN496@process:

; 2318 : 		}
; 2319 : 
; 2320 : 		case NPPM_ISTOOLBARHIDDEN :
; 2321 : 		{
; 2322 : 			return !_rebarTop.getIDVisible(REBAR_BAR_TOOLBAR);

  038c5	48 8d 8b 40 0c
	00 00		 lea	 rcx, QWORD PTR [rbx+3136]
  038cc	33 d2		 xor	 edx, edx
  038ce	e8 00 00 00 00	 call	 ?getIDVisible@ReBar@@QEAA_NH@Z ; ReBar::getIDVisible
  038d3	84 c0		 test	 al, al
  038d5	41 0f 94 c6	 sete	 r14b
  038d9	49 8b c6	 mov	 rax, r14
  038dc	e9 28 15 00 00	 jmp	 $LN1@process
$LN497@process:

; 2328 : 			bool isHidden = ::GetMenu(hwnd) == NULL;

  038e1	48 8b cf	 mov	 rcx, rdi
  038e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetMenu
  038ea	48 85 c0	 test	 rax, rax
  038ed	41 0f 94 c6	 sete	 r14b

; 2323 : 		}
; 2324 : 
; 2325 : 		case NPPM_HIDEMENU:
; 2326 : 		{
; 2327 : 			bool hide = (lParam == TRUE);

  038f1	49 3b f4	 cmp	 rsi, r12
  038f4	0f 94 c0	 sete	 al

; 2329 : 			if (hide == isHidden)

  038f7	41 3a c6	 cmp	 al, r14b
  038fa	74 30		 je	 SHORT $LN500@process

; 2330 : 				return isHidden;
; 2331 : 
; 2332 : 			NppGUI & nppGUI = nppParam.getNppGUI();
; 2333 : 			nppGUI._menuBarShow = !hide;

  038fc	49 3b f4	 cmp	 rsi, r12
  038ff	0f 95 c0	 setne	 al
  03902	41 88 85 96 00
	00 00		 mov	 BYTE PTR [r13+150], al

; 2334 : 			if (nppGUI._menuBarShow)

  03909	48 8b cf	 mov	 rcx, rdi
  0390c	74 16		 je	 SHORT $LN499@process

; 2335 : 				::SetMenu(hwnd, _mainMenuHandle);

  0390e	48 8b 93 78 7a
	09 00		 mov	 rdx, QWORD PTR [rbx+621176]

; 2338 : 
; 2339 : 			return isHidden;

  03915	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetMenu
  0391b	41 0f b6 c6	 movzx	 eax, r14b
  0391f	e9 e5 14 00 00	 jmp	 $LN1@process
$LN499@process:

; 2336 : 			else
; 2337 : 				::SetMenu(hwnd, NULL);

  03924	33 d2		 xor	 edx, edx

; 2338 : 
; 2339 : 			return isHidden;

  03926	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetMenu
$LN500@process:
  0392c	41 0f b6 c6	 movzx	 eax, r14b
  03930	e9 d4 14 00 00	 jmp	 $LN1@process
$LN501@process:

; 2340 : 		}
; 2341 : 
; 2342 : 		case NPPM_ISMENUHIDDEN:
; 2343 : 		{
; 2344 : 			return (::GetMenu(hwnd) == NULL);

  03935	48 8b cf	 mov	 rcx, rdi
  03938	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetMenu
  0393e	48 85 c0	 test	 rax, rax
  03941	41 0f 94 c6	 sete	 r14b
  03945	49 8b c6	 mov	 rax, r14
  03948	e9 bc 14 00 00	 jmp	 $LN1@process
$LN502@process:

; 2345 : 		}
; 2346 : 
; 2347 : 		case NPPM_HIDESTATUSBAR:
; 2348 : 		{
; 2349 : 			bool show = (lParam != TRUE);

  0394d	49 3b f4	 cmp	 rsi, r12
  03950	41 0f 95 c7	 setne	 r15b

; 2350 : 			NppGUI & nppGUI = nppParam.getNppGUI();
; 2351 : 			bool oldVal = nppGUI._statusBarShow;

  03954	41 0f b6 8d 95
	00 00 00	 movzx	 ecx, BYTE PTR [r13+149]
  0395c	44 8b e1	 mov	 r12d, ecx

; 2352 : 			if (show == oldVal)

  0395f	44 3a f9	 cmp	 r15b, cl
  03962	0f 84 9a d7 ff
	ff		 je	 $LN2695@process

; 2353 : 				return oldVal;
; 2354 : 
; 2355 : 			RECT rc;
; 2356 : 			_pPublicInterface->getClientRect(rc);

  03968	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0396b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0396e	48 8d 55 f0	 lea	 rdx, QWORD PTR rc$39[rbp-256]
  03972	ff 50 38	 call	 QWORD PTR [rax+56]

; 2357 : 
; 2358 : 			nppGUI._statusBarShow = show;

  03975	45 88 bd 95 00
	00 00		 mov	 BYTE PTR [r13+149], r15b
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h

; 42   : 		::ShowWindow(_hSelf, toShow ? SW_SHOW : SW_HIDE);

  0397c	41 bf 05 00 00
	00		 mov	 r15d, 5
  03982	48 83 fe 01	 cmp	 rsi, 1
  03986	45 0f 45 f7	 cmovne	 r14d, r15d
  0398a	41 8b d6	 mov	 edx, r14d
  0398d	48 8b 8b e8 0b
	00 00		 mov	 rcx, QWORD PTR [rbx+3048]
  03994	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ShowWindow
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2360 : 			::SendMessage(hwnd, WM_SIZE, SIZE_RESTORED, MAKELONG(rc.bottom, rc.right));

  0399a	0f b7 4d f8	 movzx	 ecx, WORD PTR rc$39[rbp-248]
  0399e	c1 e1 10	 shl	 ecx, 16
  039a1	0f b7 45 fc	 movzx	 eax, WORD PTR rc$39[rbp-244]
  039a5	0b c8		 or	 ecx, eax
  039a7	4c 63 c9	 movsxd	 r9, ecx
  039aa	45 33 c0	 xor	 r8d, r8d
  039ad	41 8b d7	 mov	 edx, r15d
  039b0	48 8b cf	 mov	 rcx, rdi

; 2748 : }

  039b3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
  039b9	41 8b c4	 mov	 eax, r12d
  039bc	e9 48 14 00 00	 jmp	 $LN1@process
$LN504@process:

; 2361 : 			return oldVal;
; 2362 : 		}
; 2363 : 
; 2364 : 		case NPPM_ISSTATUSBARHIDDEN:
; 2365 : 		{
; 2366 : 			const NppGUI & nppGUI = nppParam.getNppGUI();
; 2367 : 			return !nppGUI._statusBarShow;

  039c1	45 38 b5 95 00
	00 00		 cmp	 BYTE PTR [r13+149], r14b
  039c8	41 0f 94 c6	 sete	 r14b
  039cc	49 8b c6	 mov	 rax, r14
  039cf	e9 35 14 00 00	 jmp	 $LN1@process
$LN505@process:

; 2368 : 		}
; 2369 : 
; 2370 : 		case NPPM_GETCURRENTVIEW:
; 2371 : 		{
; 2372 : 			return _activeView;

  039d4	48 63 83 d4 84
	09 00		 movsxd	 rax, DWORD PTR [rbx+623828]
  039db	e9 29 14 00 00	 jmp	 $LN1@process
$LN519@process:

; 2430 : 			return TRUE;
; 2431 : 		}
; 2432 : 
; 2433 : 		case NPPM_GETLANGUAGENAME:
; 2434 : 		{
; 2435 : 			generic_string langName = getLangDesc((LangType)wParam, true);

  039e0	45 0f b6 cc	 movzx	 r9d, r12b
  039e4	45 8b c7	 mov	 r8d, r15d
  039e7	48 8d 55 a0	 lea	 rdx, QWORD PTR langName$20[rbp-256]
  039eb	48 8b cb	 mov	 rcx, rbx
  039ee	e8 00 00 00 00	 call	 ?getLangDesc@Notepad_plus@@AEAA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4LangType@@_N@Z ; Notepad_plus::getLangDesc
  039f3	90		 npad	 1
  039f4	48 85 f6	 test	 rsi, rsi

; 2436 : 			if (lParam)

  039f7	74 17		 je	 SHORT $LN520@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  039f9	48 8d 55 a0	 lea	 rdx, QWORD PTR langName$20[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  039fd	48 83 7d b8 08	 cmp	 QWORD PTR langName$20[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  03a02	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR langName$20[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2437 : 				lstrcpy((LPTSTR)lParam, langName.c_str());

  03a07	48 8b ce	 mov	 rcx, rsi
  03a0a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN520@process:

; 2438 : 			return langName.length();

  03a10	48 8b 5d b0	 mov	 rbx, QWORD PTR langName$20[rbp-240]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  03a14	48 8d 4d a0	 lea	 rcx, QWORD PTR langName$20[rbp-256]
  03a18	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2438 : 			return langName.length();

  03a1d	48 8b c3	 mov	 rax, rbx
  03a20	e9 e4 13 00 00	 jmp	 $LN1@process
$LN521@process:

; 2439 : 		}
; 2440 : 
; 2441 : 		case NPPM_GETLANGUAGEDESC:
; 2442 : 		{
; 2443 : 			generic_string langDesc = getLangDesc((LangType)wParam, false);

  03a25	45 33 c9	 xor	 r9d, r9d
  03a28	45 8b c7	 mov	 r8d, r15d
  03a2b	48 8d 55 a0	 lea	 rdx, QWORD PTR langDesc$19[rbp-256]
  03a2f	48 8b cb	 mov	 rcx, rbx
  03a32	e8 00 00 00 00	 call	 ?getLangDesc@Notepad_plus@@AEAA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4LangType@@_N@Z ; Notepad_plus::getLangDesc
  03a37	90		 npad	 1
  03a38	48 85 f6	 test	 rsi, rsi

; 2444 : 			if (lParam)

  03a3b	74 17		 je	 SHORT $LN522@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  03a3d	48 8d 55 a0	 lea	 rdx, QWORD PTR langDesc$19[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03a41	48 83 7d b8 08	 cmp	 QWORD PTR langDesc$19[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  03a46	48 0f 43 55 a0	 cmovae	 rdx, QWORD PTR langDesc$19[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2445 : 				lstrcpy((LPTSTR)lParam, langDesc.c_str());

  03a4b	48 8b ce	 mov	 rcx, rsi
  03a4e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW
$LN522@process:

; 2446 : 			return langDesc.length();

  03a54	48 8b 5d b0	 mov	 rbx, QWORD PTR langDesc$19[rbp-240]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  03a58	48 8d 4d a0	 lea	 rcx, QWORD PTR langDesc$19[rbp-256]
  03a5c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2446 : 			return langDesc.length();

  03a61	48 8b c3	 mov	 rax, rbx
  03a64	e9 a0 13 00 00	 jmp	 $LN1@process
$LN523@process:

; 2447 : 		}
; 2448 : 
; 2449 : 		case NPPM_DOCSWITCHERDISABLECOLUMN:
; 2450 : 		{
; 2451 : 			BOOL isOff = static_cast<BOOL>(lParam);
; 2452 : 			NppGUI & nppGUI = nppParam.getNppGUI();
; 2453 : 			nppGUI._fileSwitcherWithoutExtColumn = isOff == TRUE;

  03a69	41 3b f4	 cmp	 esi, r12d
  03a6c	0f 94 c0	 sete	 al
  03a6f	41 88 85 3c 08
	00 00		 mov	 BYTE PTR [r13+2108], al

; 2454 : 
; 2455 : 			if (_pFileSwitcherPanel)

  03a76	48 8b 9b 80 84
	09 00		 mov	 rbx, QWORD PTR [rbx+623744]
  03a7d	48 85 db	 test	 rbx, rbx
  03a80	0f 84 7c d6 ff
	ff		 je	 $LN2695@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.h

; 86   : 		_fileListView.reload();

  03a86	48 8d 8b 90 00
	00 00		 lea	 rcx, QWORD PTR [rbx+144]
  03a8d	e8 00 00 00 00	 call	 ?reload@VerticalFileSwitcherListView@@QEAAXXZ ; VerticalFileSwitcherListView::reload

; 87   : 		startColumnSort();

  03a92	48 8b cb	 mov	 rcx, rbx
  03a95	e8 00 00 00 00	 call	 ?startColumnSort@VerticalFileSwitcher@@QEAAXXZ ; VerticalFileSwitcher::startColumnSort
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  03a9a	49 8b c4	 mov	 rax, r12
  03a9d	e9 67 13 00 00	 jmp	 $LN1@process
$LN525@process:

; 2456 : 			{
; 2457 : 				_pFileSwitcherPanel->reload();
; 2458 : 			}
; 2459 : 			// else nothing to do
; 2460 : 			return TRUE;
; 2461 : 		}
; 2462 : 
; 2463 : 		case NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR:
; 2464 : 		case NPPM_GETEDITORDEFAULTBACKGROUNDCOLOR:
; 2465 : 		{
; 2466 : 			return (message == NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR

  03aa2	81 fa 42 08 00
	00		 cmp	 edx, 2114		; 00000842H
  03aa8	75 12		 jne	 SHORT $LN595@process
  03aaa	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  03aaf	8b 88 3c 34 03
	00		 mov	 ecx, DWORD PTR [rax+209980]
  03ab5	8b c1		 mov	 eax, ecx
  03ab7	e9 4d 13 00 00	 jmp	 $LN1@process
$LN595@process:
  03abc	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  03ac1	8b 88 38 34 03
	00		 mov	 ecx, DWORD PTR [rax+209976]
  03ac7	8b c1		 mov	 eax, ecx
  03ac9	e9 3b 13 00 00	 jmp	 $LN1@process
$LN527@process:

; 2467 : 					?(NppParameters::getInstance()).getCurrentDefaultFgColor()
; 2468 : 					:(NppParameters::getInstance()).getCurrentDefaultBgColor());
; 2469 : 		}
; 2470 : 
; 2471 : 		case NPPM_SHOWDOCSWITCHER:
; 2472 : 		{
; 2473 : 			BOOL toShow = static_cast<BOOL>(lParam);
; 2474 : 			if (toShow)

  03ace	48 8b 8b 80 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623744]
  03ad5	85 f6		 test	 esi, esi
  03ad7	74 23		 je	 SHORT $LN528@process

; 2475 : 			{
; 2476 : 				if (!_pFileSwitcherPanel || !_pFileSwitcherPanel->isVisible())

  03ad9	48 85 c9	 test	 rcx, rcx
  03adc	74 0e		 je	 SHORT $LN531@process
  03ade	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  03ae1	ff 50 58	 call	 QWORD PTR [rax+88]
  03ae4	84 c0		 test	 al, al
  03ae6	0f 85 16 d6 ff
	ff		 jne	 $LN2695@process
$LN531@process:

; 2477 : 					launchFileSwitcherPanel();

  03aec	48 8b cb	 mov	 rcx, rbx
  03aef	e8 00 00 00 00	 call	 ?launchFileSwitcherPanel@Notepad_plus@@AEAAXXZ ; Notepad_plus::launchFileSwitcherPanel

; 2748 : }

  03af4	49 8b c4	 mov	 rax, r12
  03af7	e9 0d 13 00 00	 jmp	 $LN1@process
$LN528@process:

; 2478 : 			}
; 2479 : 			else
; 2480 : 			{
; 2481 : 				if (_pFileSwitcherPanel)

  03afc	48 85 c9	 test	 rcx, rcx
  03aff	0f 84 fd d5 ff
	ff		 je	 $LN2695@process

; 2482 : 					_pFileSwitcherPanel->display(false);

  03b05	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  03b08	33 d2		 xor	 edx, edx
  03b0a	ff 50 18	 call	 QWORD PTR [rax+24]

; 2748 : }

  03b0d	49 8b c4	 mov	 rax, r12
  03b10	e9 f4 12 00 00	 jmp	 $LN1@process
$LN533@process:

; 2483 : 			}
; 2484 : 			return TRUE;
; 2485 : 		}
; 2486 : 
; 2487 : 		case NPPM_ISDOCSWITCHERSHOWN:
; 2488 : 		{
; 2489 : 			if (!_pFileSwitcherPanel)

  03b15	48 8b 8b 80 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623744]
  03b1c	48 85 c9	 test	 rcx, rcx
  03b1f	0f 84 92 c6 ff
	ff		 je	 $LN2622@process

; 2490 : 				return FALSE;
; 2491 : 			return _pFileSwitcherPanel->isVisible();

  03b25	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  03b28	ff 50 58	 call	 QWORD PTR [rax+88]
  03b2b	0f b6 c0	 movzx	 eax, al
  03b2e	e9 d6 12 00 00	 jmp	 $LN1@process
$LN535@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  03b33	49 81 c5 38 32
	03 00		 add	 r13, 209464		; 00033238H

; 2319 :         return _BUF_SIZE <= _Myres;

  03b3a	49 83 7d 18 08	 cmp	 QWORD PTR [r13+24], 8

; 2306 :         if (_Large_string_engaged()) {

  03b3f	72 04		 jb	 SHORT $LN2336@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  03b41	4d 8b 6d 00	 mov	 r13, QWORD PTR [r13]
$LN2336@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2504 : 			if (appDataNpp[0]) // if not doLocal

  03b45	66 45 39 75 00	 cmp	 WORD PTR [r13], r14w
  03b4a	0f 84 67 c6 ff
	ff		 je	 $LN2622@process

; 2748 : }

  03b50	49 8b c4	 mov	 rax, r12
  03b53	e9 b1 12 00 00	 jmp	 $LN1@process
$LN537@process:

; 2505 : 			{
; 2506 : 				return TRUE;
; 2507 : 			}
; 2508 : 			return FALSE;
; 2509 : 		}
; 2510 : 
; 2511 : 		case NPPM_REMOVESHORTCUTBYCMDID:
; 2512 : 		{
; 2513 : 			int cmdID = static_cast<int32_t>(wParam);
; 2514 : 			return _pluginsManager.removeShortcutByCmdID(cmdID);

  03b58	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  03b5f	41 8b d7	 mov	 edx, r15d
  03b62	e8 00 00 00 00	 call	 ?removeShortcutByCmdID@PluginsManager@@QEAA_NH@Z ; PluginsManager::removeShortcutByCmdID
  03b67	0f b6 c0	 movzx	 eax, al
  03b6a	e9 9a 12 00 00	 jmp	 $LN1@process
$LN95@process:

; 211  : 			break;
; 212  : 		}
; 213  : 
; 214  : 		case WM_DOCK_USERDEFINE_DLG:
; 215  : 		{
; 216  : 			dockUserDlg();

  03b6f	48 8b cb	 mov	 rcx, rbx
  03b72	e8 00 00 00 00	 call	 ?dockUserDlg@Notepad_plus@@AEAAXXZ ; Notepad_plus::dockUserDlg

; 217  : 			return TRUE;

  03b77	49 8b c4	 mov	 rax, r12
  03b7a	e9 8a 12 00 00	 jmp	 $LN1@process
$LN601@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  03b7f	81 fa b9 0f 00
	00		 cmp	 edx, 4025		; 00000fb9H
  03b85	0f 87 b0 05 00
	00		 ja	 $LN602@process
  03b8b	0f 84 df 05 00
	00		 je	 $LN200@process
  03b91	8d 82 2e f4 ff
	ff		 lea	 eax, DWORD PTR [rdx-3026]
  03b97	83 f8 0e	 cmp	 eax, 14
  03b9a	0f 87 8e 09 00
	00		 ja	 $LN563@process
  03ba0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  03ba7	41 8b 84 80 00
	00 00 00	 mov	 eax, DWORD PTR $LN2634@process[r8+rax*4]
  03baf	49 03 c0	 add	 rax, r8
  03bb2	ff e0		 jmp	 rax
$LN96@process:

; 218  : 		}
; 219  : 
; 220  : 		case WM_UNDOCK_USERDEFINE_DLG:
; 221  : 		{
; 222  : 			undockUserDlg();

  03bb4	48 8b cb	 mov	 rcx, rbx
  03bb7	e8 00 00 00 00	 call	 ?undockUserDlg@Notepad_plus@@AEAAXXZ ; Notepad_plus::undockUserDlg

; 223  : 			return TRUE;

  03bbc	49 8b c4	 mov	 rax, r12
  03bbf	e9 45 12 00 00	 jmp	 $LN1@process
$LN97@process:

; 224  : 		}
; 225  : 
; 226  : 		case WM_REMOVE_USERLANG:
; 227  : 		{
; 228  : 			TCHAR *userLangName = reinterpret_cast<TCHAR *>(lParam);
; 229  : 			if (!userLangName || !userLangName[0])

  03bc4	48 85 f6	 test	 rsi, rsi
  03bc7	0f 84 ea c5 ff
	ff		 je	 $LN2622@process
  03bcd	66 44 39 36	 cmp	 WORD PTR [rsi], r14w
  03bd1	0f 84 e0 c5 ff
	ff		 je	 $LN2622@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  03bd7	4c 89 75 a0	 mov	 QWORD PTR name$35[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  03bdb	4c 89 75 b0	 mov	 QWORD PTR name$35[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  03bdf	4c 89 75 b8	 mov	 QWORD PTR name$35[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  03be3	4c 89 75 b0	 mov	 QWORD PTR name$35[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  03be7	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR name$35[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  03bef	66 44 89 75 a0	 mov	 WORD PTR name$35[rbp-256], r14w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  03bf4	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  03bfb	4c 8b c7	 mov	 r8, rdi
  03bfe	66 90		 npad	 2
$LL2633@process:
  03c00	49 ff c0	 inc	 r8
  03c03	66 46 39 34 46	 cmp	 WORD PTR [rsi+r8*2], r14w
  03c08	75 f6		 jne	 SHORT $LL2633@process

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  03c0a	48 8b d6	 mov	 rdx, rsi
  03c0d	48 8d 4d a0	 lea	 rcx, QWORD PTR name$35[rbp-256]
  03c11	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  03c16	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 235  : 			for (size_t i = 0; i < MainFileManager.getNbBuffers(); ++i)

  03c17	49 8b de	 mov	 rbx, r14
  03c1a	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03c1f	4c 8b 6d b8	 mov	 r13, QWORD PTR name$35[rbp-232]
  03c23	48 8b 75 a0	 mov	 rsi, QWORD PTR name$35[rbp-256]
  03c27	48 39 58 38	 cmp	 QWORD PTR [rax+56], rbx
  03c2b	0f 86 9b 00 00
	00		 jbe	 $LN5@process
  03c31	4c 8d 25 00 00
	00 00		 lea	 r12, OFFSET FLAT:??_C@_11LOCGONAA@@
  03c38	4c 8b 7d b0	 mov	 r15, QWORD PTR name$35[rbp-240]
  03c3c	0f 1f 40 00	 npad	 4
$LL6@process:

; 236  : 			{
; 237  : 				Buffer* buf = MainFileManager.getBufferByIndex(i);

  03c40	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03c45	48 8b c8	 mov	 rcx, rax
  03c48	48 8b d3	 mov	 rdx, rbx
  03c4b	e8 00 00 00 00	 call	 ?getBufferByIndex@FileManager@@QEAAPEAVBuffer@@_K@Z ; FileManager::getBufferByIndex
  03c50	4c 8b c8	 mov	 r9, rax

; 238  : 				if (buf->getLangType() == L_USER && name == buf->getUserDefineLangName())

  03c53	83 78 20 0f	 cmp	 DWORD PTR [rax+32], 15
  03c57	75 61		 jne	 SHORT $LN4@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  03c59	48 8d 48 28	 lea	 rcx, QWORD PTR [rax+40]

; 2319 :         return _BUF_SIZE <= _Myres;

  03c5d	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  03c62	72 03		 jb	 SHORT $LN657@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  03c64	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN657@process:

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  03c67	48 8b d7	 mov	 rdx, rdi
  03c6a	66 0f 1f 44 00
	00		 npad	 6
$LL2632@process:
  03c70	48 ff c2	 inc	 rdx
  03c73	66 83 3c 51 00	 cmp	 WORD PTR [rcx+rdx*2], 0
  03c78	75 f6		 jne	 SHORT $LL2632@process

; 2305 :         const value_type* _Result = _Bx._Buf;

  03c7a	4c 8d 45 a0	 lea	 r8, QWORD PTR name$35[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03c7e	49 83 fd 08	 cmp	 r13, 8

; 2306 :         if (_Large_string_engaged()) {

  03c82	4c 0f 43 c6	 cmovae	 r8, rsi

; 583  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  03c86	4c 3b fa	 cmp	 r15, rdx
  03c89	75 2f		 jne	 SHORT $LN4@process

; 256  :         return _CSTD wmemcmp(

  03c8b	49 8b d7	 mov	 rdx, r15
  03c8e	4d 85 ff	 test	 r15, r15
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  03c91	74 17		 je	 SHORT $LN2613@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 256  :         return _CSTD wmemcmp(

  03c93	4c 2b c1	 sub	 r8, rcx
$LL681@process:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 220  :             if (*_S1 != *_S2)

  03c96	0f b7 01	 movzx	 eax, WORD PTR [rcx]
  03c99	66 41 39 04 08	 cmp	 WORD PTR [r8+rcx], ax
  03c9e	75 1a		 jne	 SHORT $LN4@process

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  03ca0	48 83 c1 02	 add	 rcx, 2
  03ca4	48 83 ea 01	 sub	 rdx, 1
  03ca8	75 ec		 jne	 SHORT $LL681@process
$LN2613@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 239  : 					buf->setLangType(L_USER, TEXT(""));

  03caa	4d 8b c4	 mov	 r8, r12
  03cad	ba 0f 00 00 00	 mov	 edx, 15
  03cb2	49 8b c9	 mov	 rcx, r9
  03cb5	e8 00 00 00 00	 call	 ?setLangType@Buffer@@QEAAXW4LangType@@PEB_W@Z ; Buffer::setLangType
$LN4@process:

; 235  : 			for (size_t i = 0; i < MainFileManager.getNbBuffers(); ++i)

  03cba	48 ff c3	 inc	 rbx
  03cbd	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03cc2	48 3b 58 38	 cmp	 rbx, QWORD PTR [rax+56]
  03cc6	0f 82 74 ff ff
	ff		 jb	 $LL6@process
$LN5@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  03ccc	49 83 fd 08	 cmp	 r13, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  03cd0	72 35		 jb	 SHORT $LN706@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03cd2	4a 8d 14 6d 02
	00 00 00	 lea	 rdx, QWORD PTR [r13*2+2]
  03cda	48 8b c6	 mov	 rax, rsi

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  03cdd	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03ce4	72 19		 jb	 SHORT $LN705@process

; 155  :     _Bytes += _Non_user_size;

  03ce6	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  03cea	48 8b 76 f8	 mov	 rsi, QWORD PTR [rsi-8]
  03cee	48 2b c6	 sub	 rax, rsi

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03cf1	48 83 c0 f8	 add	 rax, -8
  03cf5	48 83 f8 1f	 cmp	 rax, 31
  03cf9	0f 87 2d 11 00
	00		 ja	 $LN2391@process
$LN705@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  03cff	48 8b ce	 mov	 rcx, rsi
  03d02	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN706@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  03d07	4c 89 75 b0	 mov	 QWORD PTR name$35[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  03d0b	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR name$35[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  03d13	66 44 89 75 a0	 mov	 WORD PTR name$35[rbp-256], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 241  : 			return TRUE;

  03d18	b8 01 00 00 00	 mov	 eax, 1
  03d1d	e9 e7 10 00 00	 jmp	 $LN1@process
$LN101@process:

; 242  : 		}
; 243  : 
; 244  : 		case WM_RENAME_USERLANG:
; 245  : 		{
; 246  : 			if (!lParam || !((reinterpret_cast<TCHAR *>(lParam))[0]) || !wParam || !((reinterpret_cast<TCHAR *>(wParam))[0]))

  03d22	48 85 f6	 test	 rsi, rsi
  03d25	0f 84 8c c4 ff
	ff		 je	 $LN2622@process
  03d2b	66 44 39 36	 cmp	 WORD PTR [rsi], r14w
  03d2f	0f 84 82 c4 ff
	ff		 je	 $LN2622@process
  03d35	4d 85 ff	 test	 r15, r15
  03d38	0f 84 79 c4 ff
	ff		 je	 $LN2622@process
  03d3e	66 45 39 37	 cmp	 WORD PTR [r15], r14w
  03d42	0f 84 6f c4 ff
	ff		 je	 $LN2622@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  03d48	4c 89 75 80	 mov	 QWORD PTR oldName$17[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  03d4c	4c 89 75 90	 mov	 QWORD PTR oldName$17[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  03d50	4c 89 75 98	 mov	 QWORD PTR oldName$17[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  03d54	4c 89 75 90	 mov	 QWORD PTR oldName$17[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  03d58	48 c7 45 98 07
	00 00 00	 mov	 QWORD PTR oldName$17[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  03d60	66 44 89 75 80	 mov	 WORD PTR oldName$17[rbp-256], r14w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  03d65	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  03d6c	4c 8b c7	 mov	 r8, rdi
  03d6f	90		 npad	 1
$LL2631@process:
  03d70	49 ff c0	 inc	 r8
  03d73	66 46 39 34 46	 cmp	 WORD PTR [rsi+r8*2], r14w
  03d78	75 f6		 jne	 SHORT $LL2631@process

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  03d7a	48 8b d6	 mov	 rdx, rsi
  03d7d	48 8d 4d 80	 lea	 rcx, QWORD PTR oldName$17[rbp-256]
  03d81	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  03d86	90		 npad	 1

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  03d87	4c 89 75 a0	 mov	 QWORD PTR newName$34[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  03d8b	4c 89 75 b0	 mov	 QWORD PTR newName$34[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  03d8f	4c 89 75 b8	 mov	 QWORD PTR newName$34[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  03d93	4c 89 75 b0	 mov	 QWORD PTR newName$34[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  03d97	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR newName$34[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  03d9f	66 44 89 75 a0	 mov	 WORD PTR newName$34[rbp-256], r14w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  03da4	4c 8b c7	 mov	 r8, rdi
  03da7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2630@process:
  03db0	49 ff c0	 inc	 r8
  03db3	66 43 83 3c 47
	00		 cmp	 WORD PTR [r15+r8*2], 0
  03db9	75 f5		 jne	 SHORT $LL2630@process

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  03dbb	49 8b d7	 mov	 rdx, r15
  03dbe	48 8d 4d a0	 lea	 rcx, QWORD PTR newName$34[rbp-256]
  03dc2	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  03dc7	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 253  : 			for (size_t i = 0; i < MainFileManager.getNbBuffers(); ++i)

  03dc8	49 8b de	 mov	 rbx, r14
  03dcb	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03dd0	4c 8b 65 98	 mov	 r12, QWORD PTR oldName$17[rbp-232]
  03dd4	48 8b 75 80	 mov	 rsi, QWORD PTR oldName$17[rbp-256]
  03dd8	48 39 58 38	 cmp	 QWORD PTR [rax+56], rbx
  03ddc	0f 86 95 00 00
	00		 jbe	 $LN8@process
  03de2	4c 8b 7d 90	 mov	 r15, QWORD PTR oldName$17[rbp-240]
$LL9@process:

; 254  : 			{
; 255  : 				Buffer* buf = MainFileManager.getBufferByIndex(i);

  03de6	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03deb	48 8b c8	 mov	 rcx, rax
  03dee	48 8b d3	 mov	 rdx, rbx
  03df1	e8 00 00 00 00	 call	 ?getBufferByIndex@FileManager@@QEAAPEAVBuffer@@_K@Z ; FileManager::getBufferByIndex
  03df6	4c 8b c8	 mov	 r9, rax

; 256  : 				if (buf->getLangType() == L_USER && oldName == buf->getUserDefineLangName())

  03df9	83 78 20 0f	 cmp	 DWORD PTR [rax+32], 15
  03dfd	75 66		 jne	 SHORT $LN7@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  03dff	48 8d 48 28	 lea	 rcx, QWORD PTR [rax+40]

; 2319 :         return _BUF_SIZE <= _Myres;

  03e03	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 2306 :         if (_Large_string_engaged()) {

  03e08	72 03		 jb	 SHORT $LN744@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  03e0a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN744@process:

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  03e0d	48 8b d7	 mov	 rdx, rdi
$LL2629@process:
  03e10	48 ff c2	 inc	 rdx
  03e13	66 83 3c 51 00	 cmp	 WORD PTR [rcx+rdx*2], 0
  03e18	75 f6		 jne	 SHORT $LL2629@process

; 2305 :         const value_type* _Result = _Bx._Buf;

  03e1a	4c 8d 45 80	 lea	 r8, QWORD PTR oldName$17[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03e1e	49 83 fc 08	 cmp	 r12, 8

; 2306 :         if (_Large_string_engaged()) {

  03e22	4c 0f 43 c6	 cmovae	 r8, rsi

; 583  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  03e26	4c 3b fa	 cmp	 r15, rdx
  03e29	75 3a		 jne	 SHORT $LN7@process

; 256  :         return _CSTD wmemcmp(

  03e2b	49 8b d7	 mov	 rdx, r15
  03e2e	4d 85 ff	 test	 r15, r15
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  03e31	74 17		 je	 SHORT $LN2614@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 256  :         return _CSTD wmemcmp(

  03e33	4c 2b c1	 sub	 r8, rcx
$LL768@process:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 220  :             if (*_S1 != *_S2)

  03e36	0f b7 01	 movzx	 eax, WORD PTR [rcx]
  03e39	66 41 39 04 08	 cmp	 WORD PTR [r8+rcx], ax
  03e3e	75 25		 jne	 SHORT $LN7@process

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  03e40	48 83 c1 02	 add	 rcx, 2
  03e44	48 83 ea 01	 sub	 rdx, 1
  03e48	75 ec		 jne	 SHORT $LL768@process
$LN2614@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  03e4a	4c 8d 45 a0	 lea	 r8, QWORD PTR newName$34[rbp-256]

; 2319 :         return _BUF_SIZE <= _Myres;

  03e4e	48 83 7d b8 08	 cmp	 QWORD PTR newName$34[rbp-232], 8

; 2306 :         if (_Large_string_engaged()) {

  03e53	4c 0f 43 45 a0	 cmovae	 r8, QWORD PTR newName$34[rbp-256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 257  : 					buf->setLangType(L_USER, newName.c_str());

  03e58	ba 0f 00 00 00	 mov	 edx, 15
  03e5d	49 8b c9	 mov	 rcx, r9
  03e60	e8 00 00 00 00	 call	 ?setLangType@Buffer@@QEAAXW4LangType@@PEB_W@Z ; Buffer::setLangType
$LN7@process:

; 253  : 			for (size_t i = 0; i < MainFileManager.getNbBuffers(); ++i)

  03e65	48 ff c3	 inc	 rbx
  03e68	e8 00 00 00 00	 call	 ?getInstance@FileManager@@SAAEAV1@XZ ; FileManager::getInstance
  03e6d	48 3b 58 38	 cmp	 rbx, QWORD PTR [rax+56]
  03e71	0f 82 6f ff ff
	ff		 jb	 $LL9@process
$LN8@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  03e77	48 8b 55 b8	 mov	 rdx, QWORD PTR newName$34[rbp-232]
  03e7b	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  03e7f	72 36		 jb	 SHORT $LN800@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03e81	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  03e89	48 8b 4d a0	 mov	 rcx, QWORD PTR newName$34[rbp-256]
  03e8d	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  03e90	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03e97	72 19		 jb	 SHORT $LN799@process

; 155  :     _Bytes += _Non_user_size;

  03e99	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  03e9d	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  03ea1	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03ea4	48 83 c0 f8	 add	 rax, -8
  03ea8	48 83 f8 1f	 cmp	 rax, 31
  03eac	0f 87 2f 10 00
	00		 ja	 $LN2723@process
$LN799@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  03eb2	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN800@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  03eb7	4c 89 75 b0	 mov	 QWORD PTR newName$34[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  03ebb	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR newName$34[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  03ec3	66 44 89 75 a0	 mov	 WORD PTR newName$34[rbp-256], r14w

; 2319 :         return _BUF_SIZE <= _Myres;

  03ec8	49 83 fc 08	 cmp	 r12, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  03ecc	72 35		 jb	 SHORT $LN826@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  03ece	4a 8d 14 65 02
	00 00 00	 lea	 rdx, QWORD PTR [r12*2+2]
  03ed6	48 8b c6	 mov	 rax, rsi

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  03ed9	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  03ee0	72 19		 jb	 SHORT $LN825@process

; 155  :     _Bytes += _Non_user_size;

  03ee2	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  03ee6	48 8b 76 f8	 mov	 rsi, QWORD PTR [rsi-8]
  03eea	48 2b c6	 sub	 rax, rsi

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  03eed	48 83 c0 f8	 add	 rax, -8
  03ef1	48 83 f8 1f	 cmp	 rax, 31
  03ef5	0f 87 ec 0f 00
	00		 ja	 $LN2724@process
$LN825@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  03efb	48 8b ce	 mov	 rcx, rsi
  03efe	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN826@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  03f03	4c 89 75 90	 mov	 QWORD PTR oldName$17[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  03f07	48 c7 45 98 07
	00 00 00	 mov	 QWORD PTR oldName$17[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  03f0f	66 44 89 75 80	 mov	 WORD PTR oldName$17[rbp-256], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 259  : 			return TRUE;

  03f14	b8 01 00 00 00	 mov	 eax, 1
  03f19	e9 eb 0e 00 00	 jmp	 $LN1@process
$LN105@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Notepad_plus.h

; 501  : 		::CheckMenuItem(_mainMenuHandle, itemID, MF_BYCOMMAND | (willBeChecked?MF_CHECKED:MF_UNCHECKED));

  03f1e	45 33 c0	 xor	 r8d, r8d
  03f21	ba aa b4 00 00	 mov	 edx, 46250		; 0000b4aaH
  03f26	48 8b 8b 78 7a
	09 00		 mov	 rcx, QWORD PTR [rbx+621176]
  03f2d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CheckMenuItem
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\ToolBar\ToolBar.h

; 78   : 		::SendMessage(_hSelf, TB_CHECKBUTTON, ID2Check, MAKELONG(willBeChecked, 0));

  03f33	45 33 c9	 xor	 r9d, r9d
  03f36	41 b8 aa b4 00
	00		 mov	 r8d, 46250		; 0000b4aaH
$LN2706@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  03f3c	ba 02 04 00 00	 mov	 edx, 1026		; 00000402H
  03f41	48 8b 8b 30 0a
	00 00		 mov	 rcx, QWORD PTR [rbx+2608]
  03f48	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
  03f4e	49 8b c4	 mov	 rax, r12
  03f51	e9 b3 0e 00 00	 jmp	 $LN1@process
$LN106@process:

; 260  : 		}
; 261  : 
; 262  : 		case WM_CLOSE_USERDEFINE_DLG:
; 263  : 		{
; 264  : 			checkMenuItem(IDM_LANG_USER_DLG, false);
; 265  : 			_toolBar.setCheck(IDM_LANG_USER_DLG, false);
; 266  : 			return TRUE;
; 267  : 		}
; 268  : 
; 269  : 		case WM_REPLACEALL_INOPENEDDOC:
; 270  : 		{
; 271  : 			replaceInOpenedFiles();

  03f56	48 8b cb	 mov	 rcx, rbx
  03f59	e8 00 00 00 00	 call	 ?replaceInOpenedFiles@Notepad_plus@@AEAA_NXZ ; Notepad_plus::replaceInOpenedFiles

; 272  : 			return TRUE;

  03f5e	49 8b c4	 mov	 rax, r12
  03f61	e9 a3 0e 00 00	 jmp	 $LN1@process
$LN107@process:

; 273  : 		}
; 274  : 
; 275  : 		case WM_FINDALL_INOPENEDDOC:
; 276  : 		{
; 277  : 			findInOpenedFiles();

  03f66	48 8b cb	 mov	 rcx, rbx
  03f69	e8 00 00 00 00	 call	 ?findInOpenedFiles@Notepad_plus@@AEAA_NXZ ; Notepad_plus::findInOpenedFiles

; 278  : 			return TRUE;

  03f6e	49 8b c4	 mov	 rax, r12
  03f71	e9 93 0e 00 00	 jmp	 $LN1@process
$LN108@process:

; 279  : 		}
; 280  : 
; 281  : 		case WM_FINDALL_INCURRENTDOC:
; 282  : 		{
; 283  : 			const bool isEntireDoc = wParam == 0;

  03f76	4d 85 ff	 test	 r15, r15
  03f79	0f 94 c2	 sete	 dl

; 284  : 			return findInCurrentFile(isEntireDoc);

  03f7c	48 8b cb	 mov	 rcx, rbx
  03f7f	e8 00 00 00 00	 call	 ?findInCurrentFile@Notepad_plus@@AEAA_N_N@Z ; Notepad_plus::findInCurrentFile
  03f84	0f b6 c0	 movzx	 eax, al
  03f87	e9 7d 0e 00 00	 jmp	 $LN1@process
$LN109@process:

; 285  : 		}
; 286  : 
; 287  : 		case WM_FINDINFILES:
; 288  : 		{
; 289  : 			return findInFiles();

  03f8c	48 8b cb	 mov	 rcx, rbx
  03f8f	e8 00 00 00 00	 call	 ?findInFiles@Notepad_plus@@QEAA_NXZ ; Notepad_plus::findInFiles
  03f94	0f b6 c0	 movzx	 eax, al
  03f97	e9 6d 0e 00 00	 jmp	 $LN1@process
$LN110@process:

; 290  : 		}
; 291  : 
; 292  : 		case WM_FINDINPROJECTS:
; 293  : 		{
; 294  : 			return findInProjects();

  03f9c	48 8b cb	 mov	 rcx, rbx
  03f9f	e8 00 00 00 00	 call	 ?findInProjects@Notepad_plus@@QEAA_NXZ ; Notepad_plus::findInProjects
  03fa4	0f b6 c0	 movzx	 eax, al
  03fa7	e9 5d 0e 00 00	 jmp	 $LN1@process
$LN111@process:

; 295  : 		}
; 296  : 
; 297  : 		case WM_FINDALL_INCURRENTFINDER:
; 298  : 		{
; 299  : 			FindersInfo *findInFolderInfo = reinterpret_cast<FindersInfo *>(wParam);
; 300  : 			Finder * newFinder = _findReplaceDlg.createFinder();

  03fac	48 8d 8b b0 0c
	00 00		 lea	 rcx, QWORD PTR [rbx+3248]
  03fb3	e8 00 00 00 00	 call	 ?createFinder@FindReplaceDlg@@QEAAPEAVFinder@@XZ ; FindReplaceDlg::createFinder

; 301  : 			
; 302  : 			findInFolderInfo->_pDestFinder = newFinder;

  03fb8	49 89 47 08	 mov	 QWORD PTR [r15+8], rax

; 303  : 			bool isOK = findInFinderFiles(findInFolderInfo);

  03fbc	49 8b d7	 mov	 rdx, r15
  03fbf	48 8b cb	 mov	 rcx, rbx
  03fc2	e8 00 00 00 00	 call	 ?findInFinderFiles@Notepad_plus@@QEAA_NPEAUFindersInfo@@@Z ; Notepad_plus::findInFinderFiles
  03fc7	0f b6 c0	 movzx	 eax, al

; 304  : 			return isOK;

  03fca	e9 3a 0e 00 00	 jmp	 $LN1@process
$LN112@process:

; 305  : 		}
; 306  : 
; 307  : 		case WM_REPLACEINFILES:
; 308  : 		{
; 309  : 			replaceInFiles();

  03fcf	48 8b cb	 mov	 rcx, rbx
  03fd2	e8 00 00 00 00	 call	 ?replaceInFiles@Notepad_plus@@QEAA_NXZ ; Notepad_plus::replaceInFiles

; 310  : 			return TRUE;

  03fd7	49 8b c4	 mov	 rax, r12
  03fda	e9 2a 0e 00 00	 jmp	 $LN1@process
$LN113@process:

; 311  : 		}
; 312  : 
; 313  : 		case WM_REPLACEINPROJECTS:
; 314  : 		{
; 315  : 			replaceInProjects();

  03fdf	48 8b cb	 mov	 rcx, rbx
  03fe2	e8 00 00 00 00	 call	 ?replaceInProjects@Notepad_plus@@QEAA_NXZ ; Notepad_plus::replaceInProjects

; 316  : 			return TRUE;

  03fe7	49 8b c4	 mov	 rax, r12
  03fea	e9 1a 0e 00 00	 jmp	 $LN1@process
$LN121@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  03fef	4c 89 75 a0	 mov	 QWORD PTR $T33[rbp-256], r14

; 2355 :     size_type _Mysize = 0; // current length of string

  03ff3	4c 89 75 b0	 mov	 QWORD PTR $T33[rbp-240], r14

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  03ff7	4c 89 75 b8	 mov	 QWORD PTR $T33[rbp-232], r14

; 4596 :         _My_data._Mysize = 0;

  03ffb	4c 89 75 b0	 mov	 QWORD PTR $T33[rbp-240], r14

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  03fff	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T33[rbp-232], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  04007	66 44 89 75 a0	 mov	 WORD PTR $T33[rbp-256], r14w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  0400c	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
  04013	4c 8b c7	 mov	 r8, rdi
$LL2628@process:
  04016	49 ff c0	 inc	 r8
  04019	66 46 39 34 46	 cmp	 WORD PTR [rsi+r8*2], r14w
  0401e	75 f6		 jne	 SHORT $LL2628@process

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  04020	48 8b d6	 mov	 rdx, rsi
  04023	48 8d 4d a0	 lea	 rcx, QWORD PTR $T33[rbp-256]
  04027	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  0402c	90		 npad	 1
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 383  : 			BufferID id = doOpen(reinterpret_cast<const TCHAR *>(lParam));

  0402d	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  04032	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  04037	89 7c 24 20	 mov	 DWORD PTR [rsp+32], edi
  0403b	45 33 c9	 xor	 r9d, r9d
  0403e	45 33 c0	 xor	 r8d, r8d
  04041	48 8d 55 a0	 lea	 rdx, QWORD PTR $T33[rbp-256]
  04045	48 8b cb	 mov	 rcx, rbx
  04048	e8 00 00 00 00	 call	 ?doOpen@Notepad_plus@@QEAAPEAVBuffer@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N1HPEB_WU_FILETIME@@@Z ; Notepad_plus::doOpen
  0404d	48 8b f8	 mov	 rdi, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  04050	48 8b 55 b8	 mov	 rdx, QWORD PTR $T33[rbp-232]
  04054	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  04058	72 36		 jb	 SHORT $LN874@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0405a	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  04062	48 8b 4d a0	 mov	 rcx, QWORD PTR $T33[rbp-256]
  04066	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  04069	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  04070	72 19		 jb	 SHORT $LN873@process

; 155  :     _Bytes += _Non_user_size;

  04072	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  04076	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  0407a	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0407d	48 83 c0 f8	 add	 rax, -8
  04081	48 83 f8 1f	 cmp	 rax, 31
  04085	0f 87 62 0e 00
	00		 ja	 $LN2725@process
$LN873@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0408b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN874@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  04090	4c 89 75 b0	 mov	 QWORD PTR $T33[rbp-240], r14

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  04094	48 c7 45 b8 07
	00 00 00	 mov	 QWORD PTR $T33[rbp-232], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0409c	66 44 89 75 a0	 mov	 WORD PTR $T33[rbp-256], r14w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 384  : 			if (id != BUFFER_INVALID)

  040a1	48 85 ff	 test	 rdi, rdi
  040a4	0f 84 42 0d 00
	00		 je	 $LN299@process

; 385  : 				return switchToFile(id);

  040aa	48 8b d7	 mov	 rdx, rdi
  040ad	48 8b cb	 mov	 rcx, rbx
  040b0	e8 00 00 00 00	 call	 ?switchToFile@Notepad_plus@@QEAA_NPEAVBuffer@@@Z ; Notepad_plus::switchToFile
  040b5	0f b6 c0	 movzx	 eax, al
  040b8	e9 4c 0d 00 00	 jmp	 $LN1@process
$LN293@process:

; 1250 : 		}
; 1251 : 
; 1252 : 		case WM_FRSAVE_INT:
; 1253 : 		{
; 1254 : 			_macro.push_back(recordedMacroStep(static_cast<int32_t>(wParam), 0, static_cast<long>(lParam), NULL, recordedMacroStep::mtSavedSnR));

  040bd	4c 63 ce	 movsxd	 r9, esi
  040c0	b8 03 00 00 00	 mov	 eax, 3
  040c5	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  040c9	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  040ce	45 33 c0	 xor	 r8d, r8d
  040d1	41 8b d7	 mov	 edx, r15d
  040d4	48 8d 4d a0	 lea	 rcx, QWORD PTR $T28[rbp-256]
  040d8	e8 00 00 00 00	 call	 ??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z ; recordedMacroStep::recordedMacroStep
  040dd	90		 npad	 1
  040de	48 8d 8b e8 7a
	09 00		 lea	 rcx, QWORD PTR [rbx+621288]
  040e5	48 8b d0	 mov	 rdx, rax
  040e8	e8 00 00 00 00	 call	 ?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back
  040ed	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  040ee	48 8d 4d b8	 lea	 rcx, QWORD PTR $T28[rbp-232]
  040f2	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1255 : 			break;

  040f7	e9 f0 0c 00 00	 jmp	 $LN299@process
$LN294@process:

; 1256 : 		}
; 1257 : 
; 1258 : 		case WM_FRSAVE_STR:
; 1259 : 		{
; 1260 : 			_macro.push_back(recordedMacroStep(static_cast<int32_t>(wParam), 0, 0, reinterpret_cast<const TCHAR *>(lParam), recordedMacroStep::mtSavedSnR));

  040fc	b8 03 00 00 00	 mov	 eax, 3
  04101	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  04105	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0410a	45 33 c9	 xor	 r9d, r9d
  0410d	45 33 c0	 xor	 r8d, r8d
  04110	41 8b d7	 mov	 edx, r15d
  04113	48 8d 4d a0	 lea	 rcx, QWORD PTR $T27[rbp-256]
  04117	e8 00 00 00 00	 call	 ??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z ; recordedMacroStep::recordedMacroStep
  0411c	90		 npad	 1
  0411d	48 8d 8b e8 7a
	09 00		 lea	 rcx, QWORD PTR [rbx+621288]
  04124	48 8b d0	 mov	 rdx, rax
  04127	e8 00 00 00 00	 call	 ?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back
  0412c	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  0412d	48 8d 4d b8	 lea	 rcx, QWORD PTR $T27[rbp-232]
  04131	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1261 : 			break;

  04136	e9 b1 0c 00 00	 jmp	 $LN299@process
$LN602@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  0413b	81 fa a1 13 00
	00		 cmp	 edx, 5025		; 000013a1H
  04141	0f 87 bb 03 00
	00		 ja	 $LN603@process
  04147	0f 84 89 03 00
	00		 je	 $LN291@process
  0414d	8d 82 46 f0 ff
	ff		 lea	 eax, DWORD PTR [rdx-4026]
  04153	83 f8 09	 cmp	 eax, 9
  04156	0f 87 d2 03 00
	00		 ja	 $LN563@process
  0415c	4c 8d 2d 00 00
	00 00		 lea	 r13, OFFSET FLAT:__ImageBase
  04163	41 8b 84 85 00
	00 00 00	 mov	 eax, DWORD PTR $LN2627@process[r13+rax*4]
  0416b	49 03 c5	 add	 rax, r13
  0416e	ff e0		 jmp	 rax
$LN200@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  04170	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  04177	4c 8b 40 40	 mov	 r8, QWORD PTR [rax+64]
  0417b	49 81 c0 b0 00
	00 00		 add	 r8, 176			; 000000b0H

; 2319 :         return _BUF_SIZE <= _Myres;

  04182	49 83 78 18 08	 cmp	 QWORD PTR [r8+24], 8

; 2306 :         if (_Large_string_engaged()) {

  04187	72 03		 jb	 SHORT $LN1269@process

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  04189	4d 8b 00	 mov	 r8, QWORD PTR [r8]
$LN1269@process:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_wstring.h

; 113  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(

  0418c	ba 04 01 00 00	 mov	 edx, 260		; 00000104H
  04191	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$58[rbp-256]
  04198	e8 00 00 00 00	 call	 wcscpy_s
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 789  : 			TCHAR* fileStr = str;

  0419d	48 8d 9d a0 00
	00 00		 lea	 rbx, QWORD PTR str$58[rbp-256]

; 790  : 
; 791  : 			if (message == NPPM_GETCURRENTDIRECTORY)

  041a4	8b 44 24 44	 mov	 eax, DWORD PTR message$GSCopy$1$[rsp]
  041a8	3d ba 0f 00 00	 cmp	 eax, 4026		; 00000fbaH
  041ad	75 0f		 jne	 SHORT $LN205@process

; 792  : 				PathRemoveFileSpec(str);

  041af	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$58[rbp-256]
  041b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathRemoveFileSpecW
  041bc	eb 4f		 jmp	 SHORT $LN211@process
$LN205@process:

; 793  : 			else if (message == NPPM_GETFILENAME)

  041be	3d bb 0f 00 00	 cmp	 eax, 4027		; 00000fbbH
  041c3	75 0f		 jne	 SHORT $LN207@process

; 794  : 				fileStr = PathFindFileName(str);

  041c5	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$58[rbp-256]
  041cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindFileNameW
  041d2	eb 36		 jmp	 SHORT $LN2691@process
$LN207@process:

; 795  : 			else if (message == NPPM_GETNAMEPART)

  041d4	3d bc 0f 00 00	 cmp	 eax, 4028		; 00000fbcH
  041d9	75 1b		 jne	 SHORT $LN209@process

; 796  : 			{
; 797  : 				fileStr = PathFindFileName(str);

  041db	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$58[rbp-256]
  041e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindFileNameW
  041e8	48 8b d8	 mov	 rbx, rax

; 798  : 				PathRemoveExtension(fileStr);

  041eb	48 8b c8	 mov	 rcx, rax
  041ee	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathRemoveExtensionW

; 799  : 			}

  041f4	eb 17		 jmp	 SHORT $LN211@process
$LN209@process:

; 800  : 			else if (message == NPPM_GETEXTPART)

  041f6	3d bd 0f 00 00	 cmp	 eax, 4029		; 00000fbdH
  041fb	75 10		 jne	 SHORT $LN211@process

; 801  : 				fileStr = PathFindExtension(str);

  041fd	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$58[rbp-256]
  04204	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindExtensionW
$LN2691@process:

; 802  : 
; 803  : 			// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.
; 804  : 			// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.
; 805  : 			if (wParam != 0)

  0420a	48 8b d8	 mov	 rbx, rax
$LN211@process:
  0420d	4d 85 ff	 test	 r15, r15
  04210	74 12		 je	 SHORT $LN213@process

; 806  : 			{
; 807  : 				if (lstrlen(fileStr) >= int(wParam))

  04212	48 8b cb	 mov	 rcx, rbx
  04215	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0421b	41 3b c7	 cmp	 eax, r15d
  0421e	0f 8d 93 bf ff
	ff		 jge	 $LN2622@process
$LN213@process:

; 808  : 				{
; 809  : 					return FALSE;
; 810  : 				}
; 811  : 			}
; 812  : 
; 813  : 			lstrcpy(reinterpret_cast<TCHAR *>(lParam), fileStr);

  04224	48 8b d3	 mov	 rdx, rbx
  04227	48 8b ce	 mov	 rcx, rsi
  0422a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 2748 : }

  04230	49 8b c4	 mov	 rax, r12
  04233	e9 d1 0b 00 00	 jmp	 $LN1@process
$LN214@process:

; 814  : 			return TRUE;
; 815  : 		}
; 816  : 
; 817  : 		case NPPM_GETCURRENTWORD:
; 818  : 		{
; 819  : 			const int strSize = CURRENTWORD_MAXLENGTH;
; 820  : 			TCHAR str[strSize];
; 821  : 			TCHAR *pTchar = reinterpret_cast<TCHAR *>(lParam);
; 822  : 			_pEditView->getGenericSelectedText(str, strSize);

  04238	45 0f b6 cc	 movzx	 r9d, r12b
  0423c	41 b8 00 08 00
	00		 mov	 r8d, 2048		; 00000800H
  04242	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$57[rbp-256]
  04249	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04250	e8 00 00 00 00	 call	 ?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z ; ScintillaEditView::getGenericSelectedText
  04255	4d 85 ff	 test	 r15, r15

; 823  : 			// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.
; 824  : 			// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.
; 825  : 			if (wParam != 0)

  04258	74 31		 je	 SHORT $LN217@process

; 826  : 			{
; 827  : 				if (lstrlen(str) >= int(wParam))	//buffer too small

  0425a	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$57[rbp-256]
  04261	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  04267	41 3b c7	 cmp	 eax, r15d
  0426a	0f 8d 47 bf ff
	ff		 jge	 $LN2622@process

; 828  : 				{
; 829  : 					return FALSE;
; 830  : 				}
; 831  : 				else //buffer large enough, perform safe copy
; 832  : 				{
; 833  : 					lstrcpyn(pTchar, str, static_cast<int32_t>(wParam));

  04270	45 8b c7	 mov	 r8d, r15d
  04273	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$57[rbp-256]
  0427a	48 8b ce	 mov	 rcx, rsi
  0427d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpynW

; 2748 : }

  04283	49 8b c4	 mov	 rax, r12
  04286	e9 7e 0b 00 00	 jmp	 $LN1@process
$LN217@process:

; 834  : 					return TRUE;
; 835  : 				}
; 836  : 			}
; 837  : 
; 838  : 			lstrcpy(pTchar, str);

  0428b	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$57[rbp-256]
  04292	48 8b ce	 mov	 rcx, rsi
  04295	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 2748 : }

  0429b	49 8b c4	 mov	 rax, r12
  0429e	e9 66 0b 00 00	 jmp	 $LN1@process
$LN218@process:

; 839  : 			return TRUE;
; 840  : 		}
; 841  : 
; 842  : 		case NPPM_GETFILENAMEATCURSOR: // wParam = buffer length, lParam = (TCHAR*)buffer
; 843  : 		{
; 844  : 			const int strSize = CURRENTWORD_MAXLENGTH;
; 845  : 			TCHAR str[strSize];
; 846  : 			TCHAR strLine[strSize];
; 847  : 			size_t lineNumber;
; 848  : 			int col;
; 849  : 			int i;
; 850  : 			int hasSlash;
; 851  : 			TCHAR *pTchar = reinterpret_cast<TCHAR *>(lParam);
; 852  : 
; 853  : 			_pEditView->getGenericSelectedText(str, strSize); // this is either the selected text, or the word under the cursor if there is no selection

  042a3	45 0f b6 cc	 movzx	 r9d, r12b
  042a7	41 b8 00 08 00
	00		 mov	 r8d, 2048		; 00000800H
  042ad	48 8d 95 a0 10
	00 00		 lea	 rdx, QWORD PTR str$66[rbp-256]
  042b4	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  042bb	e8 00 00 00 00	 call	 ?getGenericSelectedText@ScintillaEditView@@QEAAPEA_WPEA_WH_N@Z ; ScintillaEditView::getGenericSelectedText

; 854  : 			hasSlash = FALSE;

  042c0	45 8b ce	 mov	 r9d, r14d

; 855  : 			for (i = 0; str[i] != 0; i++) if (CharacterIs(str[i], TEXT("\\/"))) hasSlash = TRUE;

  042c3	0f b7 95 a0 10
	00 00		 movzx	 edx, WORD PTR str$66[rbp-256]
  042ca	66 85 d2	 test	 dx, dx
  042cd	74 46		 je	 SHORT $LN2609@process

; 2033 : 			if ((nppgui._isMinimizedToTray || _pPublicInterface->isPrelaunch()) && (wParam == SC_MINIMIZE))

  042cf	4d 8b c6	 mov	 r8, r14
$LL14@process:

; 137  : 	for (i = 0; any[i] != 0; i++)

  042d2	49 8b ce	 mov	 rcx, r14
  042d5	b8 5c 00 00 00	 mov	 eax, 92			; 0000005cH
  042da	66 0f 1f 44 00
	00		 npad	 6
$LL1278@process:

; 138  : 	{
; 139  : 		if (any[i] == c) return TRUE;

  042e0	66 3b c2	 cmp	 ax, dx
  042e3	74 13		 je	 SHORT $LN2615@process

; 137  : 	for (i = 0; any[i] != 0; i++)

  042e5	48 ff c1	 inc	 rcx
  042e8	41 0f b7 84 4d
	00 00 00 00	 movzx	 eax, WORD PTR ??_C@_15MNCACJLI@?$AA?2?$AA?1@[r13+rcx*2]
  042f1	66 85 c0	 test	 ax, ax
  042f4	75 ea		 jne	 SHORT $LL1278@process

; 1321 : 							|| ((deltaCurrLine == 0) && (currLine == 0) && ((deltaLastLine >= 0) || cursorMovedUp)))

  042f6	eb 03		 jmp	 SHORT $LN12@process
$LN2615@process:

; 855  : 			for (i = 0; str[i] != 0; i++) if (CharacterIs(str[i], TEXT("\\/"))) hasSlash = TRUE;

  042f8	45 8b cc	 mov	 r9d, r12d
$LN12@process:
  042fb	49 ff c0	 inc	 r8
  042fe	42 0f b7 94 45
	a0 10 00 00	 movzx	 edx, WORD PTR str$66[rbp+r8*2-256]
  04307	66 85 d2	 test	 dx, dx
  0430a	75 c6		 jne	 SHORT $LL14@process

; 856  : 
; 857  : 			if (hasSlash == FALSE)

  0430c	45 85 c9	 test	 r9d, r9d
  0430f	0f 85 0d 01 00
	00		 jne	 $LN220@process
$LN2609@process:

; 858  : 			{
; 859  : 				// it's not a full file name so try to find the beginning and ending of it
; 860  : 				int start;
; 861  : 				int end;
; 862  : 				const TCHAR *delimiters;
; 863  : 
; 864  : 				lineNumber = _pEditView->getCurrentLineNumber();

  04315	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  0431c	e8 00 00 00 00	 call	 ?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ ; ScintillaEditView::getCurrentLineNumber
  04321	48 8b f8	 mov	 rdi, rax

; 865  : 				col = _pEditView->getCurrentColumnNumber();

  04324	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  0432b	e8 00 00 00 00	 call	 ?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ ; ScintillaEditView::getCurrentColumnNumber
  04330	89 44 24 50	 mov	 DWORD PTR end$1$[rsp], eax

; 866  : 				_pEditView->getLine(lineNumber, strLine, strSize);

  04334	41 b9 00 08 00
	00		 mov	 r9d, 2048		; 00000800H
  0433a	4c 8d 85 a0 00
	00 00		 lea	 r8, QWORD PTR strLine$56[rbp-256]
  04341	48 8b d7	 mov	 rdx, rdi
  04344	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  0434b	e8 00 00 00 00	 call	 ?getLine@ScintillaEditView@@QEAAX_KPEA_WH@Z ; ScintillaEditView::getLine

; 867  : 
; 868  : 				// find the start
; 869  : 				start = col;

  04350	48 63 5c 24 50	 movsxd	 rbx, DWORD PTR end$1$[rsp]
  04355	8b d3		 mov	 edx, ebx
  04357	89 5c 24 50	 mov	 DWORD PTR start$1$[rsp], ebx

; 870  : 				delimiters = TEXT(" \t[(\"<>");

  0435b	4c 8b cb	 mov	 r9, rbx
  0435e	48 8b fb	 mov	 rdi, rbx

; 871  : 				while ((start > 0) && (CharacterIs(strLine[start], delimiters) == FALSE)) start--;

  04361	4c 8d 15 00 00
	00 00		 lea	 r10, OFFSET FLAT:??_C@_1BA@GDFBKANO@?$AA?5?$AA?7?$AA?$FL?$AA?$CI?$AA?$CC?$AA?$DM?$AA?$DO@
  04368	85 db		 test	 ebx, ebx
  0436a	7e 36		 jle	 SHORT $LN2473@process
  0436c	0f 1f 40 00	 npad	 4
$LL15@process:

; 137  : 	for (i = 0; any[i] != 0; i++)

  04370	49 8b ce	 mov	 rcx, r14

; 138  : 	{
; 139  : 		if (any[i] == c) return TRUE;

  04373	46 0f b7 84 4d
	a0 00 00 00	 movzx	 r8d, WORD PTR strLine$56[rbp+r9*2-256]
  0437c	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
$LL1284@process:
  04381	66 41 3b c0	 cmp	 ax, r8w
  04385	74 17		 je	 SHORT $LN2681@process

; 137  : 	for (i = 0; any[i] != 0; i++)

  04387	48 ff c1	 inc	 rcx
  0438a	41 0f b7 04 4a	 movzx	 eax, WORD PTR [r10+rcx*2]
  0438f	66 85 c0	 test	 ax, ax
  04392	75 ed		 jne	 SHORT $LL1284@process

; 871  : 				while ((start > 0) && (CharacterIs(strLine[start], delimiters) == FALSE)) start--;

  04394	ff ca		 dec	 edx
  04396	49 ff c9	 dec	 r9
  04399	4d 85 c9	 test	 r9, r9
  0439c	7f d2		 jg	 SHORT $LL15@process
$LN2681@process:
  0439e	89 54 24 50	 mov	 DWORD PTR start$1$[rsp], edx
$LN2473@process:

; 872  : 				if (CharacterIs(strLine[start], delimiters)) start++;

  043a2	48 63 c2	 movsxd	 rax, edx
  043a5	49 8b d2	 mov	 rdx, r10
  043a8	0f b7 8c 45 a0
	00 00 00	 movzx	 ecx, WORD PTR strLine$56[rbp+rax*2-256]
  043b0	e8 00 00 00 00	 call	 ?CharacterIs@@YAH_WPEB_W@Z ; CharacterIs

; 873  : 
; 874  : 				// find the end
; 875  : 				end = col;

  043b5	8b 4c 24 50	 mov	 ecx, DWORD PTR start$1$[rsp]
  043b9	44 8d 41 01	 lea	 r8d, DWORD PTR [rcx+1]
  043bd	85 c0		 test	 eax, eax
  043bf	44 0f 44 c1	 cmove	 r8d, ecx

; 876  : 				delimiters = TEXT(" \t:()[]<>\"\r\n");
; 877  : 				while ((strLine[end] != 0) && (CharacterIs(strLine[end], delimiters) == FALSE)) end++;

  043c3	0f b7 94 5d a0
	00 00 00	 movzx	 edx, WORD PTR strLine$56[rbp+rbx*2-256]
  043cb	66 85 d2	 test	 dx, dx
  043ce	74 30		 je	 SHORT $LN2474@process
$LL17@process:

; 137  : 	for (i = 0; any[i] != 0; i++)

  043d0	49 8b ce	 mov	 rcx, r14
  043d3	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
$LL1290@process:

; 138  : 	{
; 139  : 		if (any[i] == c) return TRUE;

  043d8	66 3b c2	 cmp	 ax, dx
  043db	74 23		 je	 SHORT $LN2474@process

; 137  : 	for (i = 0; any[i] != 0; i++)

  043dd	48 ff c1	 inc	 rcx
  043e0	41 0f b7 84 4d
	00 00 00 00	 movzx	 eax, WORD PTR ??_C@_1BK@BFONLOAD@?$AA?5?$AA?7?$AA?3?$AA?$CI?$AA?$CJ?$AA?$FL?$AA?$FN?$AA?$DM?$AA?$DO?$AA?$CC?$AA?$AN?$AA?6@[r13+rcx*2]
  043e9	66 85 c0	 test	 ax, ax
  043ec	75 ea		 jne	 SHORT $LL1290@process

; 876  : 				delimiters = TEXT(" \t:()[]<>\"\r\n");
; 877  : 				while ((strLine[end] != 0) && (CharacterIs(strLine[end], delimiters) == FALSE)) end++;

  043ee	ff c3		 inc	 ebx
  043f0	48 ff c7	 inc	 rdi
  043f3	0f b7 94 7d a0
	00 00 00	 movzx	 edx, WORD PTR strLine$56[rbp+rdi*2-256]
  043fb	66 85 d2	 test	 dx, dx
  043fe	75 d0		 jne	 SHORT $LL17@process
$LN2474@process:

; 878  : 
; 879  : 				lstrcpyn(str, &strLine[start], end - start + 1);

  04400	41 2b d8	 sub	 ebx, r8d
  04403	49 63 c0	 movsxd	 rax, r8d
  04406	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR strLine$56[rbp-256]
  0440d	48 8d 14 42	 lea	 rdx, QWORD PTR [rdx+rax*2]
  04411	44 8d 43 01	 lea	 r8d, DWORD PTR [rbx+1]
  04415	48 8d 8d a0 10
	00 00		 lea	 rcx, QWORD PTR str$66[rbp-256]
  0441c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpynW
$LN220@process:

; 880  : 			}
; 881  : 
; 882  : 			if (lstrlen(str) >= int(wParam))	//buffer too small

  04422	48 8d 8d a0 10
	00 00		 lea	 rcx, QWORD PTR str$66[rbp-256]
  04429	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  0442f	41 3b c7	 cmp	 eax, r15d
  04432	0f 8d 7f bd ff
	ff		 jge	 $LN2622@process

; 883  : 			{
; 884  : 				return FALSE;
; 885  : 			}
; 886  : 			else //buffer large enough, perform safe copy
; 887  : 			{
; 888  : 				lstrcpyn(pTchar, str, static_cast<int32_t>(wParam));

  04438	45 8b c7	 mov	 r8d, r15d
  0443b	48 8d 95 a0 10
	00 00		 lea	 rdx, QWORD PTR str$66[rbp-256]
  04442	48 8b ce	 mov	 rcx, rsi
  04445	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpynW

; 2748 : }

  0444b	49 8b c4	 mov	 rax, r12
  0444e	e9 b6 09 00 00	 jmp	 $LN1@process
$LN223@process:

; 889  : 				return TRUE;
; 890  : 			}
; 891  : 		}
; 892  : 
; 893  : 		case NPPM_GETNPPFULLFILEPATH:
; 894  : 		case NPPM_GETNPPDIRECTORY:
; 895  : 		{
; 896  : 			const int strSize = MAX_PATH;
; 897  : 			TCHAR str[strSize];
; 898  : 
; 899  : 			::GetModuleFileName(NULL, str, strSize);

  04453	41 b8 04 01 00
	00		 mov	 r8d, 260		; 00000104H
  04459	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$55[rbp-256]
  04460	33 c9		 xor	 ecx, ecx
  04462	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleFileNameW

; 900  : 
; 901  : 			if (message == NPPM_GETNPPDIRECTORY)

  04468	81 7c 24 44 bf
	0f 00 00	 cmp	 DWORD PTR message$GSCopy$1$[rsp], 4031 ; 00000fbfH
  04470	75 0d		 jne	 SHORT $LN226@process

; 902  : 				PathRemoveFileSpec(str);

  04472	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$55[rbp-256]
  04479	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathRemoveFileSpecW
$LN226@process:

; 903  : 
; 904  : 			// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.
; 905  : 			// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.
; 906  : 			if (wParam != 0)

  0447f	4d 85 ff	 test	 r15, r15
  04482	74 16		 je	 SHORT $LN228@process

; 907  : 			{
; 908  : 				if (lstrlen(str) >= int(wParam))

  04484	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR str$55[rbp-256]
  0448b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrlenW
  04491	41 3b c7	 cmp	 eax, r15d
  04494	0f 8d 1d bd ff
	ff		 jge	 $LN2622@process
$LN228@process:

; 909  : 				{
; 910  : 					return FALSE;
; 911  : 				}
; 912  : 			}
; 913  : 
; 914  : 			lstrcpy(reinterpret_cast<TCHAR *>(lParam), str);

  0449a	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR str$55[rbp-256]
  044a1	48 8b ce	 mov	 rcx, rsi
  044a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_lstrcpyW

; 2748 : }

  044aa	49 8b c4	 mov	 rax, r12
  044ad	e9 57 09 00 00	 jmp	 $LN1@process
$LN229@process:

; 915  : 			return TRUE;
; 916  : 		}
; 917  : 
; 918  : 		case NPPM_GETCURRENTLINE:
; 919  : 		{
; 920  : 			return _pEditView->getCurrentLineNumber();

  044b2	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  044b9	e8 00 00 00 00	 call	 ?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ ; ScintillaEditView::getCurrentLineNumber
  044be	e9 46 09 00 00	 jmp	 $LN1@process
$LN230@process:

; 921  : 		}
; 922  : 
; 923  : 		case NPPM_GETCURRENTCOLUMN:
; 924  : 		{
; 925  : 			return _pEditView->getCurrentColumnNumber();

  044c3	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  044ca	e8 00 00 00 00	 call	 ?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ ; ScintillaEditView::getCurrentColumnNumber
$LN2703@process:

; 2748 : }

  044cf	48 98		 cdqe
  044d1	e9 33 09 00 00	 jmp	 $LN1@process
$LN291@process:

; 1243 : 		}
; 1244 : 
; 1245 : 		case WM_GETCURRENTMACROSTATUS:
; 1246 : 		{
; 1247 : 			if (_recordingMacro)

  044d6	44 38 b3 00 7b
	09 00		 cmp	 BYTE PTR [rbx+621312], r14b
  044dd	0f 85 1f cc ff
	ff		 jne	 $LN2695@process

; 1249 : 			return (_macro.empty())?0:MACRO_RECORDING_HAS_STOPPED;

  044e3	b9 02 00 00 00	 mov	 ecx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  044e8	48 8b 83 f0 7a
	09 00		 mov	 rax, QWORD PTR [rbx+621296]
  044ef	48 39 83 e8 7a
	09 00		 cmp	 QWORD PTR [rbx+621288], rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1249 : 			return (_macro.empty())?0:MACRO_RECORDING_HAS_STOPPED;

  044f6	49 0f 44 ce	 cmove	 rcx, r14
$LN2704@process:

; 2748 : }

  044fa	48 8b c1	 mov	 rax, rcx
  044fd	e9 07 09 00 00	 jmp	 $LN1@process
$LN603@process:

; 150  : 	{
; 151  : 		return result;
; 152  : 	}
; 153  : 
; 154  : 	switch (message)

  04502	8b c2		 mov	 eax, edx
  04504	2d a2 13 00 00	 sub	 eax, 5026		; 000013a2H
  04509	0f 84 0b 07 00
	00		 je	 $LN295@process
  0450f	2d e7 03 00 00	 sub	 eax, 999		; 000003e7H
  04514	0f 84 54 04 00
	00		 je	 $LN407@process
  0451a	41 2b c4	 sub	 eax, r12d
  0451d	0f 84 3b 04 00
	00		 je	 $LN417@process
  04523	3d b7 0b 00 00	 cmp	 eax, 2999		; 00000bb7H
  04528	0f 84 6f 02 00
	00		 je	 $LN250@process
$LN563@process:

; 2668 : 		}
; 2669 : 
; 2670 : 		default:
; 2671 : 		{
; 2672 : 			if (message == WDN_NOTIFY)

  0452e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?WDN_NOTIFY@@3IB ; WDN_NOTIFY
  04534	0f 85 5a c0 ff
	ff		 jne	 $LN370@process

; 2673 : 			{
; 2674 : 				NMWINDLG* nmdlg = reinterpret_cast<NMWINDLG*>(lParam);
; 2675 : 				switch (nmdlg->type)

  0453a	8b 4e 1c	 mov	 ecx, DWORD PTR [rsi+28]
  0453d	41 2b cc	 sub	 ecx, r12d
  04540	0f 84 40 02 00
	00		 je	 $LN565@process
  04546	41 2b cc	 sub	 ecx, r12d
  04549	0f 84 f2 01 00
	00		 je	 $LN566@process
  0454f	41 2b cc	 sub	 ecx, r12d
  04552	0f 84 5c 01 00
	00		 je	 $LN567@process
  04558	41 3b cc	 cmp	 ecx, r12d
  0455b	0f 85 a1 cb ff
	ff		 jne	 $LN2695@process

; 2712 : 								}
; 2713 : 							}
; 2714 : 						}
; 2715 : 						nmdlg->processed = TRUE;
; 2716 : 						break;
; 2717 : 					}
; 2718 : 
; 2719 : 					case WDT_SORT:
; 2720 : 					{
; 2721 : 						if (nmdlg->nItems != _pDocTab->nbItem())	//sanity check, if mismatch just abort

  04561	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  04568	8b 46 24	 mov	 eax, DWORD PTR [rsi+36]
  0456b	48 3b 41 20	 cmp	 rax, QWORD PTR [rcx+32]
  0456f	0f 85 8d cb ff
	ff		 jne	 $LN2695@process
  04575	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  04578	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR tempBufs$9[rbp-256], xmm0
  0457d	4d 8b fe	 mov	 r15, r14
  04580	4c 89 75 90	 mov	 QWORD PTR tempBufs$9[rbp-240], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2726 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  04584	45 8b ee	 mov	 r13d, r14d
  04587	8b 46 24	 mov	 eax, DWORD PTR [rsi+36]
  0458a	85 c0		 test	 eax, eax
  0458c	74 5a		 je	 SHORT $LN78@process
  0458e	48 8b 7d 88	 mov	 rdi, QWORD PTR tempBufs$9[rbp-248]
  04592	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL79@process:

; 2727 : 						{
; 2728 : 							tempBufs.push_back(_pDocTab->getBufferByIndex(i));

  045a0	41 8b d5	 mov	 edx, r13d
  045a3	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  045aa	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  045af	48 89 45 f0	 mov	 QWORD PTR $T38[rbp-256], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  045b3	49 3b ff	 cmp	 rdi, r15
  045b6	74 0d		 je	 SHORT $LN2367@process

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  045b8	48 89 07	 mov	 QWORD PTR [rdi], rax

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  045bb	48 83 c7 08	 add	 rdi, 8
  045bf	48 89 7d 88	 mov	 QWORD PTR tempBufs$9[rbp-248], rdi

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  045c3	eb 18		 jmp	 SHORT $LN77@process
$LN2367@process:

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  045c5	4c 8d 45 f0	 lea	 r8, QWORD PTR $T38[rbp-256]
  045c9	48 8b d7	 mov	 rdx, rdi
  045cc	48 8d 4d 80	 lea	 rcx, QWORD PTR tempBufs$9[rbp-256]
  045d0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@PEAVBuffer@@@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAAPEAPEAVBuffer@@QEAPEAV2@$$QEAPEAV2@@Z ; std::vector<Buffer *,std::allocator<Buffer *> >::_Emplace_reallocate<Buffer *>
  045d5	4c 8b 7d 90	 mov	 r15, QWORD PTR tempBufs$9[rbp-240]
  045d9	48 8b 7d 88	 mov	 rdi, QWORD PTR tempBufs$9[rbp-248]
$LN77@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2726 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  045dd	41 ff c5	 inc	 r13d
  045e0	8b 46 24	 mov	 eax, DWORD PTR [rsi+36]
  045e3	44 3b e8	 cmp	 r13d, eax
  045e6	72 b8		 jb	 SHORT $LL79@process
$LN78@process:

; 2729 : 						}
; 2730 : 						//Reset buffers
; 2731 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  045e8	41 8b fe	 mov	 edi, r14d
  045eb	4c 8b 6d 80	 mov	 r13, QWORD PTR tempBufs$9[rbp-256]
  045ef	85 c0		 test	 eax, eax
  045f1	74 2f		 je	 SHORT $LN81@process
  045f3	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL82@process:

; 2732 : 						{
; 2733 : 							_pDocTab->setBuffer(i, tempBufs[nmdlg->Items[i]]);

  04600	8b d7		 mov	 edx, edi
  04602	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
  04606	44 8b 04 90	 mov	 r8d, DWORD PTR [rax+rdx*4]
  0460a	4f 8b 44 c5 00	 mov	 r8, QWORD PTR [r13+r8*8]
  0460f	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  04616	e8 00 00 00 00	 call	 ?setBuffer@DocTabView@@QEAAX_KPEAVBuffer@@@Z ; DocTabView::setBuffer

; 2729 : 						}
; 2730 : 						//Reset buffers
; 2731 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  0461b	ff c7		 inc	 edi
  0461d	3b 7e 24	 cmp	 edi, DWORD PTR [rsi+36]
  04620	72 de		 jb	 SHORT $LL82@process
$LN81@process:

; 2735 : 						activateBuffer(_pDocTab->getBufferByIndex(_pDocTab->getCurrentTabIndex()), currentView());

  04622	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h

; 70   : 		return static_cast<int32_t>(SendMessage(_hSelf, TCM_GETCURSEL, 0, 0));

  04629	45 33 c9	 xor	 r9d, r9d
  0462c	45 33 c0	 xor	 r8d, r8d
  0462f	ba 0b 13 00 00	 mov	 edx, 4875		; 0000130bH
  04634	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  04638	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2735 : 						activateBuffer(_pDocTab->getBufferByIndex(_pDocTab->getCurrentTabIndex()), currentView());

  0463e	48 63 d0	 movsxd	 rdx, eax
  04641	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  04648	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  0464d	48 8b d0	 mov	 rdx, rax
  04650	44 8b 83 d4 84
	09 00		 mov	 r8d, DWORD PTR [rbx+623828]
  04657	48 8b cb	 mov	 rcx, rbx
  0465a	e8 00 00 00 00	 call	 ?activateBuffer@Notepad_plus@@AEAA_NPEAVBuffer@@H@Z ; Notepad_plus::activateBuffer
  0465f	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  04660	4d 85 ed	 test	 r13, r13
  04663	0f 84 99 ca ff
	ff		 je	 $LN2695@process

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  04669	4d 2b fd	 sub	 r15, r13
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0466c	49 83 e7 f8	 and	 r15, -8
  04670	49 8b c5	 mov	 rax, r13

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  04673	49 81 ff 00 10
	00 00		 cmp	 r15, 4096		; 00001000H
  0467a	72 19		 jb	 SHORT $LN2394@process

; 155  :     _Bytes += _Non_user_size;

  0467c	49 83 c7 27	 add	 r15, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  04680	4d 8b 6d f8	 mov	 r13, QWORD PTR [r13-8]
  04684	49 2b c5	 sub	 rax, r13

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  04687	48 83 c0 f8	 add	 rax, -8
  0468b	48 83 f8 1f	 cmp	 rax, 31
  0468f	0f 87 97 07 00
	00		 ja	 $LN2391@process
$LN2394@process:

; 264  :         ::operator delete(_Ptr, _Bytes);

  04695	49 8b d7	 mov	 rdx, r15
  04698	49 8b cd	 mov	 rcx, r13
  0469b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  046a0	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  046a3	f3 0f 7f 45 80	 movdqu	 XMMWORD PTR tempBufs$9[rbp-256], xmm0

; 1769 :             _Myend   = nullptr;

  046a8	4c 89 75 90	 mov	 QWORD PTR tempBufs$9[rbp-240], r14
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  046ac	49 8b c4	 mov	 rax, r12
  046af	e9 55 07 00 00	 jmp	 $LN1@process
$LN567@process:

; 2692 : 						break;
; 2693 : 					}
; 2694 : 
; 2695 : 					case WDT_CLOSE:
; 2696 : 					{
; 2697 : 						//loop through nmdlg->nItems, get index and close it
; 2698 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  046b4	44 39 76 24	 cmp	 DWORD PTR [rsi+36], r14d
  046b8	0f 86 bc 00 00
	00		 jbe	 $LN69@process
  046be	66 90		 npad	 2
$LL73@process:

; 2699 : 						{
; 2700 : 							bool closed = fileClose(_pDocTab->getBufferByIndex(nmdlg->Items[i]), currentView());

  046c0	41 8b c6	 mov	 eax, r14d
  046c3	48 8d 3c 85 00
	00 00 00	 lea	 rdi, QWORD PTR [rax*4]
  046cb	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
  046cf	8b 14 38	 mov	 edx, DWORD PTR [rax+rdi]
  046d2	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  046d9	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  046de	48 8b d0	 mov	 rdx, rax
  046e1	44 8b 83 d4 84
	09 00		 mov	 r8d, DWORD PTR [rbx+623828]
  046e8	48 8b cb	 mov	 rcx, rbx
  046eb	e8 00 00 00 00	 call	 ?fileClose@Notepad_plus@@QEAA_NPEAVBuffer@@H@Z ; Notepad_plus::fileClose

; 2701 : 							UINT pos = nmdlg->Items[i];

  046f0	48 8b 4e 28	 mov	 rcx, QWORD PTR [rsi+40]
  046f4	44 8b 0c 39	 mov	 r9d, DWORD PTR [rcx+rdi]

; 2702 : 							// The window list only needs to be rearranged when the file was actually closed
; 2703 : 							if (closed)

  046f8	84 c0		 test	 al, al
  046fa	74 30		 je	 SHORT $LN71@process

; 2704 : 							{
; 2705 : 								nmdlg->Items[i] = 0xFFFFFFFF; // indicate file was closed

  046fc	c7 04 39 ff ff
	ff ff		 mov	 DWORD PTR [rcx+rdi], -1	; ffffffffH

; 2706 : 
; 2707 : 								// Shift the remaining items downward to fill the gap
; 2708 : 								for (unsigned int j = i + 1; j < nmdlg->nItems; ++j)

  04703	41 8d 56 01	 lea	 edx, DWORD PTR [r14+1]
  04707	3b 56 24	 cmp	 edx, DWORD PTR [rsi+36]
  0470a	73 20		 jae	 SHORT $LN71@process
  0470c	0f 1f 40 00	 npad	 4
$LL76@process:

; 2709 : 								{
; 2710 : 									if (nmdlg->Items[j] > pos)

  04710	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
  04714	4c 8d 04 90	 lea	 r8, QWORD PTR [rax+rdx*4]
  04718	41 8b 00	 mov	 eax, DWORD PTR [r8]
  0471b	41 3b c1	 cmp	 eax, r9d
  0471e	76 05		 jbe	 SHORT $LN74@process

; 2711 : 										nmdlg->Items[j]--;

  04720	ff c8		 dec	 eax
  04722	41 89 00	 mov	 DWORD PTR [r8], eax
$LN74@process:

; 2706 : 
; 2707 : 								// Shift the remaining items downward to fill the gap
; 2708 : 								for (unsigned int j = i + 1; j < nmdlg->nItems; ++j)

  04725	ff c2		 inc	 edx
  04727	3b 56 24	 cmp	 edx, DWORD PTR [rsi+36]
  0472a	72 e4		 jb	 SHORT $LL76@process
$LN71@process:

; 2692 : 						break;
; 2693 : 					}
; 2694 : 
; 2695 : 					case WDT_CLOSE:
; 2696 : 					{
; 2697 : 						//loop through nmdlg->nItems, get index and close it
; 2698 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  0472c	41 ff c6	 inc	 r14d
  0472f	44 3b 76 24	 cmp	 r14d, DWORD PTR [rsi+36]
  04733	72 8b		 jb	 SHORT $LL73@process

; 2690 : 						}
; 2691 : 						nmdlg->processed = TRUE;

  04735	44 89 66 18	 mov	 DWORD PTR [rsi+24], r12d

; 2748 : }

  04739	49 8b c4	 mov	 rax, r12
  0473c	e9 c8 06 00 00	 jmp	 $LN1@process
$LN566@process:

; 2681 : 						break;
; 2682 : 					}
; 2683 : 
; 2684 : 					case WDT_SAVE:
; 2685 : 					{
; 2686 : 						//loop through nmdlg->nItems, get index and save it
; 2687 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  04741	44 39 76 24	 cmp	 DWORD PTR [rsi+36], r14d
  04745	76 33		 jbe	 SHORT $LN69@process
  04747	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL70@process:

; 2688 : 						{
; 2689 : 							fileSave(_pDocTab->getBufferByIndex(nmdlg->Items[i]));

  04750	41 8b ce	 mov	 ecx, r14d
  04753	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
  04757	8b 14 88	 mov	 edx, DWORD PTR [rax+rcx*4]
  0475a	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
  04761	e8 00 00 00 00	 call	 ?getBufferByIndex@DocTabView@@QEAAPEAVBuffer@@_K@Z ; DocTabView::getBufferByIndex
  04766	48 8b d0	 mov	 rdx, rax
  04769	48 8b cb	 mov	 rcx, rbx
  0476c	e8 00 00 00 00	 call	 ?fileSave@Notepad_plus@@QEAA_NPEAVBuffer@@@Z ; Notepad_plus::fileSave

; 2681 : 						break;
; 2682 : 					}
; 2683 : 
; 2684 : 					case WDT_SAVE:
; 2685 : 					{
; 2686 : 						//loop through nmdlg->nItems, get index and save it
; 2687 : 						for (unsigned int i = 0; i < nmdlg->nItems; ++i)

  04771	41 ff c6	 inc	 r14d
  04774	44 3b 76 24	 cmp	 r14d, DWORD PTR [rsi+36]
  04778	72 d6		 jb	 SHORT $LL70@process
$LN69@process:

; 2690 : 						}
; 2691 : 						nmdlg->processed = TRUE;

  0477a	44 89 66 18	 mov	 DWORD PTR [rsi+24], r12d

; 2748 : }

  0477e	49 8b c4	 mov	 rax, r12
  04781	e9 83 06 00 00	 jmp	 $LN1@process
$LN565@process:

; 2676 : 				{
; 2677 : 					case WDT_ACTIVATE:
; 2678 : 					{
; 2679 : 						activateDoc(nmdlg->curSel);

  04786	8b 56 20	 mov	 edx, DWORD PTR [rsi+32]
  04789	48 8b cb	 mov	 rcx, rbx
  0478c	e8 00 00 00 00	 call	 ?activateDoc@Notepad_plus@@AEAAX_K@Z ; Notepad_plus::activateDoc

; 2680 : 						nmdlg->processed = TRUE;

  04791	44 89 66 18	 mov	 DWORD PTR [rsi+24], r12d

; 2748 : }

  04795	49 8b c4	 mov	 rax, r12
  04798	e9 6c 06 00 00	 jmp	 $LN1@process
$LN250@process:

; 992  : 				}
; 993  : 			}
; 994  : 			return j;
; 995  : 		}
; 996  : 
; 997  : 		case WM_GETTASKLISTINFO:
; 998  : 		{
; 999  : 			if (!wParam)

  0479d	4d 85 ff	 test	 r15, r15
  047a0	0f 84 11 ba ff
	ff		 je	 $LN2622@process

; 1000 : 				return 0;
; 1001 : 
; 1002 : 			TaskListInfo * tli = reinterpret_cast<TaskListInfo *>(wParam);
; 1003 : 			getTaskListInfo(tli);

  047a6	49 8b d7	 mov	 rdx, r15
  047a9	48 8b cb	 mov	 rcx, rbx
  047ac	e8 00 00 00 00	 call	 ?getTaskListInfo@Notepad_plus@@QEAAXPEAUTaskListInfo@@@Z ; Notepad_plus::getTaskListInfo
  047b1	48 85 f6	 test	 rsi, rsi

; 1004 : 
; 1005 : 			if (lParam != 0)

  047b4	0f 84 9c 00 00
	00		 je	 $LN252@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  047ba	4d 8b 07	 mov	 r8, QWORD PTR [r15]
  047bd	49 8b 4f 08	 mov	 rcx, QWORD PTR [r15+8]
  047c1	49 2b c8	 sub	 rcx, r8
  047c4	48 bf 25 49 92
	24 49 92 24 49	 mov	 rdi, 5270498306774157605 ; 4924924924924925H
  047ce	48 8b c7	 mov	 rax, rdi
  047d1	48 f7 e9	 imul	 rcx
  047d4	48 c1 fa 04	 sar	 rdx, 4
  047d8	48 8b c2	 mov	 rax, rdx
  047db	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  047df	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1007 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  047e2	0f 84 1a c9 ff
	ff		 je	 $LN2695@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1548 :         auto& _My_data = _Mypair._Myval2;

  047e8	49 8b f6	 mov	 rsi, r14
  047eb	0f 1f 44 00 00	 npad	 5
$LL27@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1009 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  047f0	4d 8d 2c 30	 lea	 r13, QWORD PTR [r8+rsi]
  047f4	8b 83 d4 84 09
	00		 mov	 eax, DWORD PTR [rbx+623828]
  047fa	41 39 45 00	 cmp	 DWORD PTR [r13], eax
  047fe	75 26		 jne	 SHORT $LN25@process
  04800	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h

; 70   : 		return static_cast<int32_t>(SendMessage(_hSelf, TCM_GETCURSEL, 0, 0));

  04807	45 33 c9	 xor	 r9d, r9d
  0480a	45 33 c0	 xor	 r8d, r8d
  0480d	ba 0b 13 00 00	 mov	 edx, 4875		; 0000130bH
  04812	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  04816	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1009 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  0481c	41 39 45 04	 cmp	 DWORD PTR [r13+4], eax
  04820	0f 84 2c 01 00
	00		 je	 $LN2476@process
$LN25@process:

; 1007 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  04826	49 ff c6	 inc	 r14
  04829	48 83 c6 38	 add	 rsi, 56			; 00000038H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0482d	4d 8b 07	 mov	 r8, QWORD PTR [r15]
  04830	49 8b 4f 08	 mov	 rcx, QWORD PTR [r15+8]
  04834	49 2b c8	 sub	 rcx, r8
  04837	48 8b c7	 mov	 rax, rdi
  0483a	48 f7 e9	 imul	 rcx
  0483d	48 c1 fa 04	 sar	 rdx, 4
  04841	48 8b c2	 mov	 rax, rdx
  04844	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  04848	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1007 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  0484b	4c 3b f2	 cmp	 r14, rdx
  0484e	0f 83 ae c8 ff
	ff		 jae	 $LN2695@process
  04854	eb 9a		 jmp	 SHORT $LL27@process
$LN252@process:

; 1010 : 						tli->_tlfsLst[idx]._docIndex == _pDocTab->getCurrentTabIndex())
; 1011 : 					{
; 1012 : 						tli->_currentIndex = static_cast<int>(idx);
; 1013 : 						break;
; 1014 : 					}
; 1015 : 				}
; 1016 : 				return TRUE;
; 1017 : 			}
; 1018 : 
; 1019 : 			if (NppParameters::getInstance().getNppGUI()._styleMRU)

  04856	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  0485b	44 38 b0 e7 00
	00 00		 cmp	 BYTE PTR [rax+231], r14b
  04862	74 54		 je	 SHORT $LN254@process

; 1020 : 			{
; 1021 : 				tli->_currentIndex = 0;

  04864	45 89 77 18	 mov	 DWORD PTR [r15+24], r14d

; 1022 : 				std::sort(tli->_tlfsLst.begin(),tli->_tlfsLst.end(),SortTaskListPred(_mainDocTab,_subDocTab));

  04868	48 8d 83 90 04
	00 00		 lea	 rax, QWORD PTR [rbx+1168]
  0486f	48 89 45 f0	 mov	 QWORD PTR $T37[rbp-256], rax
  04873	48 81 c3 68 05
	00 00		 add	 rbx, 1384		; 00000568H
  0487a	48 89 5d f8	 mov	 QWORD PTR $T37[rbp-248], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\algorithm

; 7397 :     const auto _UFirst = _Get_unwrapped(_First);

  0487e	49 8b 0f	 mov	 rcx, QWORD PTR [r15]

; 7398 :     const auto _ULast  = _Get_unwrapped(_Last);
; 7399 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  04881	4d 8b 47 08	 mov	 r8, QWORD PTR [r15+8]
  04885	4c 2b c1	 sub	 r8, rcx
  04888	48 b8 25 49 92
	24 49 92 24 49	 mov	 rax, 5270498306774157605 ; 4924924924924925H
  04892	49 f7 e8	 imul	 r8
  04895	48 c1 fa 04	 sar	 rdx, 4
  04899	4c 8b c2	 mov	 r8, rdx
  0489c	49 c1 e8 3f	 shr	 r8, 63			; 0000003fH
  048a0	4c 03 c2	 add	 r8, rdx
  048a3	4c 8d 4d f0	 lea	 r9, QWORD PTR $T37[rbp-256]
  048a7	49 8b 57 08	 mov	 rdx, QWORD PTR [r15+8]
  048ab	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PEAUTaskLstFnStatus@@U?$_Ref_fn@USortTaskListPred@@@std@@@std@@YAXPEAUTaskLstFnStatus@@0_JU?$_Ref_fn@USortTaskListPred@@@0@@Z ; std::_Sort_unchecked<TaskLstFnStatus *,std::_Ref_fn<SortTaskListPred> >
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  048b0	49 8b c4	 mov	 rax, r12
  048b3	e9 51 05 00 00	 jmp	 $LN1@process
$LN254@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  048b8	4d 8b 07	 mov	 r8, QWORD PTR [r15]
  048bb	49 8b 4f 08	 mov	 rcx, QWORD PTR [r15+8]
  048bf	49 2b c8	 sub	 rcx, r8
  048c2	48 bf 25 49 92
	24 49 92 24 49	 mov	 rdi, 5270498306774157605 ; 4924924924924925H
  048cc	48 8b c7	 mov	 rax, rdi
  048cf	48 f7 e9	 imul	 rcx
  048d2	48 c1 fa 04	 sar	 rdx, 4
  048d6	48 8b c2	 mov	 rax, rdx
  048d9	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  048dd	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1026 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  048e0	0f 84 1c c8 ff
	ff		 je	 $LN2695@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1548 :         auto& _My_data = _Mypair._Myval2;

  048e6	49 8b f6	 mov	 rsi, r14
  048e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL30@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1028 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  048f0	4e 8d 2c 06	 lea	 r13, QWORD PTR [rsi+r8]
  048f4	8b 83 d4 84 09
	00		 mov	 eax, DWORD PTR [rbx+623828]
  048fa	41 39 45 00	 cmp	 DWORD PTR [r13], eax
  048fe	75 22		 jne	 SHORT $LN28@process
  04900	48 8b 8b 40 06
	00 00		 mov	 rcx, QWORD PTR [rbx+1600]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\TabBar\TabBar.h

; 70   : 		return static_cast<int32_t>(SendMessage(_hSelf, TCM_GETCURSEL, 0, 0));

  04907	45 33 c9	 xor	 r9d, r9d
  0490a	45 33 c0	 xor	 r8d, r8d
  0490d	ba 0b 13 00 00	 mov	 edx, 4875		; 0000130bH
  04912	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  04916	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SendMessageW
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1028 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  0491c	41 39 45 04	 cmp	 DWORD PTR [r13+4], eax
  04920	74 30		 je	 SHORT $LN2476@process
$LN28@process:

; 1026 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  04922	49 ff c6	 inc	 r14
  04925	48 83 c6 38	 add	 rsi, 56			; 00000038H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  04929	4d 8b 07	 mov	 r8, QWORD PTR [r15]
  0492c	49 8b 4f 08	 mov	 rcx, QWORD PTR [r15+8]
  04930	49 2b c8	 sub	 rcx, r8
  04933	48 8b c7	 mov	 rax, rdi
  04936	48 f7 e9	 imul	 rcx
  04939	48 c1 fa 04	 sar	 rdx, 4
  0493d	48 8b c2	 mov	 rax, rdx
  04940	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  04944	48 03 d0	 add	 rdx, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1026 : 				for (size_t idx = 0; idx < tli->_tlfsLst.size(); ++idx)

  04947	4c 3b f2	 cmp	 r14, rdx
  0494a	0f 83 b2 c7 ff
	ff		 jae	 $LN2695@process
  04950	eb 9e		 jmp	 SHORT $LL30@process
$LN2476@process:

; 1036 : 			return TRUE;

  04952	45 89 77 18	 mov	 DWORD PTR [r15+24], r14d

; 2748 : }

  04956	49 8b c4	 mov	 rax, r12
  04959	e9 ab 04 00 00	 jmp	 $LN1@process
$LN417@process:

; 1869 : 		}
; 1870 : 
; 1871 : 		case WM_UPDATEMAINMENUBITMAPS:
; 1872 : 		{
; 1873 : 			setupColorSampleBitmapsOnMainMenuItems();

  0495e	48 8b cb	 mov	 rcx, rbx
  04961	e8 00 00 00 00	 call	 ?setupColorSampleBitmapsOnMainMenuItems@Notepad_plus@@AEAAXXZ ; Notepad_plus::setupColorSampleBitmapsOnMainMenuItems

; 2748 : }

  04966	49 8b c4	 mov	 rax, r12
  04969	e9 9b 04 00 00	 jmp	 $LN1@process
$LN407@process:

; 1784 : 			return TRUE;
; 1785 : 		}
; 1786 : 
; 1787 : 		case WM_UPDATESCINTILLAS:
; 1788 : 		{
; 1789 : 			//reset styler for change in Stylers.xml
; 1790 : 			_mainEditView.defineDocType(_mainEditView.getCurrentBuffer()->getLangType());

  0496e	48 8b 83 30 07
	00 00		 mov	 rax, QWORD PTR [rbx+1840]
  04975	8b 50 20	 mov	 edx, DWORD PTR [rax+32]
  04978	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  0497f	e8 00 00 00 00	 call	 ?defineDocType@ScintillaEditView@@QEAAXW4LangType@@@Z ; ScintillaEditView::defineDocType

; 1791 : 			_mainEditView.performGlobalStyles();

  04984	48 8d 8b f0 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1776]
  0498b	e8 00 00 00 00	 call	 ?performGlobalStyles@ScintillaEditView@@QEAAXXZ ; ScintillaEditView::performGlobalStyles

; 1792 : 			addHotSpot(& _mainEditView);

  04990	48 8d 93 f0 06
	00 00		 lea	 rdx, QWORD PTR [rbx+1776]
  04997	48 8b cb	 mov	 rcx, rbx
  0499a	e8 00 00 00 00	 call	 ?addHotSpot@Notepad_plus@@AEAAXPEAVScintillaEditView@@@Z ; Notepad_plus::addHotSpot

; 1793 : 
; 1794 : 			_subEditView.defineDocType(_subEditView.getCurrentBuffer()->getLangType());

  0499f	48 8b 83 90 06
	00 00		 mov	 rax, QWORD PTR [rbx+1680]
  049a6	8b 50 20	 mov	 edx, DWORD PTR [rax+32]
  049a9	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  049b0	e8 00 00 00 00	 call	 ?defineDocType@ScintillaEditView@@QEAAXW4LangType@@@Z ; ScintillaEditView::defineDocType

; 1795 : 			_subEditView.performGlobalStyles();

  049b5	48 8d 8b 50 06
	00 00		 lea	 rcx, QWORD PTR [rbx+1616]
  049bc	e8 00 00 00 00	 call	 ?performGlobalStyles@ScintillaEditView@@QEAAXXZ ; ScintillaEditView::performGlobalStyles

; 1796 : 			addHotSpot(& _subEditView);

  049c1	48 8d 93 50 06
	00 00		 lea	 rdx, QWORD PTR [rbx+1616]
  049c8	48 8b cb	 mov	 rcx, rbx
  049cb	e8 00 00 00 00	 call	 ?addHotSpot@Notepad_plus@@AEAAXPEAVScintillaEditView@@@Z ; Notepad_plus::addHotSpot
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\FindReplaceDlg.h

; 337  : 		if (_pFinder && _pFinder->isCreated() && _pFinder->isVisible())

  049d0	48 8b 8b 88 0d
	00 00		 mov	 rcx, QWORD PTR [rbx+3464]
  049d7	48 85 c9	 test	 rcx, rcx
  049da	74 27		 je	 SHORT $LN1831@process
  049dc	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  049df	ff 50 68	 call	 QWORD PTR [rax+104]
  049e2	84 c0		 test	 al, al
  049e4	74 1d		 je	 SHORT $LN1831@process
  049e6	48 8b 8b 88 0d
	00 00		 mov	 rcx, QWORD PTR [rbx+3464]
  049ed	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  049f0	ff 50 58	 call	 QWORD PTR [rax+88]
  049f3	84 c0		 test	 al, al
  049f5	74 0c		 je	 SHORT $LN1831@process

; 338  : 		{
; 339  : 			_pFinder->setFinderStyle();

  049f7	48 8b 8b 88 0d
	00 00		 mov	 rcx, QWORD PTR [rbx+3464]
  049fe	e8 00 00 00 00	 call	 ?setFinderStyle@Finder@@QEAAXXZ ; Finder::setFinderStyle
$LN1831@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1800 : 			drawTabbarColoursFromStylerArray();

  04a03	48 8b cb	 mov	 rcx, rbx
  04a06	e8 00 00 00 00	 call	 ?drawTabbarColoursFromStylerArray@Notepad_plus@@AEAAXXZ ; Notepad_plus::drawTabbarColoursFromStylerArray

; 1801 : 
; 1802 : 			// Update default fg/bg colors in Parameters for both internal/plugins docking dialog
; 1803 : 			StyleArray & globalStyles = (NppParameters::getInstance()).getGlobalStylers();

  04a0b	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  04a10	48 05 d8 26 03
	00		 add	 rax, 206552		; 000326d8H
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 512  : 		for (int i = 0 ; i < _nbStyler ; ++i)

  04a16	4c 63 80 80 07
	00 00		 movsxd	 r8, DWORD PTR [rax+1920]
  04a1d	4d 85 c0	 test	 r8, r8
  04a20	7e 26		 jle	 SHORT $LN1835@process
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1028 : 					if (tli->_tlfsLst[idx]._iView == currentView() &&

  04a22	49 8b d6	 mov	 rdx, r14
  04a25	48 8b c8	 mov	 rcx, rax
  04a28	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL1836@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 514  : 			if (_styleArray[i]._styleID == id)

  04a30	83 39 20	 cmp	 DWORD PTR [rcx], 32	; 00000020H
  04a33	0f 84 d9 01 00
	00		 je	 $LN2477@process

; 512  : 		for (int i = 0 ; i < _nbStyler ; ++i)

  04a39	41 ff c6	 inc	 r14d
  04a3c	48 ff c2	 inc	 rdx
  04a3f	48 83 c1 40	 add	 rcx, 64			; 00000040H
  04a43	49 3b d0	 cmp	 rdx, r8
  04a46	7c e8		 jl	 SHORT $LL1836@process
$LN1835@process:

; 516  : 		}
; 517  : 		return -1;

  04a48	48 c7 c6 ff ff
	ff ff		 mov	 rsi, -1
$LN1833@process:

; 495  : 		return _styleArray[index];

  04a4f	48 c1 e6 06	 shl	 rsi, 6
  04a53	48 03 f0	 add	 rsi, rax
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1806 : 			(NppParameters::getInstance()).setCurrentDefaultFgColor(style._fgColor);

  04a56	8b 7e 10	 mov	 edi, DWORD PTR [rsi+16]
  04a59	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  04a5e	89 b8 3c 34 03
	00		 mov	 DWORD PTR [rax+209980], edi

; 1807 : 			(NppParameters::getInstance()).setCurrentDefaultBgColor(style._bgColor);

  04a64	8b 7e 14	 mov	 edi, DWORD PTR [rsi+20]
  04a67	e8 00 00 00 00	 call	 ?getInstance@NppParameters@@SAAEAV1@XZ ; NppParameters::getInstance
  04a6c	89 b8 38 34 03
	00		 mov	 DWORD PTR [rax+209976], edi

; 1808 : 
; 1809 : 			// Set default fg/bg colors on internal docking dialog
; 1810 : 			if (_pFuncList)

  04a72	48 8b 8b b0 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623792]
  04a79	48 85 c9	 test	 rcx, rcx
  04a7c	74 1f		 je	 SHORT $LN408@process

; 1811 : 			{
; 1812 : 				_pFuncList->setBackgroundColor(style._bgColor);

  04a7e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04a81	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04a84	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1813 : 				_pFuncList->setForegroundColor(style._fgColor);

  04a8a	48 8b 8b b0 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623792]
  04a91	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04a94	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04a97	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN408@process:

; 1814 : 			}
; 1815 : 
; 1816 : 			if (_pAnsiCharPanel)

  04a9d	48 8b 8b 70 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623728]
  04aa4	48 85 c9	 test	 rcx, rcx
  04aa7	74 1f		 je	 SHORT $LN409@process

; 1817 : 			{
; 1818 : 				_pAnsiCharPanel->setBackgroundColor(style._bgColor);

  04aa9	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04aac	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04aaf	ff 90 90 00 00
	00		 call	 QWORD PTR [rax+144]

; 1819 : 				_pAnsiCharPanel->setForegroundColor(style._fgColor);

  04ab5	48 8b 8b 70 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623728]
  04abc	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04abf	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04ac2	ff 90 98 00 00
	00		 call	 QWORD PTR [rax+152]
$LN409@process:

; 1820 : 			}
; 1821 : 
; 1822 : 			if (_pFileSwitcherPanel)

  04ac8	48 8b 8b 80 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623744]
  04acf	48 85 c9	 test	 rcx, rcx
  04ad2	74 1f		 je	 SHORT $LN410@process

; 1823 : 			{
; 1824 : 				_pFileSwitcherPanel->setBackgroundColor(style._bgColor);

  04ad4	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04ad7	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04ada	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1825 : 				_pFileSwitcherPanel->setForegroundColor(style._fgColor);

  04ae0	48 8b 8b 80 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623744]
  04ae7	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04aea	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04aed	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN410@process:

; 1826 : 			}
; 1827 : 
; 1828 : 			if (_pClipboardHistoryPanel)

  04af3	48 8b 8b 78 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623736]
  04afa	48 85 c9	 test	 rcx, rcx
  04afd	74 30		 je	 SHORT $LN411@process

; 1829 : 			{
; 1830 : 				_pClipboardHistoryPanel->setBackgroundColor(style._bgColor);

  04aff	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b02	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04b05	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1831 : 				_pClipboardHistoryPanel->setForegroundColor(style._fgColor);

  04b0b	48 8b 8b 78 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623736]
  04b12	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b15	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04b18	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 1832 : 				_pClipboardHistoryPanel->redraw(true);

  04b1e	48 8b 8b 78 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623736]
  04b25	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b28	41 0f b6 d4	 movzx	 edx, r12b
  04b2c	ff 50 30	 call	 QWORD PTR [rax+48]
$LN411@process:

; 1833 : 			}
; 1834 : 
; 1835 : 			if (_pProjectPanel_1)

  04b2f	48 8b 8b 88 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623752]
  04b36	48 85 c9	 test	 rcx, rcx
  04b39	74 1f		 je	 SHORT $LN412@process

; 1836 : 			{
; 1837 : 				_pProjectPanel_1->setBackgroundColor(style._bgColor);

  04b3b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b3e	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04b41	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1838 : 				_pProjectPanel_1->setForegroundColor(style._fgColor);

  04b47	48 8b 8b 88 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623752]
  04b4e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b51	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04b54	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN412@process:

; 1839 : 			}
; 1840 : 
; 1841 : 			if (_pProjectPanel_2)

  04b5a	48 8b 8b 90 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623760]
  04b61	48 85 c9	 test	 rcx, rcx
  04b64	74 1f		 je	 SHORT $LN413@process

; 1842 : 			{
; 1843 : 				_pProjectPanel_2->setBackgroundColor(style._bgColor);

  04b66	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b69	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04b6c	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1844 : 				_pProjectPanel_2->setForegroundColor(style._fgColor);

  04b72	48 8b 8b 90 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623760]
  04b79	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b7c	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04b7f	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN413@process:

; 1845 : 			}
; 1846 : 
; 1847 : 			if (_pProjectPanel_3)

  04b85	48 8b 8b 98 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623768]
  04b8c	48 85 c9	 test	 rcx, rcx
  04b8f	74 1f		 je	 SHORT $LN414@process

; 1848 : 			{
; 1849 : 				_pProjectPanel_3->setBackgroundColor(style._bgColor);

  04b91	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04b94	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04b97	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1850 : 				_pProjectPanel_3->setForegroundColor(style._fgColor);

  04b9d	48 8b 8b 98 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623768]
  04ba4	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04ba7	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04baa	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN414@process:

; 1851 : 			}
; 1852 : 
; 1853 : 			if (_pFileBrowser)

  04bb0	48 8b 8b a0 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623776]
  04bb7	48 85 c9	 test	 rcx, rcx
  04bba	74 1f		 je	 SHORT $LN415@process

; 1854 : 			{
; 1855 : 				_pFileBrowser->setBackgroundColor(style._bgColor);

  04bbc	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04bbf	8b 56 14	 mov	 edx, DWORD PTR [rsi+20]
  04bc2	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]

; 1856 : 				_pFileBrowser->setForegroundColor(style._fgColor);

  04bc8	48 8b 8b a0 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623776]
  04bcf	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  04bd2	8b 56 10	 mov	 edx, DWORD PTR [rsi+16]
  04bd5	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
$LN415@process:

; 1857 : 			}
; 1858 : 
; 1859 : 			if (_pDocMap)

  04bdb	48 8b 8b a8 84
	09 00		 mov	 rcx, QWORD PTR [rbx+623784]
  04be2	48 85 c9	 test	 rcx, rcx
  04be5	74 05		 je	 SHORT $LN416@process

; 1860 : 				_pDocMap->setSyntaxHiliting();

  04be7	e8 00 00 00 00	 call	 ?setSyntaxHiliting@DocumentMap@@QEAAXXZ ; DocumentMap::setSyntaxHiliting
$LN416@process:

; 1861 : 
; 1862 : 			// Notify plugins of update to styles xml
; 1863 : 			SCNotification scnN;
; 1864 : 			scnN.nmhdr.code = NPPN_WORDSTYLESUPDATED;

  04bec	c7 85 b0 00 00
	00 f4 03 00 00	 mov	 DWORD PTR scnN$54[rbp-240], 1012 ; 000003f4H

; 1865 : 			scnN.nmhdr.hwndFrom = hwnd;

  04bf6	48 8b 74 24 50	 mov	 rsi, QWORD PTR hwnd$GSCopy$1$[rsp]
  04bfb	48 89 b5 a0 00
	00 00		 mov	 QWORD PTR scnN$54[rbp-256], rsi

; 1866 : 			scnN.nmhdr.idFrom = (uptr_t) _pEditView->getCurrentBufferID();

  04c02	48 8b 83 d0 08
	00 00		 mov	 rax, QWORD PTR [rbx+2256]
  04c09	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]

; 1867 : 			_pluginsManager.notify(&scnN);
; 1868 : 			return TRUE;

  04c0d	e9 65 c6 ff ff	 jmp	 $LN2702@process
$LN2477@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h

; 515  : 				return i;

  04c12	41 8b f6	 mov	 esi, r14d
  04c15	e9 35 fe ff ff	 jmp	 $LN1833@process
$LN295@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1266 : 			if (!_recordingMacro) // if we're not currently recording, then playback the recorded keystrokes

  04c1a	44 38 b3 00 7b
	09 00		 cmp	 BYTE PTR [rbx+621312], r14b
  04c21	0f 85 c5 01 00
	00		 jne	 $LN299@process

; 1267 : 			{
; 1268 : 				int times = 1;
; 1269 : 				if (_runMacroDlg.getMode() == RM_RUN_MULTI)

  04c27	8b 83 38 7b 09
	00		 mov	 eax, DWORD PTR [rbx+621368]
  04c2d	41 3b c4	 cmp	 eax, r12d
  04c30	75 08		 jne	 SHORT $LN297@process

; 1270 : 					times = _runMacroDlg.getTimes();

  04c32	8b bb 3c 7b 09
	00		 mov	 edi, DWORD PTR [rbx+621372]
  04c38	eb 10		 jmp	 SHORT $LN2693@process
$LN297@process:

; 1271 : 				else if (_runMacroDlg.getMode() == RM_RUN_EOF)

  04c3a	83 f8 02	 cmp	 eax, 2
  04c3d	0f 85 a9 01 00
	00		 jne	 $LN299@process

; 1272 : 					times = -1;

  04c43	48 c7 c7 ff ff
	ff ff		 mov	 rdi, -1
$LN2693@process:

; 1273 : 				else
; 1274 : 					break;
; 1275 : 
; 1276 : 				int counter = 0;
; 1277 : 				int lastLine = static_cast<int32_t>(_pEditView->execute(SCI_GETLINECOUNT)) - 1;

  04c4a	48 89 7c 24 70	 mov	 QWORD PTR style$1$[rsp], rdi
  04c4f	45 33 c9	 xor	 r9d, r9d
  04c52	45 33 c0	 xor	 r8d, r8d
  04c55	ba 6a 08 00 00	 mov	 edx, 2154		; 0000086aH
  04c5a	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04c61	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  04c66	ff c8		 dec	 eax
  04c68	48 89 45 f0	 mov	 QWORD PTR tv15487[rbp-256], rax

; 1278 : 				int currLine = static_cast<int32_t>(_pEditView->getCurrentLineNumber());

  04c6c	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04c73	e8 00 00 00 00	 call	 ?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ ; ScintillaEditView::getCurrentLineNumber
  04c78	4c 8b e0	 mov	 r12, rax

; 1279 : 				int indexMacro = _runMacroDlg.getMacro2Exec();

  04c7b	48 8d 8b 08 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621320]
  04c82	e8 00 00 00 00	 call	 ?getMacro2Exec@RunMacroDlg@@QEBAHXZ ; RunMacroDlg::getMacro2Exec
  04c87	48 63 f0	 movsxd	 rsi, eax

; 1280 : 				int deltaLastLine = 0;
; 1281 : 				int deltaCurrLine = 0;

  04c8a	41 8b fe	 mov	 edi, r14d

; 1282 : 
; 1283 : 				Macro m = _macro;

  04c8d	48 8d 93 e8 7a
	09 00		 lea	 rdx, QWORD PTR [rbx+621288]
  04c94	48 8d 4d 80	 lea	 rcx, QWORD PTR m$12[rbp-256]
  04c98	e8 00 00 00 00	 call	 ??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >
  04c9d	90		 npad	 1

; 1284 : 
; 1285 : 				if (indexMacro != -1)

  04c9e	83 fe ff	 cmp	 esi, -1
  04ca1	74 37		 je	 SHORT $LN1746@process
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  04ca3	48 69 ce 98 01
	00 00		 imul	 rcx, rsi, 408		; 00000198H
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1288 : 					m = ms[indexMacro].getMacro();

  04caa	49 8b 95 40 2f
	03 00		 mov	 rdx, QWORD PTR [r13+208704]
  04cb1	48 81 c2 80 01
	00 00		 add	 rdx, 384		; 00000180H
  04cb8	48 03 d1	 add	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1215 :         if (this != _STD addressof(_Right)) {

  04cbb	48 8d 45 80	 lea	 rax, QWORD PTR m$12[rbp-256]
  04cbf	48 3b c2	 cmp	 rax, rdx
  04cc2	74 16		 je	 SHORT $LN1746@process

; 1189 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  04cc4	44 0f b6 4c 24
	40		 movzx	 r9d, BYTE PTR $T1[rsp]
  04cca	4c 8b 42 08	 mov	 r8, QWORD PTR [rdx+8]
  04cce	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  04cd1	48 8d 4d 80	 lea	 rcx, QWORD PTR m$12[rbp-256]
  04cd5	e8 00 00 00 00	 call	 ??$_Assign_range@PEAUrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0Uforward_iterator_tag@1@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Assign_range<recordedMacroStep *>
$LN1746@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1291 : 				_pEditView->execute(SCI_BEGINUNDOACTION);

  04cda	45 33 c9	 xor	 r9d, r9d
  04cdd	45 33 c0	 xor	 r8d, r8d
  04ce0	ba 1e 08 00 00	 mov	 edx, 2078		; 0000081eH
  04ce5	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04cec	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  04cf1	4c 8b 7c 24 70	 mov	 r15, QWORD PTR style$1$[rsp]
  04cf6	4c 8b 6d f0	 mov	 r13, QWORD PTR tv15487[rbp-256]
  04cfa	66 0f 1f 44 00
	00		 npad	 6
$LL42@process:

; 1292 : 				for (;;)
; 1293 : 				{
; 1294 : 					macroPlayback(m);

  04d00	48 8d 45 a0	 lea	 rax, QWORD PTR $T26[rbp-256]
  04d04	48 89 45 f0	 mov	 QWORD PTR $T45[rbp-256], rax
  04d08	48 8d 55 80	 lea	 rdx, QWORD PTR m$12[rbp-256]
  04d0c	48 8d 4d a0	 lea	 rcx, QWORD PTR $T26[rbp-256]
  04d10	e8 00 00 00 00	 call	 ??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >
  04d15	90		 npad	 1
  04d16	48 8b d0	 mov	 rdx, rax
  04d19	48 8b cb	 mov	 rcx, rbx
  04d1c	e8 00 00 00 00	 call	 ?macroPlayback@Notepad_plus@@QEAAXV?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@Z ; Notepad_plus::macroPlayback

; 1295 : 					++counter;

  04d21	41 ff c6	 inc	 r14d

; 1296 : 					if ( times >= 0 )

  04d24	45 85 ff	 test	 r15d, r15d
  04d27	78 0b		 js	 SHORT $LN302@process

; 1297 : 					{
; 1298 : 						if ( counter >= times )

  04d29	45 3b f7	 cmp	 r14d, r15d
  04d2c	0f 8d 94 00 00
	00		 jge	 $LN2478@process

; 1299 : 							break;
; 1300 : 					}

  04d32	eb cc		 jmp	 SHORT $LL42@process
$LN302@process:

; 1301 : 					else // run until eof
; 1302 : 					{
; 1303 : 						bool cursorMovedUp = deltaCurrLine < 0;

  04d34	c1 ef 1f	 shr	 edi, 31
  04d37	40 88 7c 24 40	 mov	 BYTE PTR cursorMovedUp$1$[rsp], dil

; 1304 : 						deltaLastLine = static_cast<int32_t>(_pEditView->execute(SCI_GETLINECOUNT)) - 1 - lastLine;

  04d3c	45 33 c9	 xor	 r9d, r9d
  04d3f	45 33 c0	 xor	 r8d, r8d
  04d42	ba 6a 08 00 00	 mov	 edx, 2154		; 0000086aH
  04d47	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04d4e	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  04d53	41 8b f5	 mov	 esi, r13d
  04d56	f7 d6		 not	 esi
  04d58	03 f0		 add	 esi, eax

; 1305 : 						deltaCurrLine = static_cast<int32_t>(_pEditView->getCurrentLineNumber()) - currLine;

  04d5a	48 8b bb d0 08
	00 00		 mov	 rdi, QWORD PTR [rbx+2256]
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h

; 400  : 		return static_cast<size_t>(execute(SCI_LINEFROMPOSITION, execute(SCI_GETCURRENTPOS)));

  04d61	45 33 c9	 xor	 r9d, r9d
  04d64	45 33 c0	 xor	 r8d, r8d
  04d67	ba d8 07 00 00	 mov	 edx, 2008		; 000007d8H
  04d6c	48 8b cf	 mov	 rcx, rdi
  04d6f	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  04d74	4c 8b c0	 mov	 r8, rax
  04d77	45 33 c9	 xor	 r9d, r9d
  04d7a	ba 76 08 00 00	 mov	 edx, 2166		; 00000876H
  04d7f	48 8b cf	 mov	 rcx, rdi
  04d82	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1305 : 						deltaCurrLine = static_cast<int32_t>(_pEditView->getCurrentLineNumber()) - currLine;

  04d87	8b f8		 mov	 edi, eax
  04d89	41 2b fc	 sub	 edi, r12d

; 1306 : 
; 1307 : 						if (( deltaCurrLine == 0 )	// line no. not changed?
; 1308 : 							&& (deltaLastLine >= 0))  // and no lines removed?

  04d8c	75 06		 jne	 SHORT $LN305@process
  04d8e	85 f6		 test	 esi, esi
  04d90	79 34		 jns	 SHORT $LN2478@process

; 1309 : 							break; // exit
; 1310 : 
; 1311 : 						// Update the line count, but only if the number of lines remaining is shrinking.
; 1312 : 						// Otherwise, the macro playback may never end.
; 1313 : 						if (deltaLastLine < deltaCurrLine)

  04d92	eb 04		 jmp	 SHORT $LN2610@process
$LN305@process:
  04d94	3b f7		 cmp	 esi, edi
  04d96	7d 03		 jge	 SHORT $LN306@process
$LN2610@process:

; 1314 : 							lastLine += deltaLastLine;

  04d98	44 03 ee	 add	 r13d, esi
$LN306@process:

; 1315 : 
; 1316 : 						// save current line
; 1317 : 						currLine += deltaCurrLine;

  04d9b	44 8b e0	 mov	 r12d, eax

; 1321 : 							|| ((deltaCurrLine == 0) && (currLine == 0) && ((deltaLastLine >= 0) || cursorMovedUp)))

  04d9e	41 3b c5	 cmp	 eax, r13d
  04da1	7d 23		 jge	 SHORT $LN2478@process
  04da3	85 c0		 test	 eax, eax
  04da5	78 1f		 js	 SHORT $LN2478@process
  04da7	85 ff		 test	 edi, edi
  04da9	0f 85 51 ff ff
	ff		 jne	 $LL42@process
  04daf	85 c0		 test	 eax, eax
  04db1	0f 85 49 ff ff
	ff		 jne	 $LL42@process
  04db7	85 f6		 test	 esi, esi
  04db9	79 0b		 jns	 SHORT $LN2478@process
  04dbb	40 38 7c 24 40	 cmp	 BYTE PTR cursorMovedUp$1$[rsp], dil
  04dc0	0f 84 3a ff ff
	ff		 je	 $LL42@process
$LN2478@process:

; 1322 : 						{
; 1323 : 							break;
; 1324 : 						}
; 1325 : 					}
; 1326 : 				}
; 1327 : 				_pEditView->execute(SCI_ENDUNDOACTION);

  04dc6	45 33 c9	 xor	 r9d, r9d
  04dc9	45 33 c0	 xor	 r8d, r8d
  04dcc	ba 1f 08 00 00	 mov	 edx, 2079		; 0000081fH
  04dd1	48 8b 8b d0 08
	00 00		 mov	 rcx, QWORD PTR [rbx+2256]
  04dd8	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  04ddd	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 712  :         _Tidy();

  04dde	48 8d 4d 80	 lea	 rcx, QWORD PTR m$12[rbp-256]
  04de2	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy
  04de7	4c 8b 7c 24 68	 mov	 r15, QWORD PTR $T7[rsp]
$LN299@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2746 : 	_pluginsManager.relayNppMessages(message, wParam, lParam);

  04dec	48 8d 8b e0 7b
	09 00		 lea	 rcx, QWORD PTR [rbx+621536]
  04df3	4c 8b 4c 24 48	 mov	 r9, QWORD PTR lParam$GSCopy$1$[rsp]
  04df8	4d 8b c7	 mov	 r8, r15
  04dfb	8b 54 24 44	 mov	 edx, DWORD PTR message$GSCopy$1$[rsp]
  04dff	e8 00 00 00 00	 call	 ?relayNppMessages@PluginsManager@@QEAAXI_K_J@Z ; PluginsManager::relayNppMessages
$LN87@process:

; 2748 : }

  04e04	48 8b 44 24 60	 mov	 rax, QWORD PTR result$[rsp]
$LN1@process:
  04e09	48 8b 8d a0 20
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-256]
  04e10	48 33 cc	 xor	 rcx, rsp
  04e13	e8 00 00 00 00	 call	 __security_check_cookie
  04e18	48 81 c4 b8 21
	00 00		 add	 rsp, 8632		; 000021b8H
  04e1f	41 5f		 pop	 r15
  04e21	41 5e		 pop	 r14
  04e23	41 5d		 pop	 r13
  04e25	41 5c		 pop	 r12
  04e27	5f		 pop	 rdi
  04e28	5e		 pop	 rsi
  04e29	5b		 pop	 rbx
  04e2a	5d		 pop	 rbp
  04e2b	c3		 ret	 0
$LN2391@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  04e2c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e31	cc		 int	 3
$LN2708@process:
  04e32	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e37	cc		 int	 3
$LN1723@process:
  04e38	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e3d	cc		 int	 3
$LN2709@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h

; 92   : 		static WcharMbcsConvertor instance;

  04e3e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  04e45	e8 00 00 00 00	 call	 _Init_thread_header
  04e4a	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA, -1 ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  04e51	0f 85 a2 b5 ff
	ff		 jne	 $LN982@process
  04e57	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ ; `WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance''
  04e5e	e8 00 00 00 00	 call	 atexit
  04e63	90		 npad	 1
  04e64	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  04e6b	e8 00 00 00 00	 call	 _Init_thread_footer
  04e70	e9 84 b5 ff ff	 jmp	 $LN982@process
$LN2710@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  04e75	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e7a	90		 npad	 1
$LN2711@process:
  04e7b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e80	90		 npad	 1
$LN2712@process:
  04e81	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e86	90		 npad	 1
$LN1160@process:
  04e87	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e8c	90		 npad	 1
$LN2713@process:
  04e8d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e92	90		 npad	 1
$LN2714@process:
  04e93	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e98	90		 npad	 1
$LN2715@process:
  04e99	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04e9e	cc		 int	 3
$LN2716@process:
  04e9f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ea4	90		 npad	 1
$LN2717@process:
  04ea5	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04eaa	90		 npad	 1
$LN2718@process:
  04eab	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04eb0	90		 npad	 1
$LN1521@process:
  04eb1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04eb6	90		 npad	 1
$LN2719@process:
  04eb7	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ebc	90		 npad	 1
$LN2720@process:
  04ebd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ec2	90		 npad	 1
$LN581@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 1232 : 			mainVerStr[j] = '\0';

  04ec3	e8 00 00 00 00	 call	 __report_rangecheckfailure
  04ec8	cc		 int	 3
$LN2721@process:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  04ec9	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  04ece	cc		 int	 3
$LN2196@process:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  04ecf	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ed4	90		 npad	 1
$LN2220@process:
  04ed5	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04eda	90		 npad	 1
$LN2722@process:
  04edb	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ee0	90		 npad	 1
$LN2723@process:
  04ee1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ee6	90		 npad	 1
$LN2724@process:
  04ee7	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04eec	cc		 int	 3
$LN2725@process:
  04eed	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  04ef2	cc		 int	 3
$LN2683@process:
  04ef3	90		 npad	 1
$LN2640@process:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\NppBigSwitch.cpp

; 2748 : }

  04ef4	00 00 00 00	 DD	 $LN442@process
  04ef8	00 00 00 00	 DD	 $LN173@process
  04efc	00 00 00 00	 DD	 $LN170@process
  04f00	00 00 00 00	 DD	 $LN404@process
  04f04	00 00 00 00	 DD	 $LN418@process
  04f08	00 00 00 00	 DD	 $LN88@process
  04f0c	00 00 00 00	 DD	 $LN439@process
  04f10	00 00 00 00	 DD	 $LN90@process
  04f14	00 00 00 00	 DD	 $LN381@process
  04f18	00 00 00 00	 DD	 $LN93@process
  04f1c	00 00 00 00	 DD	 $LN177@process
  04f20	00 00 00 00	 DD	 $LN374@process
  04f24	00 00 00 00	 DD	 $LN367@process
  04f28	00 00 00 00	 DD	 $LN86@process
  04f2c	00 00 00 00	 DD	 $LN84@process
  04f30	00 00 00 00	 DD	 $LN563@process
$LN2639@process:
  04f34	00		 DB	 0
  04f35	01		 DB	 1
  04f36	0f		 DB	 15
  04f37	02		 DB	 2
  04f38	03		 DB	 3
  04f39	0f		 DB	 15
  04f3a	0f		 DB	 15
  04f3b	0f		 DB	 15
  04f3c	0f		 DB	 15
  04f3d	0f		 DB	 15
  04f3e	0f		 DB	 15
  04f3f	0f		 DB	 15
  04f40	0f		 DB	 15
  04f41	0f		 DB	 15
  04f42	04		 DB	 4
  04f43	04		 DB	 4
  04f44	0f		 DB	 15
  04f45	0f		 DB	 15
  04f46	05		 DB	 5
  04f47	0f		 DB	 15
  04f48	06		 DB	 6
  04f49	0f		 DB	 15
  04f4a	0f		 DB	 15
  04f4b	0f		 DB	 15
  04f4c	07		 DB	 7
  04f4d	0f		 DB	 15
  04f4e	08		 DB	 8
  04f4f	0f		 DB	 15
  04f50	0f		 DB	 15
  04f51	0f		 DB	 15
  04f52	0f		 DB	 15
  04f53	0f		 DB	 15
  04f54	0f		 DB	 15
  04f55	0f		 DB	 15
  04f56	0f		 DB	 15
  04f57	0f		 DB	 15
  04f58	0f		 DB	 15
  04f59	0f		 DB	 15
  04f5a	0f		 DB	 15
  04f5b	0f		 DB	 15
  04f5c	0f		 DB	 15
  04f5d	09		 DB	 9
  04f5e	0f		 DB	 15
  04f5f	0f		 DB	 15
  04f60	0f		 DB	 15
  04f61	0f		 DB	 15
  04f62	0f		 DB	 15
  04f63	0f		 DB	 15
  04f64	0f		 DB	 15
  04f65	0f		 DB	 15
  04f66	0f		 DB	 15
  04f67	0f		 DB	 15
  04f68	0f		 DB	 15
  04f69	0f		 DB	 15
  04f6a	0f		 DB	 15
  04f6b	0f		 DB	 15
  04f6c	0f		 DB	 15
  04f6d	0f		 DB	 15
  04f6e	0f		 DB	 15
  04f6f	0f		 DB	 15
  04f70	0f		 DB	 15
  04f71	0f		 DB	 15
  04f72	0f		 DB	 15
  04f73	0f		 DB	 15
  04f74	0f		 DB	 15
  04f75	0f		 DB	 15
  04f76	0f		 DB	 15
  04f77	0f		 DB	 15
  04f78	0f		 DB	 15
  04f79	0f		 DB	 15
  04f7a	0f		 DB	 15
  04f7b	0f		 DB	 15
  04f7c	0a		 DB	 10
  04f7d	0f		 DB	 15
  04f7e	0f		 DB	 15
  04f7f	0f		 DB	 15
  04f80	0b		 DB	 11
  04f81	0f		 DB	 15
  04f82	0f		 DB	 15
  04f83	0f		 DB	 15
  04f84	0f		 DB	 15
  04f85	0f		 DB	 15
  04f86	0f		 DB	 15
  04f87	0f		 DB	 15
  04f88	0f		 DB	 15
  04f89	0f		 DB	 15
  04f8a	0f		 DB	 15
  04f8b	0f		 DB	 15
  04f8c	0f		 DB	 15
  04f8d	0f		 DB	 15
  04f8e	0f		 DB	 15
  04f8f	0f		 DB	 15
  04f90	0f		 DB	 15
  04f91	0f		 DB	 15
  04f92	0f		 DB	 15
  04f93	0f		 DB	 15
  04f94	0f		 DB	 15
  04f95	0f		 DB	 15
  04f96	0f		 DB	 15
  04f97	0f		 DB	 15
  04f98	0f		 DB	 15
  04f99	0f		 DB	 15
  04f9a	0f		 DB	 15
  04f9b	0f		 DB	 15
  04f9c	0f		 DB	 15
  04f9d	0f		 DB	 15
  04f9e	0f		 DB	 15
  04f9f	0f		 DB	 15
  04fa0	0f		 DB	 15
  04fa1	0f		 DB	 15
  04fa2	0f		 DB	 15
  04fa3	0f		 DB	 15
  04fa4	0f		 DB	 15
  04fa5	0f		 DB	 15
  04fa6	0f		 DB	 15
  04fa7	0f		 DB	 15
  04fa8	0f		 DB	 15
  04fa9	0f		 DB	 15
  04faa	0f		 DB	 15
  04fab	0f		 DB	 15
  04fac	0f		 DB	 15
  04fad	0c		 DB	 12
  04fae	0f		 DB	 15
  04faf	0f		 DB	 15
  04fb0	0f		 DB	 15
  04fb1	0f		 DB	 15
  04fb2	0f		 DB	 15
  04fb3	0f		 DB	 15
  04fb4	0f		 DB	 15
  04fb5	0f		 DB	 15
  04fb6	0f		 DB	 15
  04fb7	0d		 DB	 13
  04fb8	0e		 DB	 14
  04fb9	0f 1f 00	 npad	 3
$LN2638@process:
  04fbc	00 00 00 00	 DD	 $LN341@process
  04fc0	00 00 00 00	 DD	 $LN2695@process
  04fc4	00 00 00 00	 DD	 $LN563@process
  04fc8	00 00 00 00	 DD	 $LN339@process
  04fcc	00 00 00 00	 DD	 $LN340@process
  04fd0	00 00 00 00	 DD	 $LN563@process
  04fd4	00 00 00 00	 DD	 $LN563@process
  04fd8	00 00 00 00	 DD	 $LN563@process
  04fdc	00 00 00 00	 DD	 $LN518@process
  04fe0	00 00 00 00	 DD	 $LN538@process
  04fe4	00 00 00 00	 DD	 $LN360@process
  04fe8	00 00 00 00	 DD	 $LN506@process
  04fec	00 00 00 00	 DD	 $LN507@process
  04ff0	00 00 00 00	 DD	 $LN508@process
  04ff4	00 00 00 00	 DD	 $LN563@process
  04ff8	00 00 00 00	 DD	 $LN563@process
  04ffc	00 00 00 00	 DD	 $LN349@process
  05000	00 00 00 00	 DD	 $LN359@process
  05004	00 00 00 00	 DD	 $LN509@process
  05008	00 00 00 00	 DD	 $LN510@process
  0500c	00 00 00 00	 DD	 $LN511@process
  05010	00 00 00 00	 DD	 $LN517@process
  05014	00 00 00 00	 DD	 $LN563@process
  05018	00 00 00 00	 DD	 $LN195@process
  0501c	00 00 00 00	 DD	 $LN197@process
  05020	00 00 00 00	 DD	 $LN563@process
  05024	00 00 00 00	 DD	 $LN194@process
  05028	00 00 00 00	 DD	 $LN547@process
  0502c	00 00 00 00	 DD	 $LN547@process
  05030	00 00 00 00	 DD	 $LN196@process
  05034	00 00 00 00	 DD	 $LN165@process
  05038	00 00 00 00	 DD	 $LN358@process
  0503c	00 00 00 00	 DD	 $LN563@process
  05040	00 00 00 00	 DD	 $LN549@process
  05044	00 00 00 00	 DD	 $LN550@process
  05048	00 00 00 00	 DD	 $LN311@process
  0504c	00 00 00 00	 DD	 $LN312@process
  05050	00 00 00 00	 DD	 $LN190@process
  05054	00 00 00 00	 DD	 $LN119@process
  05058	00 00 00 00	 DD	 $LN563@process
  0505c	00 00 00 00	 DD	 $LN386@process
  05060	00 00 00 00	 DD	 $LN344@process
  05064	00 00 00 00	 DD	 $LN356@process
  05068	00 00 00 00	 DD	 $LN357@process
  0506c	00 00 00 00	 DD	 $LN167@process
  05070	00 00 00 00	 DD	 $LN168@process
  05074	00 00 00 00	 DD	 $LN192@process
  05078	00 00 00 00	 DD	 $LN387@process
  0507c	00 00 00 00	 DD	 $LN563@process
  05080	00 00 00 00	 DD	 $LN539@process
  05084	00 00 00 00	 DD	 $LN557@process
  05088	00 00 00 00	 DD	 $LN563@process
  0508c	00 00 00 00	 DD	 $LN451@process
  05090	00 00 00 00	 DD	 $LN563@process
  05094	00 00 00 00	 DD	 $LN117@process
  05098	00 00 00 00	 DD	 $LN563@process
  0509c	00 00 00 00	 DD	 $LN559@process
  050a0	00 00 00 00	 DD	 $LN92@process
$LN2637@process:
  050a4	00 00 00 00	 DD	 $LN236@process
  050a8	00 00 00 00	 DD	 $LN237@process
  050ac	00 00 00 00	 DD	 $LN238@process
  050b0	00 00 00 00	 DD	 $LN243@process
  050b4	00 00 00 00	 DD	 $LN563@process
  050b8	00 00 00 00	 DD	 $LN563@process
  050bc	00 00 00 00	 DD	 $LN563@process
  050c0	00 00 00 00	 DD	 $LN361@process
  050c4	00 00 00 00	 DD	 $LN263@process
  050c8	00 00 00 00	 DD	 $LN267@process
  050cc	00 00 00 00	 DD	 $LN338@process
  050d0	00 00 00 00	 DD	 $LN337@process
  050d4	00 00 00 00	 DD	 $LN243@process
  050d8	00 00 00 00	 DD	 $LN243@process
  050dc	00 00 00 00	 DD	 $LN563@process
  050e0	00 00 00 00	 DD	 $LN310@process
  050e4	00 00 00 00	 DD	 $LN2695@process
  050e8	00 00 00 00	 DD	 $LN314@process
  050ec	00 00 00 00	 DD	 $LN316@process
  050f0	00 00 00 00	 DD	 $LN318@process
  050f4	00 00 00 00	 DD	 $LN331@process
  050f8	00 00 00 00	 DD	 $LN276@process
  050fc	00 00 00 00	 DD	 $LN271@process
  05100	00 00 00 00	 DD	 $LN281@process
  05104	00 00 00 00	 DD	 $LN114@process
  05108	00 00 00 00	 DD	 $LN456@process
  0510c	00 00 00 00	 DD	 $LN457@process
  05110	00 00 00 00	 DD	 $LN458@process
  05114	00 00 00 00	 DD	 $LN460@process
  05118	00 00 00 00	 DD	 $LN335@process
  0511c	00 00 00 00	 DD	 $LN461@process
  05120	00 00 00 00	 DD	 $LN155@process
  05124	00 00 00 00	 DD	 $LN157@process
  05128	00 00 00 00	 DD	 $LN159@process
  0512c	00 00 00 00	 DD	 $LN162@process
  05130	00 00 00 00	 DD	 $LN469@process
  05134	00 00 00 00	 DD	 $LN467@process
  05138	00 00 00 00	 DD	 $LN470@process
  0513c	00 00 00 00	 DD	 $LN462@process
  05140	00 00 00 00	 DD	 $LN471@process
  05144	00 00 00 00	 DD	 $LN472@process
  05148	00 00 00 00	 DD	 $LN473@process
  0514c	00 00 00 00	 DD	 $LN485@process
  05150	00 00 00 00	 DD	 $LN199@process
  05154	00 00 00 00	 DD	 $LN281@process
  05158	00 00 00 00	 DD	 $LN284@process
  0515c	00 00 00 00	 DD	 $LN489@process
  05160	00 00 00 00	 DD	 $LN493@process
  05164	00 00 00 00	 DD	 $LN383@process
  05168	00 00 00 00	 DD	 $LN396@process
  0516c	00 00 00 00	 DD	 $LN563@process
  05170	00 00 00 00	 DD	 $LN563@process
  05174	00 00 00 00	 DD	 $LN388@process
  05178	00 00 00 00	 DD	 $LN395@process
  0517c	00 00 00 00	 DD	 $LN146@process
  05180	00 00 00 00	 DD	 $LN152@process
  05184	00 00 00 00	 DD	 $LN153@process
  05188	00 00 00 00	 DD	 $LN563@process
  0518c	00 00 00 00	 DD	 $LN124@process
  05190	00 00 00 00	 DD	 $LN127@process
  05194	00 00 00 00	 DD	 $LN129@process
  05198	00 00 00 00	 DD	 $LN133@process
  0519c	00 00 00 00	 DD	 $LN135@process
  051a0	00 00 00 00	 DD	 $LN141@process
  051a4	00 00 00 00	 DD	 $LN143@process
  051a8	00 00 00 00	 DD	 $LN494@process
  051ac	00 00 00 00	 DD	 $LN496@process
  051b0	00 00 00 00	 DD	 $LN497@process
  051b4	00 00 00 00	 DD	 $LN501@process
  051b8	00 00 00 00	 DD	 $LN502@process
  051bc	00 00 00 00	 DD	 $LN504@process
  051c0	00 00 00 00	 DD	 $LN198@process
  051c4	00 00 00 00	 DD	 $LN121@process
  051c8	00 00 00 00	 DD	 $LN160@process
  051cc	00 00 00 00	 DD	 $LN164@process
  051d0	00 00 00 00	 DD	 $LN2695@process
  051d4	00 00 00 00	 DD	 $LN487@process
  051d8	00 00 00 00	 DD	 $LN488@process
  051dc	00 00 00 00	 DD	 $LN519@process
  051e0	00 00 00 00	 DD	 $LN521@process
  051e4	00 00 00 00	 DD	 $LN527@process
  051e8	00 00 00 00	 DD	 $LN533@process
  051ec	00 00 00 00	 DD	 $LN535@process
  051f0	00 00 00 00	 DD	 $LN505@process
  051f4	00 00 00 00	 DD	 $LN523@process
  051f8	00 00 00 00	 DD	 $LN525@process
  051fc	00 00 00 00	 DD	 $LN525@process
  05200	00 00 00 00	 DD	 $LN352@process
  05204	00 00 00 00	 DD	 $LN353@process
  05208	00 00 00 00	 DD	 $LN163@process
  0520c	00 00 00 00	 DD	 $LN169@process
  05210	00 00 00 00	 DD	 $LN537@process
  05214	00 00 00 00	 DD	 $LN476@process
  05218	00 00 00 00	 DD	 $LN479@process
  0521c	00 00 00 00	 DD	 $LN482@process
  05220	00 00 00 00	 DD	 $LN484@process
  05224	00 00 00 00	 DD	 $LN468@process
$LN2635@process:
  05228	00 00 00 00	 DD	 $LN324@process
  0522c	00 00 00 00	 DD	 $LN324@process
  05230	00 00 00 00	 DD	 $LN324@process
  05234	00 00 00 00	 DD	 $LN324@process
  05238	00 00 00 00	 DD	 $LN324@process
  0523c	00 00 00 00	 DD	 $LN324@process
$LN2634@process:
  05240	00 00 00 00	 DD	 $LN96@process
  05244	00 00 00 00	 DD	 $LN105@process
  05248	00 00 00 00	 DD	 $LN97@process
  0524c	00 00 00 00	 DD	 $LN101@process
  05250	00 00 00 00	 DD	 $LN106@process
  05254	00 00 00 00	 DD	 $LN107@process
  05258	00 00 00 00	 DD	 $LN121@process
  0525c	00 00 00 00	 DD	 $LN109@process
  05260	00 00 00 00	 DD	 $LN112@process
  05264	00 00 00 00	 DD	 $LN108@process
  05268	00 00 00 00	 DD	 $LN293@process
  0526c	00 00 00 00	 DD	 $LN294@process
  05270	00 00 00 00	 DD	 $LN111@process
  05274	00 00 00 00	 DD	 $LN110@process
  05278	00 00 00 00	 DD	 $LN113@process
$LN2627@process:
  0527c	00 00 00 00	 DD	 $LN200@process
  05280	00 00 00 00	 DD	 $LN200@process
  05284	00 00 00 00	 DD	 $LN200@process
  05288	00 00 00 00	 DD	 $LN200@process
  0528c	00 00 00 00	 DD	 $LN214@process
  05290	00 00 00 00	 DD	 $LN223@process
  05294	00 00 00 00	 DD	 $LN229@process
  05298	00 00 00 00	 DD	 $LN230@process
  0529c	00 00 00 00	 DD	 $LN223@process
  052a0	00 00 00 00	 DD	 $LN218@process
?process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z ENDP	; Notepad_plus::process
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$0@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$0
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR name$35[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$1@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$1
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR oldName$17[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$2@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$2
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR newName$34[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$3@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$3
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T33[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$4@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$4
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T32[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$5@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$5
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T31[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$6@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$6
  00000	48 8d 8a a0 01
	00 00		 lea	 rcx, QWORD PTR nppGui$60[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1NppGUI@@QEAA@XZ
?dtor$6@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$34@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$34
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$34@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$34
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$35@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$35
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$35@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$35
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$36@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$36
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$36@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$36
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$37@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$37
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$37@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$37
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$38@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$38
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$38@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$38
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$9@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$9
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$9@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$9
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$39@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$39
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$39@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$39
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$40@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$40
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$40@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$40
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$41@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$41
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$41@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$41
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$42@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$42
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$42@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$42
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$43@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$43
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$43@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$43
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$44@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$44
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$44@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$44
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$45@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$45
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$45@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$45
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$46@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$46
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$46@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$46
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$10@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$10
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$10@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$47@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$47
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$47@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$47
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$48@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$48
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$48@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$48
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$49@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$49
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$49@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$49
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$50@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$50
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$50@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$50
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$51@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$51
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$51@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$51
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$52@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$52
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$52@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$52
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$53@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$53
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$53@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$53
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$54@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$54
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$54@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$54
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$55@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$55
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$55@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$55
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$56@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$56
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$56@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$56
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$57@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$57
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$57@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$57
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$58@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$58
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$58@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$58
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$11@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$11
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$11@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$11
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$59@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$59
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$59@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$59
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$60@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$60
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$60@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$60
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$61@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$61
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$61@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$61
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$62@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$62
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$62@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$62
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$63@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$63
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$63@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$63
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$64@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$64
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$64@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$64
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$65@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$65
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$65@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$65
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$66@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$66
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$66@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$66
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$12@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$12
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR UnicodeConvertor$30[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Utf8_16_Write@@QEAA@XZ ; Utf8_16_Write::~Utf8_16_Write
?dtor$12@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$12
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$13@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$13
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR UnicodeConvertor$49[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Utf8_16_Read@@QEAA@XZ ; Utf8_16_Read::~Utf8_16_Read
?dtor$13@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$13
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$14@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$14
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T28[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1recordedMacroStep@@QEAA@XZ
?dtor$14@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$14
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$67@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$67
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T28[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$67@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$67
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$15@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$15
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T27[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1recordedMacroStep@@QEAA@XZ
?dtor$15@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$15
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$68@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$68
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T27[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$68@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$68
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$16@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$16
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR m$12[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
?dtor$16@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$16
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$17@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$17
  00000	48 8b 8a f0 00
	00 00		 mov	 rcx, QWORD PTR $T45[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
?dtor$17@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$17
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$18
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T44[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$18
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$69@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$69
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR scintillaContextmenu$25[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
?dtor$69@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$69
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$19@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$19
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR scintillaContextmenu$25[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$19@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$19
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$70@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$70
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$70@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$70
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$71@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$71
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$71@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$71
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$72@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$72
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$72@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$72
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$73@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$73
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$73@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$73
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$20@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$20
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$20@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$20
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$74@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$74
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$74@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$74
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$75@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$75
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$75@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$75
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$76@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$76
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$76@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$76
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$77@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$77
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$77@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$77
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$21@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$21
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR updaterFullPath$24[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$21@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$21
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$79
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	85 c0		 test	 eax, eax
  00011	74 10		 je	 SHORT $LN1967@dtor$79
  00013	83 65 58 fd	 and	 DWORD PTR $T6[rbp], -3
  00017	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T42[rbp]
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN1967@dtor$79:
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$79
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$80
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	85 c0		 test	 eax, eax
  00011	74 10		 je	 SHORT $LN1971@dtor$80
  00013	83 65 58 fb	 and	 DWORD PTR $T6[rbp], -5
  00017	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN1971@dtor$80:
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$80
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$81@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$81
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$81@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$81
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$82@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$82
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$82@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$82
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$83@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$83
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$83@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$83
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$24@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$24
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Process@@QEAA@XZ
?dtor$24@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$24
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$84@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$84
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$84@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$84
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$85@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$85
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$85@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$85
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$86@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$86
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$86@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$86
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$25
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba d8 03 00 00	 mov	 edx, 984		; 000003d8H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T41[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$25
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$87@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$87
  00000	48 8d 8a f0 00
	00 00		 lea	 rcx, QWORD PTR _Guard$36[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >::~_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >
?dtor$87@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$87
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$26@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$26
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR dockContainer$10[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
?dtor$26@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$26
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$27@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$27
  00000	48 8d 8a f0 00
	00 00		 lea	 rcx, QWORD PTR tbData$40[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
?dtor$27@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$27
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$28@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$28
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR userPluginConfDir$23[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$28@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$28
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$29@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$29
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR pluginHomePath$22[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$29@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$29
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$30@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$30
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR settingsOnCloudPath$21[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$30@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$30
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$31@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$31
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR langName$20[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$31@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$31
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$32@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$32
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR langDesc$19[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$32@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$32
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$33@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$33
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR tempBufs$9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
?dtor$33@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$0@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$0
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR name$35[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$1@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$1
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR oldName$17[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$2@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$2
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR newName$34[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$3@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$3
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T33[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$4@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$4
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T32[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$5@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$5
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T31[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$6@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$6
  00000	48 8d 8a a0 01
	00 00		 lea	 rcx, QWORD PTR nppGui$60[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1NppGUI@@QEAA@XZ
?dtor$6@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$34@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$34
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4HA ; `WcharMbcsConvertor::getInstance'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$34@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$34
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$35@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$35
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$35@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$35
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$36@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$36
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$36@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$36
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$37@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$37
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$37@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$37
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$38@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$38
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$38@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$9@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$9
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$9@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$39@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$39
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$39@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$39
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$40@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$40
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$40@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$40
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$41@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$41
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$41@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$41
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$42@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$42
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR currentSession$52[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$42@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$42
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$43@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$43
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$43@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$43
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$44@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$44
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$44@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$44
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$45@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$45
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$45@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$45
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$46@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$46
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$46@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$46
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$10@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$10
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$10@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$47@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$47
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$47@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$47
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$48@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$48
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$48@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$48
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$49@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$49
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$49@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$49
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$50@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$50
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$50@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$50
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$51@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$51
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$51@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$51
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$52@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$52
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$52@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$52
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$53@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$53
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$53@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$53
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$54@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$54
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$51[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$54@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$54
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$55@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$55
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$55@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$55
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$56@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$56
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$56@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$56
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$57@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$57
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$57@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$57
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$58@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$58
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$58@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$58
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$11@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$11
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$11@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$59@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$59
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$59@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$59
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$60@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$60
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$60@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$60
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$61@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$61
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$61@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$61
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$62@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$62
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$62@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$62
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$63@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$63
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$63@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$63
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$64@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$64
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$64@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$64
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$65@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$65
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$65@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$65
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$66@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$66
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR session2Load$50[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$66@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$66
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$12@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$12
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR UnicodeConvertor$30[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Utf8_16_Write@@QEAA@XZ ; Utf8_16_Write::~Utf8_16_Write
?dtor$12@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$13@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$13
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR UnicodeConvertor$49[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Utf8_16_Read@@QEAA@XZ ; Utf8_16_Read::~Utf8_16_Read
?dtor$13@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$14@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$14
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T28[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1recordedMacroStep@@QEAA@XZ
?dtor$14@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$67@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$67
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T28[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$67@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$67
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$15@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$15
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T27[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1recordedMacroStep@@QEAA@XZ
?dtor$15@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$68@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$68
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR $T27[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$68@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$68
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$16@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$16
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR m$12[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
?dtor$16@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$17@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$17
  00000	48 8b 8a f0 00
	00 00		 mov	 rcx, QWORD PTR $T45[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
?dtor$17@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$18
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T44[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$18@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$69@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$69
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR scintillaContextmenu$25[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
?dtor$69@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$69
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$19@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$19
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR scintillaContextmenu$25[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1ContextMenu@@QEAA@XZ	; ContextMenu::~ContextMenu
?dtor$19@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$70@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$70
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$70@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$70
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$71@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$71
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$71@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$71
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$72@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$72
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$72@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$72
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$73@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$73
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$73@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$73
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$20@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$20
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Session@@QEAA@XZ
?dtor$20@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$74@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$74
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$74@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$74
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$75@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$75
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$75@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$75
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$76@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$76
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$76@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$76
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$77@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$77
  00000	48 8d 8a a0 11
	00 00		 lea	 rcx, QWORD PTR currentSession$65[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$77@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$77
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$21@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$21
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR updaterFullPath$24[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$21@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$79
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	85 c0		 test	 eax, eax
  00011	74 10		 je	 SHORT $LN1967@dtor$79
  00013	83 65 58 fd	 and	 DWORD PTR $T6[rbp], -3
  00017	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T42[rbp]
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN1967@dtor$79:
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?dtor$79@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$79
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$80
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	85 c0		 test	 eax, eax
  00011	74 10		 je	 SHORT $LN1971@dtor$80
  00013	83 65 58 fb	 and	 DWORD PTR $T6[rbp], -5
  00017	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN1971@dtor$80:
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?dtor$80@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$80
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$81@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$81
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$81@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$81
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$82@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$82
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$82@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$82
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$83@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$83
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$83@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$83
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$24@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$24
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Process@@QEAA@XZ
?dtor$24@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$84@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$84
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$84@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$84
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$85@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$85
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$85@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$85
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$86@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$86
  00000	48 8d 8a 10 01
	00 00		 lea	 rcx, QWORD PTR updater$48[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$86@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$86
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$25
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba d8 03 00 00	 mov	 edx, 984		; 000003d8H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T41[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$25@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$87@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$87
  00000	48 8d 8a f0 00
	00 00		 lea	 rcx, QWORD PTR _Guard$36[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >::~_Tidy_guard<std::vector<DockingCont *,std::allocator<DockingCont *> > >
?dtor$87@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$87
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$26@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$26
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR dockContainer$10[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
?dtor$26@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$27@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$27
  00000	48 8d 8a f0 00
	00 00		 lea	 rcx, QWORD PTR tbData$40[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
?dtor$27@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$28@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$28
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR userPluginConfDir$23[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$28@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$29@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$29
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR pluginHomePath$22[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$29@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$29
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$30@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$30
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR settingsOnCloudPath$21[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$30@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$31@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$31
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR langName$20[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$31@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$32@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$32
  00000	48 8d 8a a0 00
	00 00		 lea	 rcx, QWORD PTR langDesc$19[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$32@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$32
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
cursorMovedUp$1$ = 64
tv15353 = 64
$T1 = 64
isVisible$2 = 64
message$GSCopy$1$ = 68
lParam$GSCopy$1$ = 72
nbDoc$1$ = 72
p$3 = 72
p$4 = 72
end$1$ = 80
hwnd$GSCopy$1$ = 80
multiEdgeColor$1$ = 80
start$1$ = 80
iCont$5 = 80
$T6 = 88
result$ = 96
$T7 = 104
tv15176 = 104
$T8 = 104
nbColAdded$1$ = 112
style$1$ = 112
<end>$L0$1$ = 120
tempBufs$9 = 128
dockContainer$10 = 128
$T11 = 128
m$12 = 128
auxVerStr$13 = 128
nmhdr$14 = 128
$T15 = 128
$T16 = 128
oldName$17 = 128
$T18 = 160
langDesc$19 = 160
langName$20 = 160
settingsOnCloudPath$21 = 160
pluginHomePath$22 = 160
userPluginConfDir$23 = 160
updaterFullPath$24 = 160
scintillaContextmenu$25 = 160
$T26 = 160
$T27 = 160
$T28 = 160
mainVerStr$29 = 160
UnicodeConvertor$30 = 160
$T31 = 160
$T32 = 160
$T33 = 160
newName$34 = 160
name$35 = 160
tv15487 = 240
_Guard$36 = 240
$T37 = 240
$T38 = 240
rc$39 = 240
tbData$40 = 240
$T41 = 240
$T42 = 240
$T43 = 240
$T44 = 240
$T45 = 240
rc$46 = 240
rc$47 = 240
updater$48 = 272
UnicodeConvertor$49 = 272
session2Load$50 = 272
session2Load$51 = 272
currentSession$52 = 272
scnN$53 = 416
scnN$54 = 416
str$55 = 416
strLine$56 = 416
str$57 = 416
str$58 = 416
scnN$59 = 416
nppGui$60 = 416
scnN$61 = 416
str$62 = 416
str$63 = 416
str$64 = 416
currentSession$65 = 4512
str$66 = 4512
__$ArrayPad$ = 8608
this$ = 8704
hwnd$ = 8712
message$ = 8720
wParam$ = 8728
lParam$ = 8736
?dtor$33@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `Notepad_plus::process'::`1'::dtor$33
  00000	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR tempBufs$9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
?dtor$33@?0??process@Notepad_plus@@QEAA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `Notepad_plus::process'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1Process@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Process@@QEAA@XZ PROC				; Process::~Process, COMDAT
$LN14:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 83 c1 40	 add	 rcx, 64			; 00000040H

; 3003 :         _Tidy_deallocate();

  00011	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00016	90		 npad	 1
  00017	48 8d 4b 20	 lea	 rcx, QWORD PTR [rbx+32]
  0001b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00020	90		 npad	 1
  00021	48 8b cb	 mov	 rcx, rbx
  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1Process@@QEAA@XZ ENDP				; Process::~Process
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1Process@@QEAA@XZ@4HA PROC			; `Process::~Process'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???1Process@@QEAA@XZ@4HA ENDP			; `Process::~Process'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN18@Tidy

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN15@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN18@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1771 :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN22@Tidy:
?_Tidy@?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@AEAAXXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@PEAVDockingCont@@V?$allocator@PEAVDockingCont@@@std@@@std@@QEAA@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN18@Tidy

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN15@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN18@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1771 :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN22@Tidy:
?_Tidy@?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@AEAAXXZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\DockingWnd\DockingCont.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\DockingWnd\DockingCont.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\DockingWnd\DockingCont.h
;	COMDAT ?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ
_TEXT	SEGMENT
$T1 = 32
_Guard$2 = 96
this$ = 96
__$ReturnUdt$ = 104
?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ PROC ; DockingCont::getDataOfAllTb, COMDAT

; 85   : 	std::vector<tTbData *> getDataOfAllTb() {

$LN66:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 56		 push	 r14
  0000f	41 57		 push	 r15
  00011	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00015	48 8b fa	 mov	 rdi, rdx
  00018	45 33 ff	 xor	 r15d, r15d
  0001b	44 89 7c 24 20	 mov	 DWORD PTR $T1[rsp], r15d
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00020	4c 89 3a	 mov	 QWORD PTR [rdx], r15
  00023	4c 89 7a 08	 mov	 QWORD PTR [rdx+8], r15
  00027	4c 89 7a 10	 mov	 QWORD PTR [rdx+16], r15

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  0002b	4c 8b b1 e8 00
	00 00		 mov	 r14, QWORD PTR [rcx+232]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00032	48 8b a9 f0 00
	00 00		 mov	 rbp, QWORD PTR [rcx+240]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  00039	4c 3b f5	 cmp	 r14, rbp
  0003c	0f 84 99 00 00
	00		 je	 $LN59@getDataOfA

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00042	49 2b ee	 sub	 rbp, r14
  00045	48 8b f5	 mov	 rsi, rbp
  00048	48 c1 fe 03	 sar	 rsi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0004c	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00056	48 3b f0	 cmp	 rsi, rax
  00059	0f 87 9e 00 00
	00		 ja	 $LN62@getDataOfA

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  0005f	48 8d 34 f5 00
	00 00 00	 lea	 rsi, QWORD PTR [rsi*8]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00067	48 81 fe 00 10
	00 00		 cmp	 rsi, 4096		; 00001000H
  0006e	72 28		 jb	 SHORT $LN22@getDataOfA

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00070	48 8d 4e 27	 lea	 rcx, QWORD PTR [rsi+39]

; 137  :     if (_Block_size <= _Bytes) {

  00074	48 3b ce	 cmp	 rcx, rsi
  00077	0f 86 80 00 00
	00		 jbe	 $LN62@getDataOfA

; 85   :         return ::operator new(_Bytes);

  0007d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00082	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00085	48 85 c0	 test	 rax, rax
  00088	74 6d		 je	 SHORT $LN31@getDataOfA

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0008a	48 83 c0 27	 add	 rax, 39			; 00000027H
  0008e	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00092	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00096	eb 12		 jmp	 SHORT $LN21@getDataOfA
$LN22@getDataOfA:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00098	48 85 f6	 test	 rsi, rsi
  0009b	74 0a		 je	 SHORT $LN23@getDataOfA

; 85   :         return ::operator new(_Bytes);

  0009d	48 8b ce	 mov	 rcx, rsi
  000a0	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000a5	eb 03		 jmp	 SHORT $LN21@getDataOfA
$LN23@getDataOfA:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a7	49 8b c7	 mov	 rax, r15
$LN21@getDataOfA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  000aa	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1713 :         _Mylast            = _Newvec;

  000ad	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  000b1	48 03 c6	 add	 rax, rsi
  000b4	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  000b8	48 89 7c 24 60	 mov	 QWORD PTR _Guard$2[rsp], rdi

; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000bd	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility

; 4161 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  000c0	4c 8b c5	 mov	 r8, rbp
  000c3	49 8b d6	 mov	 rdx, r14
  000c6	48 8b cb	 mov	 rcx, rbx
  000c9	e8 00 00 00 00	 call	 memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1644 :             _Dest += _ULast - _UFirst;

  000ce	48 8d 04 1e	 lea	 rax, QWORD PTR [rsi+rbx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000d2	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 566  :             _Guard._Target   = nullptr;

  000d6	4c 89 7c 24 60	 mov	 QWORD PTR _Guard$2[rsp], r15
$LN59@getDataOfA:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\DockingWnd\DockingCont.h

; 86   : 		return _vTbData;

  000db	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
  000e3	48 8b c7	 mov	 rax, rdi

; 87   : 	};

  000e6	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  000eb	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ef	41 5f		 pop	 r15
  000f1	41 5e		 pop	 r14
  000f3	5f		 pop	 rdi
  000f4	5e		 pop	 rsi
  000f5	5d		 pop	 rbp
  000f6	c3		 ret	 0
$LN31@getDataOfA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000f7	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000fc	cc		 int	 3
$LN62@getDataOfA:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  000fd	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00102	cc		 int	 3
$LN63@getDataOfA:
?getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ ENDP ; DockingCont::getDataOfAllTb
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Guard$2 = 96
this$ = 96
__$ReturnUdt$ = 104
?dtor$1@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA PROC ; `DockingCont::getDataOfAllTb'::`1'::dtor$1
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >::~_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >
?dtor$1@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA ENDP ; `DockingCont::getDataOfAllTb'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Guard$2 = 96
this$ = 96
__$ReturnUdt$ = 104
?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA PROC ; `DockingCont::getDataOfAllTb'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA ENDP ; `DockingCont::getDataOfAllTb'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Guard$2 = 96
this$ = 96
__$ReturnUdt$ = 104
?dtor$1@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA PROC ; `DockingCont::getDataOfAllTb'::`1'::dtor$1
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >::~_Tidy_guard<std::vector<tTbData *,std::allocator<tTbData *> > >
?dtor$1@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA ENDP ; `DockingCont::getDataOfAllTb'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Guard$2 = 96
this$ = 96
__$ReturnUdt$ = 104
?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA PROC ; `DockingCont::getDataOfAllTb'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@QEAA@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getDataOfAllTb@DockingCont@@QEAA?AV?$vector@PEAUtTbData@@V?$allocator@PEAUtTbData@@@std@@@std@@XZ@4HA ENDP ; `DockingCont::getDataOfAllTb'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h
;	COMDAT ?changeIcons@DocTabView@@QEAAXE@Z
_TEXT	SEGMENT
this$ = 8
choice$ = 16
?changeIcons@DocTabView@@QEAAXE@Z PROC			; DocTabView::changeIcons, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	4c 8b 89 b8 00
	00 00		 mov	 r9, QWORD PTR [rcx+184]
  00007	4c 8b 81 c0 00
	00 00		 mov	 r8, QWORD PTR [rcx+192]
  0000e	4d 2b c1	 sub	 r8, r9
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h

; 57   : 		if (choice >= _pIconListVector.size())

  00011	0f b6 c2	 movzx	 eax, dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	49 c1 f8 03	 sar	 r8, 3
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\DocTabView.h

; 57   : 		if (choice >= _pIconListVector.size())

  00018	49 3b c0	 cmp	 rax, r8
  0001b	73 15		 jae	 SHORT $LN1@changeIcon

; 58   : 			return;
; 59   : 		_iconListIndexChoice = choice;

  0001d	0f b6 c2	 movzx	 eax, dl
  00020	89 81 d0 00 00
	00		 mov	 DWORD PTR [rcx+208], eax

; 60   : 		TabBar::setImageList(_pIconListVector[_iconListIndexChoice]->getHandle());

  00026	49 8b 14 c1	 mov	 rdx, QWORD PTR [r9+rax*8]
  0002a	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0002d	e9 00 00 00 00	 jmp	 ?setImageList@TabBar@@QEAAXPEAU_IMAGELIST@@@Z ; TabBar::setImageList
$LN1@changeIcon:

; 61   : 	};

  00032	c3		 ret	 0
?changeIcons@DocTabView@@QEAAXE@Z ENDP			; DocTabView::changeIcons
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
;	COMDAT ?clearIndicator@ScintillaEditView@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
indicatorNumber$ = 56
?clearIndicator@ScintillaEditView@@QEAAXH@Z PROC	; ScintillaEditView::clearIndicator, COMDAT

; 540  : 	void clearIndicator(int indicatorNumber) {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 63 fa	 movsxd	 rdi, edx

; 278  : 		return int(execute(SCI_GETLENGTH));

  00012	45 33 c9	 xor	 r9d, r9d
  00015	ba d6 07 00 00	 mov	 edx, 2006		; 000007d6H
  0001a	45 33 c0	 xor	 r8d, r8d

; 540  : 	void clearIndicator(int indicatorNumber) {

  0001d	48 8b f1	 mov	 rsi, rcx

; 278  : 		return int(execute(SCI_GETLENGTH));

  00020	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 541  : 		int docStart = 0;
; 542  : 		int docEnd = getCurrentDocLen();
; 543  : 		execute(SCI_SETINDICATORCURRENT, indicatorNumber);

  00025	4c 8b c7	 mov	 r8, rdi
  00028	45 33 c9	 xor	 r9d, r9d
  0002b	ba c4 09 00 00	 mov	 edx, 2500		; 000009c4H
  00030	48 8b ce	 mov	 rcx, rsi

; 278  : 		return int(execute(SCI_GETLENGTH));

  00033	48 8b d8	 mov	 rbx, rax

; 541  : 		int docStart = 0;
; 542  : 		int docEnd = getCurrentDocLen();
; 543  : 		execute(SCI_SETINDICATORCURRENT, indicatorNumber);

  00036	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute

; 544  : 		execute(SCI_INDICATORCLEARRANGE, docStart, docEnd-docStart);

  0003b	4c 63 cb	 movsxd	 r9, ebx
  0003e	45 33 c0	 xor	 r8d, r8d
  00041	ba c9 09 00 00	 mov	 edx, 2505		; 000009c9H
  00046	48 8b ce	 mov	 rcx, rsi

; 545  : 	};

  00049	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi

; 544  : 		execute(SCI_INDICATORCLEARRANGE, docStart, docEnd-docStart);

  00058	e9 00 00 00 00	 jmp	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
?clearIndicator@ScintillaEditView@@QEAAXH@Z ENDP	; ScintillaEditView::clearIndicator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
;	COMDAT ?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ
_TEXT	SEGMENT
this$ = 48
?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ PROC	; ScintillaEditView::getCurrentColumnNumber, COMDAT

; 439  : 	long getCurrentColumnNumber() const {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 440  :         return long(execute(SCI_GETCOLUMN, execute(SCI_GETCURRENTPOS)));

  00006	45 33 c9	 xor	 r9d, r9d
  00009	45 33 c0	 xor	 r8d, r8d
  0000c	ba d8 07 00 00	 mov	 edx, 2008		; 000007d8H
  00011	48 8b d9	 mov	 rbx, rcx
  00014	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  00019	4c 8b c0	 mov	 r8, rax
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	ba 51 08 00 00	 mov	 edx, 2129		; 00000851H
  00024	48 8b cb	 mov	 rcx, rbx

; 441  :     };

  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx

; 440  :         return long(execute(SCI_GETCOLUMN, execute(SCI_GETCURRENTPOS)));

  0002c	e9 00 00 00 00	 jmp	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
?getCurrentColumnNumber@ScintillaEditView@@QEBAJXZ ENDP	; ScintillaEditView::getCurrentColumnNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
;	COMDAT ?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ PROC	; ScintillaEditView::getCurrentLineNumber, COMDAT

; 399  : 	size_t getCurrentLineNumber()const {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 400  : 		return static_cast<size_t>(execute(SCI_LINEFROMPOSITION, execute(SCI_GETCURRENTPOS)));

  00006	45 33 c9	 xor	 r9d, r9d
  00009	45 33 c0	 xor	 r8d, r8d
  0000c	ba d8 07 00 00	 mov	 edx, 2008		; 000007d8H
  00011	48 8b d9	 mov	 rbx, rcx
  00014	e8 00 00 00 00	 call	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
  00019	4c 8b c0	 mov	 r8, rax
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	ba 76 08 00 00	 mov	 edx, 2166		; 00000876H
  00024	48 8b cb	 mov	 rcx, rbx

; 401  : 	};

  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx

; 400  : 		return static_cast<size_t>(execute(SCI_LINEFROMPOSITION, execute(SCI_GETCURRENTPOS)));

  0002c	e9 00 00 00 00	 jmp	 ?execute@ScintillaEditView@@QEBA_JI_K_J@Z ; ScintillaEditView::execute
?getCurrentLineNumber@ScintillaEditView@@QEBA_KXZ ENDP	; ScintillaEditView::getCurrentLineNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\ScintillaEditView.h
;	COMDAT ?execute@ScintillaEditView@@QEBA_JI_K_J@Z
_TEXT	SEGMENT
this$ = 48
Msg$ = 56
wParam$ = 64
lParam$ = 72
?execute@ScintillaEditView@@QEBA_JI_K_J@Z PROC		; ScintillaEditView::execute, COMDAT

; 220  : 	LRESULT execute(UINT Msg, WPARAM wParam=0, LPARAM lParam=0) const {

$LN12:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 221  : 		try {
; 222  : 			return (_pScintillaFunc) ? _pScintillaFunc(_pScintillaPtr, Msg, wParam, lParam) : -1;

  00004	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00008	48 85 c0	 test	 rax, rax
  0000b	74 08		 je	 SHORT $LN4@execute
  0000d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00011	ff d0		 call	 rax
  00013	eb 07		 jmp	 SHORT $LN5@execute
$LN4@execute:
  00015	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN5@execute:
  0001c	eb 07		 jmp	 SHORT $LN8@execute
$LN9@execute:

; 223  : 		}
; 224  : 		catch (...)
; 225  : 		{
; 226  : 			return -1;

  0001e	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN8@execute:

; 227  : 		}
; 228  : 	};

  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	c3		 ret	 0
  0002a	cc		 int	 3
?execute@ScintillaEditView@@QEBA_JI_K_J@Z ENDP		; ScintillaEditView::execute
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
Msg$ = 56
wParam$ = 64
lParam$ = 72
?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA PROC ; `ScintillaEditView::execute'::`1'::catch$0

; 223  : 		}
; 224  : 		catch (...)
; 225  : 		{

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?execute@ScintillaEditView@@QEBA_JI_K_J@Z$0:

; 223  : 		}
; 224  : 		catch (...)
; 225  : 		{
; 226  : 			return -1;

  0000d	48 b8 00 00 00
	00 00 00 00 00	 mov	 rax, 0
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
  0001d	cc		 int	 3
?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA ENDP ; `ScintillaEditView::execute'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
Msg$ = 56
wParam$ = 64
lParam$ = 72
?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA PROC ; `ScintillaEditView::execute'::`1'::catch$0

; 225  : 		{

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?execute@ScintillaEditView@@QEBA_JI_K_J@Z$0:

; 226  : 			return -1;

  0000d	48 b8 00 00 00
	00 00 00 00 00	 mov	 rax, 0
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
  0001d	cc		 int	 3
?catch$0@?0??execute@ScintillaEditView@@QEBA_JI_K_J@Z@4HA ENDP ; `ScintillaEditView::execute'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Finstance@?1??getInstance@FileManager@@SAAEAV1@XZ@YAXXZ
text$yd	SEGMENT
??__Finstance@?1??getInstance@FileManager@@SAAEAV1@XZ@YAXXZ PROC ; `FileManager::getInstance'::`2'::`dynamic atexit destructor for 'instance'', COMDAT
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
  00007	e9 00 00 00 00	 jmp	 ??1FileManager@@AEAA@XZ	; FileManager::~FileManager
??__Finstance@?1??getInstance@FileManager@@SAAEAV1@XZ@YAXXZ ENDP ; `FileManager::getInstance'::`2'::`dynamic atexit destructor for 'instance''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ PROC ; std::vector<Buffer *,std::allocator<Buffer *> >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1774 :         _Xlength_error("vector too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlength:
?_Xlength@?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@CAXXZ ENDP ; std::vector<Buffer *,std::allocator<Buffer *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ PROC ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z PROC ; std::allocator<Buffer *>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b c2	 mov	 rax, rdx

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	4a 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [r8*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000f	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00016	72 18		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00018	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]
  0001c	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00020	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00023	48 83 c0 f8	 add	 rax, -8
  00027	48 83 f8 1f	 cmp	 rax, 31
  0002b	77 0f		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	48 8b c1	 mov	 rax, rcx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00030	48 8b c8	 mov	 rcx, rax

; 836  :     }

  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 264  :         ::operator delete(_Ptr, _Bytes);

  00037	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00041	cc		 int	 3
$LN18@deallocate:
?deallocate@?$allocator@PEAVBuffer@@@std@@QEAAXQEAPEAVBuffer@@_K@Z ENDP ; std::allocator<Buffer *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\Buffer.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\Buffer.h
;	COMDAT ?getInstance@FileManager@@SAAEAV1@XZ
_TEXT	SEGMENT
?getInstance@FileManager@@SAAEAV1@XZ PROC		; FileManager::getInstance, COMDAT

; 103  : 	static FileManager& getInstance() {

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 104  : 		static FileManager instance;

  00004	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  0000a	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  00013	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00018	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  0001c	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  0001f	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA, eax ; `FileManager::getInstance'::`2'::$TSS0
  00025	7f 0c		 jg	 SHORT $LN17@getInstanc
$LN14@getInstanc:

; 105  : 		return instance;
; 106  : 	};

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
  0002e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00032	c3		 ret	 0
$LN17@getInstanc:

; 104  : 		static FileManager instance;

  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA ; `FileManager::getInstance'::`2'::$TSS0
  0003a	e8 00 00 00 00	 call	 _Init_thread_header
  0003f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA, -1 ; `FileManager::getInstance'::`2'::$TSS0
  00046	75 df		 jne	 SHORT $LN14@getInstanc
  00048	0f 57 c0	 xorps	 xmm0, xmm0

; 137  : 	Notepad_plus* _pNotepadPlus = nullptr;

  0004b	66 0f 7f 05 00
	00 00 00	 movdqa	 XMMWORD PTR ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00053	33 c0		 xor	 eax, eax
  00055	48 89 05 18 00
	00 00		 mov	 QWORD PTR ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A+24, rax
  0005c	66 0f 7f 05 20
	00 00 00	 movdqa	 XMMWORD PTR ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A+32, xmm0
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\ScintillaComponent\Buffer.h

; 141  : 	BufferID _nextBufferID = 0;

  00064	48 89 05 30 00
	00 00		 mov	 QWORD PTR ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A+48, rax

; 142  : 	size_t _nbBufs = 0;

  0006b	48 89 05 38 00
	00 00		 mov	 QWORD PTR ?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A+56, rax

; 104  : 		static FileManager instance;

  00072	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Finstance@?1??getInstance@FileManager@@SAAEAV1@XZ@YAXXZ ; `FileManager::getInstance'::`2'::`dynamic atexit destructor for 'instance''
  00079	e8 00 00 00 00	 call	 atexit
  0007e	90		 npad	 1
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA ; `FileManager::getInstance'::`2'::$TSS0
  00086	e8 00 00 00 00	 call	 _Init_thread_footer

; 105  : 		return instance;
; 106  : 	};

  0008b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
  00092	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00096	c3		 ret	 0
?getInstance@FileManager@@SAAEAV1@XZ ENDP		; FileManager::getInstance
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA PROC ; `FileManager::getInstance'::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA ; `FileManager::getInstance'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$0@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA ENDP ; `FileManager::getInstance'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA PROC ; `FileManager::getInstance'::`1'::dtor$1
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
?dtor$1@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA ENDP ; `FileManager::getInstance'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA PROC ; `FileManager::getInstance'::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstance@FileManager@@SAAEAV2@XZ@4HA ; `FileManager::getInstance'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$0@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA ENDP ; `FileManager::getInstance'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA PROC ; `FileManager::getInstance'::`1'::dtor$1
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@FileManager@@SAAEAV2@XZ@4V2@A ; `FileManager::getInstance'::`2'::instance
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PEAVBuffer@@V?$allocator@PEAVBuffer@@@std@@@std@@QEAA@XZ ; std::vector<Buffer *,std::allocator<Buffer *> >::~vector<Buffer *,std::allocator<Buffer *> >
?dtor$1@?0??getInstance@FileManager@@SAAEAV1@XZ@4HA ENDP ; `FileManager::getInstance'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
;	COMDAT ?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ PROC ; NppParameters::getWingupFullPath, COMDAT

; 1899 : 	generic_string getWingupFullPath() const { return _wingupFullPath; };

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00015	48 8d 91 60 34
	03 00		 lea	 rdx, QWORD PTR [rcx+210016]
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00024	90		 npad	 1
  00025	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
  0002d	48 8b c3	 mov	 rax, rbx
  00030	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
  00036	cc		 int	 3
?getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ENDP ; NppParameters::getWingupFullPath
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA PROC ; `NppParameters::getWingupFullPath'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA ENDP ; `NppParameters::getWingupFullPath'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA PROC ; `NppParameters::getWingupFullPath'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getWingupFullPath@NppParameters@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@4HA ENDP ; `NppParameters::getWingupFullPath'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\Parameters.h
;	COMDAT ?getInstance@NppParameters@@SAAEAV1@XZ
_TEXT	SEGMENT
$T1 = 48
?getInstance@NppParameters@@SAAEAV1@XZ PROC		; NppParameters::getInstance, COMDAT

; 1379 : 	static NppParameters& getInstance() {

$LN15:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1374 : 		static NppParameters* instance = new NppParameters;

  00004	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  0000a	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  00013	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00018	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  0001c	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  0001f	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA, eax ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00025	7f 2b		 jg	 SHORT $LN13@getInstanc
$LN10@getInstanc:

; 1380 : 		return *getInstancePointer();
; 1381 : 	};

  00027	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA ; `NppParameters::getInstancePointer'::`2'::instance
  0002e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00032	c3		 ret	 0
$LN7@getInstanc:

; 1374 : 		static NppParameters* instance = new NppParameters;

  00033	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA, rax ; `NppParameters::getInstancePointer'::`2'::instance
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00041	e8 00 00 00 00	 call	 _Init_thread_footer

; 1380 : 		return *getInstancePointer();
; 1381 : 	};

  00046	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?instance@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4PEAV2@EA ; `NppParameters::getInstancePointer'::`2'::instance
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	c3		 ret	 0
$LN13@getInstanc:

; 1374 : 		static NppParameters* instance = new NppParameters;

  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00059	e8 00 00 00 00	 call	 _Init_thread_header
  0005e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA, -1 ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00065	75 c0		 jne	 SHORT $LN10@getInstanc
  00067	b9 c8 34 03 00	 mov	 ecx, 210120		; 000334c8H
  0006c	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00071	48 89 44 24 30	 mov	 QWORD PTR $T1[rsp], rax
  00076	48 85 c0	 test	 rax, rax
  00079	74 b8		 je	 SHORT $LN7@getInstanc
  0007b	48 8b c8	 mov	 rcx, rax
  0007e	e8 00 00 00 00	 call	 ??0NppParameters@@AEAA@XZ ; NppParameters::NppParameters
  00083	90		 npad	 1
  00084	eb ad		 jmp	 SHORT $LN7@getInstanc
  00086	cc		 int	 3
?getInstance@NppParameters@@SAAEAV1@XZ ENDP		; NppParameters::getInstance
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
?dtor$0@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA PROC ; `NppParameters::getInstance'::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$0@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA ENDP ; `NppParameters::getInstance'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA PROC ; `NppParameters::getInstance'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba c8 34 03 00	 mov	 edx, 210120		; 000334c8H
  0000e	48 8b 4d 30	 mov	 rcx, QWORD PTR $T1[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA ENDP ; `NppParameters::getInstance'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
?dtor$0@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA PROC ; `NppParameters::getInstance'::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??getInstancePointer@NppParameters@@CAPEAV2@XZ@4HA ; `NppParameters::getInstancePointer'::`2'::$TSS0
  00007	e9 00 00 00 00	 jmp	 _Init_thread_abort
?dtor$0@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA ENDP ; `NppParameters::getInstance'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA PROC ; `NppParameters::getInstance'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba c8 34 03 00	 mov	 edx, 210120		; 000334c8H
  0000e	48 8b 4d 30	 mov	 rcx, QWORD PTR $T1[rbp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$1@?0??getInstance@NppParameters@@SAAEAV1@XZ@4HA ENDP ; `NppParameters::getInstance'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0NppGUI@@QEAA@AEBU0@@Z
_TEXT	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
??0NppGUI@@QEAA@AEBU0@@Z PROC				; NppGUI::NppGUI, COMDAT
$LN153:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	55		 push	 rbp
  00007	56		 push	 rsi
  00008	57		 push	 rdi
  00009	41 54		 push	 r12
  0000b	41 56		 push	 r14
  0000d	41 57		 push	 r15
  0000f	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00013	4c 8b f2	 mov	 r14, rdx
  00016	48 8b f1	 mov	 rsi, rcx
  00019	8b 02		 mov	 eax, DWORD PTR [rdx]
  0001b	89 01		 mov	 DWORD PTR [rcx], eax
  0001d	0f b6 42 04	 movzx	 eax, BYTE PTR [rdx+4]
  00021	88 41 04	 mov	 BYTE PTR [rcx+4], al
  00024	0f b6 42 05	 movzx	 eax, BYTE PTR [rdx+5]
  00028	88 41 05	 mov	 BYTE PTR [rcx+5], al
  0002b	0f b6 42 06	 movzx	 eax, BYTE PTR [rdx+6]
  0002f	88 41 06	 mov	 BYTE PTR [rcx+6], al
  00032	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  00035	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00038	0f b6 42 0c	 movzx	 eax, BYTE PTR [rdx+12]
  0003c	88 41 0c	 mov	 BYTE PTR [rcx+12], al
  0003f	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
  00042	89 41 10	 mov	 DWORD PTR [rcx+16], eax
  00045	8b 42 14	 mov	 eax, DWORD PTR [rdx+20]
  00048	89 41 14	 mov	 DWORD PTR [rcx+20], eax
  0004b	0f b6 42 18	 movzx	 eax, BYTE PTR [rdx+24]
  0004f	88 41 18	 mov	 BYTE PTR [rcx+24], al
  00052	0f b6 42 19	 movzx	 eax, BYTE PTR [rdx+25]
  00056	88 41 19	 mov	 BYTE PTR [rcx+25], al
  00059	0f b6 42 1a	 movzx	 eax, BYTE PTR [rdx+26]
  0005d	88 41 1a	 mov	 BYTE PTR [rcx+26], al
  00060	8b 42 1c	 mov	 eax, DWORD PTR [rdx+28]
  00063	89 41 1c	 mov	 DWORD PTR [rcx+28], eax
  00066	0f b6 42 20	 movzx	 eax, BYTE PTR [rdx+32]
  0006a	88 41 20	 mov	 BYTE PTR [rcx+32], al
  0006d	0f 10 42 24	 movups	 xmm0, XMMWORD PTR [rdx+36]
  00071	0f 11 41 24	 movups	 XMMWORD PTR [rcx+36], xmm0
  00075	0f 10 42 34	 movups	 xmm0, XMMWORD PTR [rdx+52]
  00079	0f 11 41 34	 movups	 XMMWORD PTR [rcx+52], xmm0
  0007d	0f b6 42 44	 movzx	 eax, BYTE PTR [rdx+68]
  00081	88 41 44	 mov	 BYTE PTR [rcx+68], al
  00084	0f b6 42 45	 movzx	 eax, BYTE PTR [rdx+69]
  00088	88 41 45	 mov	 BYTE PTR [rcx+69], al
  0008b	0f b6 42 46	 movzx	 eax, BYTE PTR [rdx+70]
  0008f	88 41 46	 mov	 BYTE PTR [rcx+70], al
  00092	0f b6 42 47	 movzx	 eax, BYTE PTR [rdx+71]
  00096	88 41 47	 mov	 BYTE PTR [rcx+71], al
  00099	0f b6 42 48	 movzx	 eax, BYTE PTR [rdx+72]
  0009d	88 41 48	 mov	 BYTE PTR [rcx+72], al
  000a0	0f b6 42 49	 movzx	 eax, BYTE PTR [rdx+73]
  000a4	88 41 49	 mov	 BYTE PTR [rcx+73], al
  000a7	0f b6 42 4a	 movzx	 eax, BYTE PTR [rdx+74]
  000ab	88 41 4a	 mov	 BYTE PTR [rcx+74], al
  000ae	0f b6 42 4b	 movzx	 eax, BYTE PTR [rdx+75]
  000b2	88 41 4b	 mov	 BYTE PTR [rcx+75], al
  000b5	0f b6 42 4c	 movzx	 eax, BYTE PTR [rdx+76]
  000b9	88 41 4c	 mov	 BYTE PTR [rcx+76], al
  000bc	0f b6 42 4d	 movzx	 eax, BYTE PTR [rdx+77]
  000c0	88 41 4d	 mov	 BYTE PTR [rcx+77], al
  000c3	0f b6 42 4e	 movzx	 eax, BYTE PTR [rdx+78]
  000c7	88 41 4e	 mov	 BYTE PTR [rcx+78], al
  000ca	0f b6 42 4f	 movzx	 eax, BYTE PTR [rdx+79]
  000ce	88 41 4f	 mov	 BYTE PTR [rcx+79], al
  000d1	0f b6 42 50	 movzx	 eax, BYTE PTR [rdx+80]
  000d5	88 41 50	 mov	 BYTE PTR [rcx+80], al
  000d8	0f b6 42 51	 movzx	 eax, BYTE PTR [rdx+81]
  000dc	88 41 51	 mov	 BYTE PTR [rcx+81], al
  000df	0f b6 42 52	 movzx	 eax, BYTE PTR [rdx+82]
  000e3	88 41 52	 mov	 BYTE PTR [rcx+82], al
  000e6	0f b6 42 53	 movzx	 eax, BYTE PTR [rdx+83]
  000ea	88 41 53	 mov	 BYTE PTR [rcx+83], al
  000ed	0f b6 42 54	 movzx	 eax, BYTE PTR [rdx+84]
  000f1	88 41 54	 mov	 BYTE PTR [rcx+84], al
  000f4	0f b6 42 55	 movzx	 eax, BYTE PTR [rdx+85]
  000f8	88 41 55	 mov	 BYTE PTR [rcx+85], al
  000fb	0f b6 42 56	 movzx	 eax, BYTE PTR [rdx+86]
  000ff	88 41 56	 mov	 BYTE PTR [rcx+86], al
  00102	0f b6 42 57	 movzx	 eax, BYTE PTR [rdx+87]
  00106	88 41 57	 mov	 BYTE PTR [rcx+87], al
  00109	0f b6 42 58	 movzx	 eax, BYTE PTR [rdx+88]
  0010d	88 41 58	 mov	 BYTE PTR [rcx+88], al
  00110	0f b6 42 59	 movzx	 eax, BYTE PTR [rdx+89]
  00114	88 41 59	 mov	 BYTE PTR [rcx+89], al
  00117	0f b6 42 5a	 movzx	 eax, BYTE PTR [rdx+90]
  0011b	88 41 5a	 mov	 BYTE PTR [rcx+90], al
  0011e	0f b6 42 5b	 movzx	 eax, BYTE PTR [rdx+91]
  00122	88 41 5b	 mov	 BYTE PTR [rcx+91], al
  00125	0f b6 42 5c	 movzx	 eax, BYTE PTR [rdx+92]
  00129	88 41 5c	 mov	 BYTE PTR [rcx+92], al
  0012c	0f b6 42 5d	 movzx	 eax, BYTE PTR [rdx+93]
  00130	88 41 5d	 mov	 BYTE PTR [rcx+93], al
  00133	0f b6 42 5e	 movzx	 eax, BYTE PTR [rdx+94]
  00137	88 41 5e	 mov	 BYTE PTR [rcx+94], al
  0013a	0f b6 42 5f	 movzx	 eax, BYTE PTR [rdx+95]
  0013e	88 41 5f	 mov	 BYTE PTR [rcx+95], al
  00141	0f b6 42 60	 movzx	 eax, BYTE PTR [rdx+96]
  00145	88 41 60	 mov	 BYTE PTR [rcx+96], al
  00148	0f b6 42 61	 movzx	 eax, BYTE PTR [rdx+97]
  0014c	88 41 61	 mov	 BYTE PTR [rcx+97], al
  0014f	8b 42 64	 mov	 eax, DWORD PTR [rdx+100]
  00152	89 41 64	 mov	 DWORD PTR [rcx+100], eax
  00155	0f b6 42 68	 movzx	 eax, BYTE PTR [rdx+104]
  00159	88 41 68	 mov	 BYTE PTR [rcx+104], al
  0015c	48 83 c2 70	 add	 rdx, 112		; 00000070H
  00160	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00164	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00169	90		 npad	 1
  0016a	41 8b 86 90 00
	00 00		 mov	 eax, DWORD PTR [r14+144]
  00171	89 86 90 00 00
	00		 mov	 DWORD PTR [rsi+144], eax
  00177	49 8d 96 98 00
	00 00		 lea	 rdx, QWORD PTR [r14+152]
  0017e	48 8d 8e 98 00
	00 00		 lea	 rcx, QWORD PTR [rsi+152]
  00185	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0018a	90		 npad	 1
  0018b	41 0f 10 86 b8
	00 00 00	 movups	 xmm0, XMMWORD PTR [r14+184]
  00193	0f 11 86 b8 00
	00 00		 movups	 XMMWORD PTR [rsi+184], xmm0
  0019a	41 8b 86 c8 00
	00 00		 mov	 eax, DWORD PTR [r14+200]
  001a1	89 86 c8 00 00
	00		 mov	 DWORD PTR [rsi+200], eax
  001a7	4c 8d be d0 00
	00 00		 lea	 r15, QWORD PTR [rsi+208]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  001ae	45 33 e4	 xor	 r12d, r12d
  001b1	4d 89 27	 mov	 QWORD PTR [r15], r12
  001b4	4d 89 67 08	 mov	 QWORD PTR [r15+8], r12
  001b8	4d 89 67 10	 mov	 QWORD PTR [r15+16], r12

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  001bc	49 8b be d0 00
	00 00		 mov	 rdi, QWORD PTR [r14+208]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  001c3	49 8b ae d8 00
	00 00		 mov	 rbp, QWORD PTR [r14+216]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  001ca	48 3b fd	 cmp	 rdi, rbp
  001cd	0f 84 00 01 00
	00		 je	 $LN122@NppGUI

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  001d3	48 8b cd	 mov	 rcx, rbp
  001d6	48 2b cf	 sub	 rcx, rdi
  001d9	48 b8 67 66 66
	66 66 66 66 66	 mov	 rax, 7378697629483820647 ; 6666666666666667H
  001e3	48 f7 e9	 imul	 rcx
  001e6	48 c1 fa 04	 sar	 rdx, 4
  001ea	48 8b c2	 mov	 rax, rdx
  001ed	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  001f1	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  001f4	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H
  001fe	48 3b d0	 cmp	 rdx, rax
  00201	0f 87 3e 05 00
	00		 ja	 $LN147@NppGUI

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00207	48 8d 04 92	 lea	 rax, QWORD PTR [rdx+rdx*4]
  0020b	48 8d 1c c5 00
	00 00 00	 lea	 rbx, QWORD PTR [rax*8]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00213	48 81 fb 00 10
	00 00		 cmp	 rbx, 4096		; 00001000H
  0021a	72 2c		 jb	 SHORT $LN33@NppGUI

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0021c	48 8d 4b 27	 lea	 rcx, QWORD PTR [rbx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00220	48 3b cb	 cmp	 rcx, rbx
  00223	0f 86 1c 05 00
	00		 jbe	 $LN147@NppGUI

; 85   :         return ::operator new(_Bytes);

  00229	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0022e	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00231	48 85 c0	 test	 rax, rax
  00234	0f 84 05 05 00
	00		 je	 $LN42@NppGUI

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0023a	48 83 c0 27	 add	 rax, 39			; 00000027H
  0023e	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00242	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00246	eb 12		 jmp	 SHORT $LN32@NppGUI
$LN33@NppGUI:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00248	48 85 db	 test	 rbx, rbx
  0024b	74 0a		 je	 SHORT $LN34@NppGUI

; 85   :         return ::operator new(_Bytes);

  0024d	48 8b cb	 mov	 rcx, rbx
  00250	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  00255	eb 03		 jmp	 SHORT $LN32@NppGUI
$LN34@NppGUI:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00257	49 8b c4	 mov	 rax, r12
$LN32@NppGUI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  0025a	49 89 07	 mov	 QWORD PTR [r15], rax

; 1713 :         _Mylast            = _Newvec;

  0025d	49 89 47 08	 mov	 QWORD PTR [r15+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  00261	48 03 c3	 add	 rax, rbx
  00264	49 89 47 10	 mov	 QWORD PTR [r15+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  00268	4c 89 bc 24 88
	00 00 00	 mov	 QWORD PTR _Guard$2[rsp], r15

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  00270	49 8b 1f	 mov	 rbx, QWORD PTR [r15]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00273	48 89 5c 24 20	 mov	 QWORD PTR _Backout$1[rsp], rbx
  00278	48 89 5c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], rbx
  0027d	4c 89 7c 24 30	 mov	 QWORD PTR _Backout$1[rsp+16], r15
  00282	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL59@NppGUI:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00290	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR $T3[rsp], rbx
  00298	8b 07		 mov	 eax, DWORD PTR [rdi]
  0029a	89 03		 mov	 DWORD PTR [rbx], eax
  0029c	48 8d 57 08	 lea	 rdx, QWORD PTR [rdi+8]
  002a0	8b 42 fc	 mov	 eax, DWORD PTR [rdx-4]
  002a3	89 43 04	 mov	 DWORD PTR [rbx+4], eax
  002a6	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  002aa	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  002af	90		 npad	 1

; 1612 :         ++_Last;

  002b0	48 83 c3 28	 add	 rbx, 40			; 00000028H
  002b4	48 89 5c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], rbx

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  002b9	48 83 c7 28	 add	 rdi, 40			; 00000028H
  002bd	48 3b fd	 cmp	 rdi, rbp
  002c0	75 ce		 jne	 SHORT $LL59@NppGUI

; 1616 :         _First = _Last;

  002c2	48 89 5c 24 20	 mov	 QWORD PTR _Backout$1[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  002c7	49 89 5f 08	 mov	 QWORD PTR [r15+8], rbx

; 566  :             _Guard._Target   = nullptr;

  002cb	4c 89 a4 24 88
	00 00 00	 mov	 QWORD PTR _Guard$2[rsp], r12
$LN122@NppGUI:
  002d3	41 0f b6 86 e8
	00 00 00	 movzx	 eax, BYTE PTR [r14+232]
  002db	88 86 e8 00 00
	00		 mov	 BYTE PTR [rsi+232], al
  002e1	48 8d 9e f0 00
	00 00		 lea	 rbx, QWORD PTR [rsi+240]
  002e8	48 89 9c 24 88
	00 00 00	 mov	 QWORD PTR this$[rsp], rbx
  002f0	41 0f b6 86 f0
	00 00 00	 movzx	 eax, BYTE PTR [r14+240]
  002f8	88 03		 mov	 BYTE PTR [rbx], al
  002fa	41 8b 86 f4 00
	00 00		 mov	 eax, DWORD PTR [r14+244]
  00301	89 43 04	 mov	 DWORD PTR [rbx+4], eax
  00304	49 8d 96 f8 00
	00 00		 lea	 rdx, QWORD PTR [r14+248]
  0030b	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  0030f	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00314	90		 npad	 1
  00315	49 8d 96 18 01
	00 00		 lea	 rdx, QWORD PTR [r14+280]
  0031c	48 8d 4b 28	 lea	 rcx, QWORD PTR [rbx+40]
  00320	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00325	90		 npad	 1
  00326	49 8d 96 38 01
	00 00		 lea	 rdx, QWORD PTR [r14+312]
  0032d	48 8d 4b 48	 lea	 rcx, QWORD PTR [rbx+72]
  00331	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00336	90		 npad	 1
  00337	49 8d 96 58 01
	00 00		 lea	 rdx, QWORD PTR [r14+344]
  0033e	48 8d 4b 68	 lea	 rcx, QWORD PTR [rbx+104]
  00342	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00347	90		 npad	 1
  00348	41 8b 86 78 01
	00 00		 mov	 eax, DWORD PTR [r14+376]
  0034f	89 83 88 00 00
	00		 mov	 DWORD PTR [rbx+136], eax
  00355	41 8b 86 7c 01
	00 00		 mov	 eax, DWORD PTR [r14+380]
  0035c	89 83 8c 00 00
	00		 mov	 DWORD PTR [rbx+140], eax
  00362	49 8d 96 80 01
	00 00		 lea	 rdx, QWORD PTR [r14+384]
  00369	48 8d 8b 90 00
	00 00		 lea	 rcx, QWORD PTR [rbx+144]
  00370	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00375	90		 npad	 1
  00376	49 8d 96 a0 01
	00 00		 lea	 rdx, QWORD PTR [r14+416]
  0037d	48 8d 8b b0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+176]
  00384	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00389	90		 npad	 1
  0038a	49 8d 96 c0 01
	00 00		 lea	 rdx, QWORD PTR [r14+448]
  00391	48 8d 8b d0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+208]
  00398	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0039d	90		 npad	 1
  0039e	49 8d 96 e0 01
	00 00		 lea	 rdx, QWORD PTR [r14+480]
  003a5	48 8d 8b f0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+240]
  003ac	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  003b1	90		 npad	 1
  003b2	41 8b 86 00 02
	00 00		 mov	 eax, DWORD PTR [r14+512]
  003b9	89 83 10 01 00
	00		 mov	 DWORD PTR [rbx+272], eax
  003bf	41 8b 86 04 02
	00 00		 mov	 eax, DWORD PTR [r14+516]
  003c6	89 83 14 01 00
	00		 mov	 DWORD PTR [rbx+276], eax
  003cc	41 0f 10 86 08
	02 00 00	 movups	 xmm0, XMMWORD PTR [r14+520]
  003d4	0f 11 83 18 01
	00 00		 movups	 XMMWORD PTR [rbx+280], xmm0
  003db	41 8b 86 18 02
	00 00		 mov	 eax, DWORD PTR [r14+536]
  003e2	89 86 18 02 00
	00		 mov	 DWORD PTR [rsi+536], eax
  003e8	41 0f b6 86 1c
	02 00 00	 movzx	 eax, BYTE PTR [r14+540]
  003f0	88 86 1c 02 00
	00		 mov	 BYTE PTR [rsi+540], al
  003f6	49 8d 96 20 02
	00 00		 lea	 rdx, QWORD PTR [r14+544]
  003fd	48 8d 8e 20 02
	00 00		 lea	 rcx, QWORD PTR [rsi+544]
  00404	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00409	90		 npad	 1
  0040a	49 8d 96 40 02
	00 00		 lea	 rdx, QWORD PTR [r14+576]
  00411	48 8d 8e 40 02
	00 00		 lea	 rcx, QWORD PTR [rsi+576]
  00418	e8 00 00 00 00	 call	 ??0DockingManagerData@@QEAA@AEBU0@@Z
  0041d	90		 npad	 1
  0041e	41 8b 86 98 02
	00 00		 mov	 eax, DWORD PTR [r14+664]
  00425	89 86 98 02 00
	00		 mov	 DWORD PTR [rsi+664], eax
  0042b	41 0f b7 86 9c
	02 00 00	 movzx	 eax, WORD PTR [r14+668]
  00433	66 89 86 9c 02
	00 00		 mov	 WORD PTR [rsi+668], ax
  0043a	41 0f b6 86 9e
	02 00 00	 movzx	 eax, BYTE PTR [r14+670]
  00442	88 86 9e 02 00
	00		 mov	 BYTE PTR [rsi+670], al
  00448	41 8b 86 a0 02
	00 00		 mov	 eax, DWORD PTR [r14+672]
  0044f	89 86 a0 02 00
	00		 mov	 DWORD PTR [rsi+672], eax
  00455	49 8b 86 a8 02
	00 00		 mov	 rax, QWORD PTR [r14+680]
  0045c	48 89 86 a8 02
	00 00		 mov	 QWORD PTR [rsi+680], rax
  00463	41 0f b6 86 b0
	02 00 00	 movzx	 eax, BYTE PTR [r14+688]
  0046b	88 86 b0 02 00
	00		 mov	 BYTE PTR [rsi+688], al
  00471	41 0f b6 86 b1
	02 00 00	 movzx	 eax, BYTE PTR [r14+689]
  00479	88 86 b1 02 00
	00		 mov	 BYTE PTR [rsi+689], al
  0047f	49 8d 9e b8 02
	00 00		 lea	 rbx, QWORD PTR [r14+696]
  00486	48 8d be b8 02
	00 00		 lea	 rdi, QWORD PTR [rsi+696]
  0048d	48 89 bc 24 90
	00 00 00	 mov	 QWORD PTR this$[rsp], rdi
  00495	48 8b d3	 mov	 rdx, rbx
  00498	48 8b cf	 mov	 rcx, rdi
  0049b	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
  004a0	90		 npad	 1
  004a1	48 8d 53 18	 lea	 rdx, QWORD PTR [rbx+24]
  004a5	48 8d 4f 18	 lea	 rcx, QWORD PTR [rdi+24]
  004a9	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
  004ae	90		 npad	 1
  004af	0f b6 43 30	 movzx	 eax, BYTE PTR [rbx+48]
  004b3	88 47 30	 mov	 BYTE PTR [rdi+48], al
  004b6	0f b6 43 31	 movzx	 eax, BYTE PTR [rbx+49]
  004ba	88 47 31	 mov	 BYTE PTR [rdi+49], al
  004bd	0f b6 43 32	 movzx	 eax, BYTE PTR [rbx+50]
  004c1	88 47 32	 mov	 BYTE PTR [rdi+50], al
  004c4	0f b6 43 33	 movzx	 eax, BYTE PTR [rbx+51]
  004c8	88 47 33	 mov	 BYTE PTR [rdi+51], al
  004cb	0f b6 43 34	 movzx	 eax, BYTE PTR [rbx+52]
  004cf	88 47 34	 mov	 BYTE PTR [rdi+52], al
  004d2	0f b6 43 35	 movzx	 eax, BYTE PTR [rbx+53]
  004d6	88 47 35	 mov	 BYTE PTR [rdi+53], al
  004d9	49 8d 96 f0 02
	00 00		 lea	 rdx, QWORD PTR [r14+752]
  004e0	48 8d 8e f0 02
	00 00		 lea	 rcx, QWORD PTR [rsi+752]
  004e7	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  004ec	90		 npad	 1
  004ed	49 8d 96 10 03
	00 00		 lea	 rdx, QWORD PTR [r14+784]
  004f4	48 8d 8e 10 03
	00 00		 lea	 rcx, QWORD PTR [rsi+784]
  004fb	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00500	90		 npad	 1
  00501	49 8d 96 30 03
	00 00		 lea	 rdx, QWORD PTR [r14+816]
  00508	48 8d 8e 30 03
	00 00		 lea	 rcx, QWORD PTR [rsi+816]
  0050f	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00514	90		 npad	 1
  00515	41 0f 10 86 50
	03 00 00	 movups	 xmm0, XMMWORD PTR [r14+848]
  0051d	0f 11 86 50 03
	00 00		 movups	 XMMWORD PTR [rsi+848], xmm0
  00524	41 8b 86 60 03
	00 00		 mov	 eax, DWORD PTR [r14+864]
  0052b	89 86 60 03 00
	00		 mov	 DWORD PTR [rsi+864], eax
  00531	41 0f b6 86 64
	03 00 00	 movzx	 eax, BYTE PTR [r14+868]
  00539	88 86 64 03 00
	00		 mov	 BYTE PTR [rsi+868], al
  0053f	41 8b 86 68 03
	00 00		 mov	 eax, DWORD PTR [r14+872]
  00546	89 86 68 03 00
	00		 mov	 DWORD PTR [rsi+872], eax
  0054c	41 8b 86 6c 03
	00 00		 mov	 eax, DWORD PTR [r14+876]
  00553	89 86 6c 03 00
	00		 mov	 DWORD PTR [rsi+876], eax
  00559	41 0f b6 86 70
	03 00 00	 movzx	 eax, BYTE PTR [r14+880]
  00561	88 86 70 03 00
	00		 mov	 BYTE PTR [rsi+880], al
  00567	41 0f b6 86 71
	03 00 00	 movzx	 eax, BYTE PTR [r14+881]
  0056f	88 86 71 03 00
	00		 mov	 BYTE PTR [rsi+881], al
  00575	41 8b 86 74 03
	00 00		 mov	 eax, DWORD PTR [r14+884]
  0057c	89 86 74 03 00
	00		 mov	 DWORD PTR [rsi+884], eax
  00582	48 8d 8e 78 03
	00 00		 lea	 rcx, QWORD PTR [rsi+888]
  00589	49 8d 86 78 03
	00 00		 lea	 rax, QWORD PTR [r14+888]
  00590	41 b8 04 00 00
	00		 mov	 r8d, 4
  00596	41 8b d0	 mov	 edx, r8d
  00599	0f 1f 80 00 00
	00 00		 npad	 7
$LL149@NppGUI:
  005a0	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  005a3	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
  005a6	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  005aa	0f 11 49 10	 movups	 XMMWORD PTR [rcx+16], xmm1
  005ae	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [rax+32]
  005b2	0f 11 41 20	 movups	 XMMWORD PTR [rcx+32], xmm0
  005b6	0f 10 48 30	 movups	 xmm1, XMMWORD PTR [rax+48]
  005ba	0f 11 49 30	 movups	 XMMWORD PTR [rcx+48], xmm1
  005be	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [rax+64]
  005c2	0f 11 41 40	 movups	 XMMWORD PTR [rcx+64], xmm0
  005c6	0f 10 48 50	 movups	 xmm1, XMMWORD PTR [rax+80]
  005ca	0f 11 49 50	 movups	 XMMWORD PTR [rcx+80], xmm1
  005ce	0f 10 40 60	 movups	 xmm0, XMMWORD PTR [rax+96]
  005d2	0f 11 41 60	 movups	 XMMWORD PTR [rcx+96], xmm0
  005d6	48 8d 89 80 00
	00 00		 lea	 rcx, QWORD PTR [rcx+128]
  005dd	0f 10 48 70	 movups	 xmm1, XMMWORD PTR [rax+112]
  005e1	0f 11 49 f0	 movups	 XMMWORD PTR [rcx-16], xmm1
  005e5	48 8d 80 80 00
	00 00		 lea	 rax, QWORD PTR [rax+128]
  005ec	48 83 ea 01	 sub	 rdx, 1
  005f0	75 ae		 jne	 SHORT $LL149@NppGUI
  005f2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  005f5	48 89 01	 mov	 QWORD PTR [rcx], rax
  005f8	48 8d 96 80 05
	00 00		 lea	 rdx, QWORD PTR [rsi+1408]
  005ff	49 8d 86 80 05
	00 00		 lea	 rax, QWORD PTR [r14+1408]
  00606	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL148@NppGUI:
  00610	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00613	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00616	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0061a	0f 11 4a 10	 movups	 XMMWORD PTR [rdx+16], xmm1
  0061e	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [rax+32]
  00622	0f 11 42 20	 movups	 XMMWORD PTR [rdx+32], xmm0
  00626	0f 10 48 30	 movups	 xmm1, XMMWORD PTR [rax+48]
  0062a	0f 11 4a 30	 movups	 XMMWORD PTR [rdx+48], xmm1
  0062e	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [rax+64]
  00632	0f 11 42 40	 movups	 XMMWORD PTR [rdx+64], xmm0
  00636	0f 10 48 50	 movups	 xmm1, XMMWORD PTR [rax+80]
  0063a	0f 11 4a 50	 movups	 XMMWORD PTR [rdx+80], xmm1
  0063e	0f 10 40 60	 movups	 xmm0, XMMWORD PTR [rax+96]
  00642	0f 11 42 60	 movups	 XMMWORD PTR [rdx+96], xmm0
  00646	48 8d 92 80 00
	00 00		 lea	 rdx, QWORD PTR [rdx+128]
  0064d	0f 10 48 70	 movups	 xmm1, XMMWORD PTR [rax+112]
  00651	0f 11 4a f0	 movups	 XMMWORD PTR [rdx-16], xmm1
  00655	48 8d 80 80 00
	00 00		 lea	 rax, QWORD PTR [rax+128]
  0065c	49 83 e8 01	 sub	 r8, 1
  00660	75 ae		 jne	 SHORT $LL148@NppGUI
  00662	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00665	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00668	49 8d 96 88 07
	00 00		 lea	 rdx, QWORD PTR [r14+1928]
  0066f	48 8d 8e 88 07
	00 00		 lea	 rcx, QWORD PTR [rsi+1928]
  00676	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0067b	90		 npad	 1
  0067c	41 8b 86 a8 07
	00 00		 mov	 eax, DWORD PTR [r14+1960]
  00683	89 86 a8 07 00
	00		 mov	 DWORD PTR [rsi+1960], eax
  00689	41 0f b6 86 ac
	07 00 00	 movzx	 eax, BYTE PTR [r14+1964]
  00691	88 86 ac 07 00
	00		 mov	 BYTE PTR [rsi+1964], al
  00697	41 0f b6 86 ad
	07 00 00	 movzx	 eax, BYTE PTR [r14+1965]
  0069f	88 86 ad 07 00
	00		 mov	 BYTE PTR [rsi+1965], al
  006a5	49 8b 86 b0 07
	00 00		 mov	 rax, QWORD PTR [r14+1968]
  006ac	48 89 86 b0 07
	00 00		 mov	 QWORD PTR [rsi+1968], rax
  006b3	49 8d 96 b8 07
	00 00		 lea	 rdx, QWORD PTR [r14+1976]
  006ba	48 8d 8e b8 07
	00 00		 lea	 rcx, QWORD PTR [rsi+1976]
  006c1	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  006c6	90		 npad	 1
  006c7	41 0f b6 86 d8
	07 00 00	 movzx	 eax, BYTE PTR [r14+2008]
  006cf	88 86 d8 07 00
	00		 mov	 BYTE PTR [rsi+2008], al
  006d5	41 8b 86 dc 07
	00 00		 mov	 eax, DWORD PTR [r14+2012]
  006dc	89 86 dc 07 00
	00		 mov	 DWORD PTR [rsi+2012], eax
  006e2	49 8d 96 e0 07
	00 00		 lea	 rdx, QWORD PTR [r14+2016]
  006e9	48 8d 8e e0 07
	00 00		 lea	 rcx, QWORD PTR [rsi+2016]
  006f0	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  006f5	90		 npad	 1
  006f6	41 0f b6 86 00
	08 00 00	 movzx	 eax, BYTE PTR [r14+2048]
  006fe	88 86 00 08 00
	00		 mov	 BYTE PTR [rsi+2048], al
  00704	41 0f b6 86 01
	08 00 00	 movzx	 eax, BYTE PTR [r14+2049]
  0070c	88 86 01 08 00
	00		 mov	 BYTE PTR [rsi+2049], al
  00712	41 0f b6 86 02
	08 00 00	 movzx	 eax, BYTE PTR [r14+2050]
  0071a	88 86 02 08 00
	00		 mov	 BYTE PTR [rsi+2050], al
  00720	41 8b 86 03 08
	00 00		 mov	 eax, DWORD PTR [r14+2051]
  00727	89 86 03 08 00
	00		 mov	 DWORD PTR [rsi+2051], eax
  0072d	48 8b c6	 mov	 rax, rsi
  00730	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00734	41 5f		 pop	 r15
  00736	41 5e		 pop	 r14
  00738	41 5c		 pop	 r12
  0073a	5f		 pop	 rdi
  0073b	5e		 pop	 rsi
  0073c	5d		 pop	 rbp
  0073d	5b		 pop	 rbx
  0073e	c3		 ret	 0
$LN42@NppGUI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0073f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00744	90		 npad	 1
$LN147@NppGUI:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  00745	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  0074a	cc		 int	 3
$LN150@NppGUI:
??0NppGUI@@QEAA@AEBU0@@Z ENDP				; NppGUI::NppGUI
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$0@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$0
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$1@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$1
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$13@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$13
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >::~_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >
?dtor$13@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$13
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$14@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$14
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >
?dtor$14@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$14
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$15@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$15
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$15@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$15
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$2@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$2
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
?dtor$2@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$17@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$17
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$17@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$17
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$18@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$18
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$18@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$18
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$19@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$19
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 48	 add	 rcx, 72			; 00000048H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$19@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$19
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$20@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$20
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 68	 add	 rcx, 104		; 00000068H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$20@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$20
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$21@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$21
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$21@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$21
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$22@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$22
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$22@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$22
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$23@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$23
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$23@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$23
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$24@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$24
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$24@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$24
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$3@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$3
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1PrintSettings@@QEAA@XZ
?dtor$3@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$4@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$4
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 20 02
	00 00		 add	 rcx, 544		; 00000220H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$5@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$5
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 40 02
	00 00		 add	 rcx, 576		; 00000240H
  0000e	e9 00 00 00 00	 jmp	 ??1DockingManagerData@@QEAA@XZ
?dtor$5@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$25@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$25
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$25@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$25
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$26@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$26
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$26@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$26
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$6@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$6
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  0000e	e9 00 00 00 00	 jmp	 ??1MatchedPairConf@@QEAA@XZ
?dtor$6@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$7@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$7
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 02
	00 00		 add	 rcx, 752		; 000002f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$8@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$8
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 10 03
	00 00		 add	 rcx, 784		; 00000310H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$9@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$9
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 30 03
	00 00		 add	 rcx, 816		; 00000330H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$9@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$9
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$10@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$10
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 88 07
	00 00		 add	 rcx, 1928		; 00000788H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$11@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$11
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 07
	00 00		 add	 rcx, 1976		; 000007b8H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$11
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$12@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$12
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 e0 07
	00 00		 add	 rcx, 2016		; 000007e0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$12@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$0@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$0
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$1@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$1
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$13@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$13
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >::~_Tidy_guard<std::vector<LangMenuItem,std::allocator<LangMenuItem> > >
?dtor$13@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$14@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$14
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<LangMenuItem> >::~_Uninitialized_backout_al<std::allocator<LangMenuItem> >
?dtor$14@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$15@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$15
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$15@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$2@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$2
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
?dtor$2@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$17@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$17
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$17@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$18@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$18
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$18@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$19@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$19
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 48	 add	 rcx, 72			; 00000048H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$19@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$20@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$20
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 68	 add	 rcx, 104		; 00000068H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$20@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$21@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$21
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$21@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$22@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$22
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$22@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$23@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$23
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$23@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$24@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$24
  00000	48 8b 8a 88 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$24@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$3@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$3
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1PrintSettings@@QEAA@XZ
?dtor$3@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$4@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$4
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 20 02
	00 00		 add	 rcx, 544		; 00000220H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$5@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$5
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 40 02
	00 00		 add	 rcx, 576		; 00000240H
  0000e	e9 00 00 00 00	 jmp	 ??1DockingManagerData@@QEAA@XZ
?dtor$5@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$25@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$25
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$25@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$26@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$26
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$26@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$6@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$6
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  0000e	e9 00 00 00 00	 jmp	 ??1MatchedPairConf@@QEAA@XZ
?dtor$6@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$7@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$7
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 02
	00 00		 add	 rcx, 752		; 000002f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$8@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$8
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 10 03
	00 00		 add	 rcx, 784		; 00000310H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$9@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$9
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 30 03
	00 00		 add	 rcx, 816		; 00000330H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$9@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$10@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$10
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 88 07
	00 00		 add	 rcx, 1928		; 00000788H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$11@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$11
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 07
	00 00		 add	 rcx, 1976		; 000007b8H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
this$ = 128
_Guard$2 = 136
this$ = 136
__that$ = 136
$T3 = 144
this$ = 144
?dtor$12@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA PROC		; `NppGUI::NppGUI'::`1'::dtor$12
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 e0 07
	00 00		 add	 rcx, 2016		; 000007e0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$12@?0???0NppGUI@@QEAA@AEBU0@@Z@4HA ENDP		; `NppGUI::NppGUI'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1NppGUI@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1NppGUI@@QEAA@XZ PROC					; NppGUI::~NppGUI, COMDAT
$LN64:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 81 c1 e0 07
	00 00		 add	 rcx, 2016		; 000007e0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00014	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00019	90		 npad	 1
  0001a	48 8d 8b b8 07
	00 00		 lea	 rcx, QWORD PTR [rbx+1976]
  00021	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00026	90		 npad	 1
  00027	48 8d 8b 88 07
	00 00		 lea	 rcx, QWORD PTR [rbx+1928]
  0002e	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00033	90		 npad	 1
  00034	48 8d 8b 30 03
	00 00		 lea	 rcx, QWORD PTR [rbx+816]
  0003b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00040	90		 npad	 1
  00041	48 8d 8b 10 03
	00 00		 lea	 rcx, QWORD PTR [rbx+784]
  00048	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  0004d	90		 npad	 1
  0004e	48 8d 8b f0 02
	00 00		 lea	 rcx, QWORD PTR [rbx+752]
  00055	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  0005a	90		 npad	 1
  0005b	48 8d 8b b8 02
	00 00		 lea	 rcx, QWORD PTR [rbx+696]
  00062	e8 00 00 00 00	 call	 ??1MatchedPairConf@@QEAA@XZ
  00067	90		 npad	 1
  00068	48 8d 8b 40 02
	00 00		 lea	 rcx, QWORD PTR [rbx+576]
  0006f	e8 00 00 00 00	 call	 ??1DockingManagerData@@QEAA@XZ
  00074	90		 npad	 1
  00075	48 8d 8b 20 02
	00 00		 lea	 rcx, QWORD PTR [rbx+544]
  0007c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00081	90		 npad	 1
  00082	48 8d 8b f0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+240]
  00089	e8 00 00 00 00	 call	 ??1PrintSettings@@QEAA@XZ
  0008e	90		 npad	 1
  0008f	48 8d 8b d0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+208]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 712  :         _Tidy();

  00096	e8 00 00 00 00	 call	 ?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy
  0009b	90		 npad	 1
  0009c	48 8d 8b 98 00
	00 00		 lea	 rcx, QWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  000a3	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  000a8	90		 npad	 1

; 2319 :         return _BUF_SIZE <= _Myres;

  000a9	48 8b 93 88 00
	00 00		 mov	 rdx, QWORD PTR [rbx+136]
  000b0	48 83 fa 10	 cmp	 rdx, 16

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b4	72 2d		 jb	 SHORT $LN56@NppGUI

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4620 :             auto& _Al          = _Getal();
; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b6	48 ff c2	 inc	 rdx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b9	48 8b 4b 70	 mov	 rcx, QWORD PTR [rbx+112]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bd	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000c4	72 18		 jb	 SHORT $LN55@NppGUI

; 155  :     _Bytes += _Non_user_size;

  000c6	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ca	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ce	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d1	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  000d5	48 83 f8 1f	 cmp	 rax, 31
  000d9	77 28		 ja	 SHORT $LN52@NppGUI

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000db	49 8b c8	 mov	 rcx, r8
$LN55@NppGUI:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000de	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN56@NppGUI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  000e3	48 c7 83 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rbx+128], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ee	48 c7 83 88 00
	00 00 0f 00 00
	00		 mov	 QWORD PTR [rbx+136], 15

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000f9	c6 43 70 00	 mov	 BYTE PTR [rbx+112], 0
  000fd	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00101	5b		 pop	 rbx
  00102	c3		 ret	 0
$LN52@NppGUI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00103	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00108	cc		 int	 3
$LN61@NppGUI:
??1NppGUI@@QEAA@XZ ENDP					; NppGUI::~NppGUI
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
?dtor$2@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1PrintSettings@@QEAA@XZ
?dtor$3@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 20 02
	00 00		 add	 rcx, 544		; 00000220H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 40 02
	00 00		 add	 rcx, 576		; 00000240H
  0000e	e9 00 00 00 00	 jmp	 ??1DockingManagerData@@QEAA@XZ
?dtor$5@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  0000e	e9 00 00 00 00	 jmp	 ??1MatchedPairConf@@QEAA@XZ
?dtor$6@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 02
	00 00		 add	 rcx, 752		; 000002f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$8@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$8
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 10 03
	00 00		 add	 rcx, 784		; 00000310H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$9@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$9
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 30 03
	00 00		 add	 rcx, 816		; 00000330H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$9@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$9
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$10@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$10
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 88 07
	00 00		 add	 rcx, 1928		; 00000788H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$11@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$11
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 07
	00 00		 add	 rcx, 1976		; 000007b8H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$11
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$12@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$12
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 e0 07
	00 00		 add	 rcx, 2016		; 000007e0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$12@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
?dtor$2@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1PrintSettings@@QEAA@XZ
?dtor$3@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 20 02
	00 00		 add	 rcx, 544		; 00000220H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 40 02
	00 00		 add	 rcx, 576		; 00000240H
  0000e	e9 00 00 00 00	 jmp	 ??1DockingManagerData@@QEAA@XZ
?dtor$5@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  0000e	e9 00 00 00 00	 jmp	 ??1MatchedPairConf@@QEAA@XZ
?dtor$6@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 02
	00 00		 add	 rcx, 752		; 000002f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$8@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$8
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 10 03
	00 00		 add	 rcx, 784		; 00000310H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$8@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$9@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$9
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 30 03
	00 00		 add	 rcx, 816		; 00000330H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$9@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$10@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$10
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 88 07
	00 00		 add	 rcx, 1928		; 00000788H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$10@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$11@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$11
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b8 07
	00 00		 add	 rcx, 1976		; 000007b8H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$11@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$12@?0???1NppGUI@@QEAA@XZ@4HA PROC			; `NppGUI::~NppGUI'::`1'::dtor$12
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 e0 07
	00 00		 add	 rcx, 2016		; 000007e0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$12@?0???1NppGUI@@QEAA@XZ@4HA ENDP			; `NppGUI::~NppGUI'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN46:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00015	48 85 db	 test	 rbx, rbx
  00018	0f 84 8c 00 00
	00		 je	 $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001e	48 8b 71 08	 mov	 rsi, QWORD PTR [rcx+8]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00022	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00027	48 3b de	 cmp	 rbx, rsi
  0002a	74 1e		 je	 SHORT $LN8@Tidy
  0002c	0f 1f 40 00	 npad	 4
$LL9@Tidy:
  00030	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00034	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00039	48 83 c3 28	 add	 rbx, 40			; 00000028H
  0003d	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00042	48 3b de	 cmp	 rbx, rsi
  00045	75 e9		 jne	 SHORT $LL9@Tidy
  00047	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN8@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004a	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  0004e	48 2b cb	 sub	 rcx, rbx
  00051	48 b8 67 66 66
	66 66 66 66 66	 mov	 rax, 7378697629483820647 ; 6666666666666667H
  0005b	48 f7 e9	 imul	 rcx
  0005e	48 c1 fa 04	 sar	 rdx, 4
  00062	48 8b c2	 mov	 rax, rdx
  00065	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00069	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006c	48 8d 14 92	 lea	 rdx, QWORD PTR [rdx+rdx*4]
  00070	48 c1 e2 03	 shl	 rdx, 3

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00074	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0007b	72 18		 jb	 SHORT $LN35@Tidy

; 155  :     _Bytes += _Non_user_size;

  0007d	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00081	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00085	48 2b d8	 sub	 rbx, rax

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00088	48 83 c3 f8	 add	 rbx, -8
  0008c	48 83 fb 1f	 cmp	 rbx, 31
  00090	77 28		 ja	 SHORT $LN32@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00092	48 8b d8	 mov	 rbx, rax
$LN35@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00095	48 8b cb	 mov	 rcx, rbx
  00098	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0009d	33 c0		 xor	 eax, eax
  0009f	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1768 :             _Mylast  = nullptr;

  000a2	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1769 :             _Myend   = nullptr;

  000a6	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 1771 :     }

  000aa	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000af	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000b4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b8	5f		 pop	 rdi
  000b9	c3		 ret	 0
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ba	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000bf	cc		 int	 3
$LN43@Tidy:
?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >, COMDAT

; 712  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@AEAAXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Tidy
??1?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QEAA@XZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::~vector<LangMenuItem,std::allocator<LangMenuItem> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1MatchedPairConf@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1MatchedPairConf@@QEAA@XZ PROC			; MatchedPairConf::~MatchedPairConf, COMDAT
$LN57:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b d9	 mov	 rbx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00016	33 ff		 xor	 edi, edi
  00018	48 85 c9	 test	 rcx, rcx
  0001b	74 40		 je	 SHORT $LN8@MatchedPai

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0001d	48 8b 43 28	 mov	 rax, QWORD PTR [rbx+40]
  00021	48 2b c1	 sub	 rax, rcx
  00024	48 d1 f8	 sar	 rax, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00027	48 8d 14 00	 lea	 rdx, QWORD PTR [rax+rax]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0002b	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00032	72 18		 jb	 SHORT $LN24@MatchedPai

; 155  :     _Bytes += _Non_user_size;

  00034	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00038	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0003c	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003f	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00043	48 83 f8 1f	 cmp	 rax, 31
  00047	77 65		 ja	 SHORT $LN21@MatchedPai

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00049	49 8b c8	 mov	 rcx, r8
$LN24@MatchedPai:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00051	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 1768 :             _Mylast  = nullptr;

  00055	48 89 7b 20	 mov	 QWORD PTR [rbx+32], rdi

; 1769 :             _Myend   = nullptr;

  00059	48 89 7b 28	 mov	 QWORD PTR [rbx+40], rdi
$LN8@MatchedPai:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00060	48 85 c9	 test	 rcx, rcx
  00063	74 3e		 je	 SHORT $LN33@MatchedPai

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00065	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00069	48 2b d1	 sub	 rdx, rcx
  0006c	48 d1 fa	 sar	 rdx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006f	48 03 d2	 add	 rdx, rdx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00072	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00079	72 18		 jb	 SHORT $LN49@MatchedPai

; 155  :     _Bytes += _Non_user_size;

  0007b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0007f	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00083	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00086	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0008a	48 83 f8 1f	 cmp	 rax, 31
  0008e	77 24		 ja	 SHORT $LN46@MatchedPai

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00090	49 8b c8	 mov	 rcx, r8
$LN49@MatchedPai:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00093	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00098	48 89 3b	 mov	 QWORD PTR [rbx], rdi

; 1768 :             _Mylast  = nullptr;

  0009b	48 89 7b 08	 mov	 QWORD PTR [rbx+8], rdi

; 1769 :             _Myend   = nullptr;

  0009f	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi
$LN33@MatchedPai:
  000a3	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000a8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
$LN21@MatchedPai:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ae	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b3	90		 npad	 1
$LN46@MatchedPai:
  000b4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b9	cc		 int	 3
$LN54@MatchedPai:
??1MatchedPairConf@@QEAA@XZ ENDP			; MatchedPairConf::~MatchedPairConf
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1MatchedPairConf@@QEAA@XZ@4HA PROC		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$0@?0???1MatchedPairConf@@QEAA@XZ@4HA ENDP		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1MatchedPairConf@@QEAA@XZ@4HA PROC		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$1@?0???1MatchedPairConf@@QEAA@XZ@4HA ENDP		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1MatchedPairConf@@QEAA@XZ@4HA PROC		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$0@?0???1MatchedPairConf@@QEAA@XZ@4HA ENDP		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1MatchedPairConf@@QEAA@XZ@4HA PROC		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
?dtor$1@?0???1MatchedPairConf@@QEAA@XZ@4HA ENDP		; `MatchedPairConf::~MatchedPairConf'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 40		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
  00018	48 d1 fa	 sar	 rdx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001b	48 03 d2	 add	 rdx, rdx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00025	72 18		 jb	 SHORT $LN18@Tidy

; 155  :     _Bytes += _Non_user_size;

  00027	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002b	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002f	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00032	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00036	48 83 f8 1f	 cmp	 rax, 31
  0003a	77 1b		 ja	 SHORT $LN15@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003c	49 8b c8	 mov	 rcx, r8
$LN18@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00044	33 c0		 xor	 eax, eax
  00046	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00049	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004d	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1771 :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5b		 pop	 rbx
  00056	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN22@Tidy:
?_Tidy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 40		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
  00018	48 d1 fa	 sar	 rdx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001b	48 03 d2	 add	 rdx, rdx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00025	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00027	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002b	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002f	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00032	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00036	48 83 f8 1f	 cmp	 rax, 31
  0003a	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003c	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00044	33 c0		 xor	 eax, eax
  00046	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00049	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004d	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5b		 pop	 rbx
  00056	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN25@vector:
??1?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::~vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Guard$2 = 64
this$ = 64
_Right$ = 72
??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >, COMDAT

; 555  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN63:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b f9	 mov	 rdi, rcx

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00015	33 ed		 xor	 ebp, ebp
  00017	48 89 29	 mov	 QWORD PTR [rcx], rbp
  0001a	48 89 69 08	 mov	 QWORD PTR [rcx+8], rbp
  0001e	48 89 69 10	 mov	 QWORD PTR [rcx+16], rbp

; 556  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 557  :         auto& _My_data            = _Mypair._Myval2;
; 558  :         const auto& _Right_data   = _Right._Mypair._Myval2;
; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00022	48 8b 1a	 mov	 rbx, QWORD PTR [rdx]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00025	48 8b 72 08	 mov	 rsi, QWORD PTR [rdx+8]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  00029	48 3b de	 cmp	 rbx, rsi
  0002c	0f 84 9a 00 00
	00		 je	 $LN53@vector

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00032	4c 8b f6	 mov	 r14, rsi
  00035	4c 2b f3	 sub	 r14, rbx
  00038	49 d1 fe	 sar	 r14, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0003b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00045	4c 3b f0	 cmp	 r14, rax
  00048	0f 87 9a 00 00
	00		 ja	 $LN59@vector

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  0004e	4d 03 f6	 add	 r14, r14

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00051	49 81 fe 00 10
	00 00		 cmp	 r14, 4096		; 00001000H
  00058	72 28		 jb	 SHORT $LN18@vector

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0005a	49 8d 4e 27	 lea	 rcx, QWORD PTR [r14+39]

; 137  :     if (_Block_size <= _Bytes) {

  0005e	49 3b ce	 cmp	 rcx, r14
  00061	0f 86 81 00 00
	00		 jbe	 $LN59@vector

; 85   :         return ::operator new(_Bytes);

  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0006c	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0006f	48 85 c0	 test	 rax, rax
  00072	74 6e		 je	 SHORT $LN27@vector

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00074	48 83 c0 27	 add	 rax, 39			; 00000027H
  00078	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  0007c	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00080	eb 12		 jmp	 SHORT $LN17@vector
$LN18@vector:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00082	4d 85 f6	 test	 r14, r14
  00085	74 0a		 je	 SHORT $LN19@vector

; 85   :         return ::operator new(_Bytes);

  00087	49 8b ce	 mov	 rcx, r14
  0008a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  0008f	eb 03		 jmp	 SHORT $LN17@vector
$LN19@vector:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00091	48 8b c5	 mov	 rax, rbp
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  00094	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1713 :         _Mylast            = _Newvec;

  00097	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  0009b	49 03 c6	 add	 rax, r14
  0009e	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  000a2	48 89 7c 24 40	 mov	 QWORD PTR _Guard$2[rsp], rdi

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000a7	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000aa	66 0f 1f 44 00
	00		 npad	 6
$LL44@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1611 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000b0	0f b7 03	 movzx	 eax, WORD PTR [rbx]
  000b3	66 89 01	 mov	 WORD PTR [rcx], ax

; 1612 :         ++_Last;

  000b6	48 83 c1 02	 add	 rcx, 2

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ba	48 83 c3 02	 add	 rbx, 2
  000be	48 3b de	 cmp	 rbx, rsi
  000c1	75 ed		 jne	 SHORT $LL44@vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000c3	48 89 4f 08	 mov	 QWORD PTR [rdi+8], rcx

; 566  :             _Guard._Target   = nullptr;

  000c7	48 89 6c 24 40	 mov	 QWORD PTR _Guard$2[rsp], rbp
$LN53@vector:

; 570  :     }

  000cc	48 8b c7	 mov	 rax, rdi
  000cf	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000d4	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  000d9	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000dd	41 5e		 pop	 r14
  000df	5f		 pop	 rdi
  000e0	5e		 pop	 rsi
  000e1	c3		 ret	 0
$LN27@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000e2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000e7	cc		 int	 3
$LN59@vector:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  000e8	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  000ed	cc		 int	 3
$LN60@vector:
??0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Guard$2 = 64
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::~_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >
?dtor$0@?0???0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Guard$2 = 64
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::~_Tidy_guard<std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > > >
?dtor$0@?0???0?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEB_W@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEB_W@Z PROC ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  00000	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00007	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL32@operator:
  00010	48 ff c0	 inc	 rax
  00013	66 83 3c 42 00	 cmp	 WORD PTR [rdx+rax*2], 0
  00018	75 f6		 jne	 SHORT $LL32@operator

; 2319 :         return _BUF_SIZE <= _Myres;

  0001a	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 2305 :         const value_type* _Result = _Bx._Buf;

  0001f	4c 8b c1	 mov	 r8, rcx

; 2306 :         if (_Large_string_engaged()) {

  00022	72 03		 jb	 SHORT $LN10@operator

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00024	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
$LN10@operator:

; 4378 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00027	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]

; 583  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0002b	48 3b c8	 cmp	 rcx, rax
  0002e	75 27		 jne	 SHORT $LN16@operator
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  00030	48 85 c9	 test	 rcx, rcx
  00033	74 1f		 je	 SHORT $LN31@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 256  :         return _CSTD wmemcmp(

  00035	4c 2b c2	 sub	 r8, rdx
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL23@operator:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\wchar.h

; 220  :             if (*_S1 != *_S2)

  00040	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00043	66 41 39 04 10	 cmp	 WORD PTR [r8+rdx], ax
  00048	75 0d		 jne	 SHORT $LN16@operator

; 219  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  0004a	48 83 c2 02	 add	 rdx, 2
  0004e	48 83 e9 01	 sub	 rcx, 1
  00052	75 ec		 jne	 SHORT $LL23@operator
$LN31@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4837 :     return !(_Left == _Right);

  00054	32 c0		 xor	 al, al

; 4838 : }

  00056	c3		 ret	 0
$LN16@operator:

; 4837 :     return !(_Left == _Right);

  00057	b0 01		 mov	 al, 1

; 4838 : }

  00059	c3		 ret	 0
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEB_W@Z ENDP ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1PrintSettings@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1PrintSettings@@QEAA@XZ PROC				; PrintSettings::~PrintSettings, COMDAT
$LN29:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H

; 3003 :         _Tidy_deallocate();

  00014	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00019	90		 npad	 1
  0001a	48 8d 8b d0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+208]
  00021	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00026	90		 npad	 1
  00027	48 8d 8b b0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+176]
  0002e	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00033	90		 npad	 1
  00034	48 8d 8b 90 00
	00 00		 lea	 rcx, QWORD PTR [rbx+144]
  0003b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00040	90		 npad	 1
  00041	48 8d 4b 68	 lea	 rcx, QWORD PTR [rbx+104]
  00045	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  0004a	90		 npad	 1
  0004b	48 8d 4b 48	 lea	 rcx, QWORD PTR [rbx+72]
  0004f	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00054	90		 npad	 1
  00055	48 8d 4b 28	 lea	 rcx, QWORD PTR [rbx+40]
  00059	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  0005e	90		 npad	 1
  0005f	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5b		 pop	 rbx
  00068	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1PrintSettings@@QEAA@XZ ENDP				; PrintSettings::~PrintSettings
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 48	 add	 rcx, 72			; 00000048H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 68	 add	 rcx, 104		; 00000068H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$6@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 48	 add	 rcx, 72			; 00000048H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 68	 add	 rcx, 104		; 00000068H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$3@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$5
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$5@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$6
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 d0 00
	00 00		 add	 rcx, 208		; 000000d0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$6@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1PrintSettings@@QEAA@XZ@4HA PROC		; `PrintSettings::~PrintSettings'::`1'::dtor$7
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$7@?0???1PrintSettings@@QEAA@XZ@4HA ENDP		; `PrintSettings::~PrintSettings'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0DockingManagerData@@QEAA@AEBU0@@Z
_TEXT	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
??0DockingManagerData@@QEAA@AEBU0@@Z PROC		; DockingManagerData::DockingManagerData, COMDAT
$LN247:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	55		 push	 rbp
  00007	56		 push	 rsi
  00008	57		 push	 rdi
  00009	41 54		 push	 r12
  0000b	41 56		 push	 r14
  0000d	41 57		 push	 r15
  0000f	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00013	4c 8b f2	 mov	 r14, rdx
  00016	4c 8b f9	 mov	 r15, rcx
  00019	8b 02		 mov	 eax, DWORD PTR [rdx]
  0001b	89 01		 mov	 DWORD PTR [rcx], eax
  0001d	8b 42 04	 mov	 eax, DWORD PTR [rdx+4]
  00020	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00023	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  00026	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00029	8b 42 0c	 mov	 eax, DWORD PTR [rdx+12]
  0002c	89 41 0c	 mov	 DWORD PTR [rcx+12], eax
  0002f	48 8d 79 10	 lea	 rdi, QWORD PTR [rcx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00033	45 33 e4	 xor	 r12d, r12d
  00036	4c 89 27	 mov	 QWORD PTR [rdi], r12
  00039	4c 89 67 08	 mov	 QWORD PTR [rdi+8], r12
  0003d	4c 89 67 10	 mov	 QWORD PTR [rdi+16], r12

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00041	48 8b 5a 10	 mov	 rbx, QWORD PTR [rdx+16]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00045	48 8b 6a 18	 mov	 rbp, QWORD PTR [rdx+24]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  00049	48 3b dd	 cmp	 rbx, rbp
  0004c	0f 84 d3 00 00
	00		 je	 $LN60@DockingMan

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00052	48 8b cd	 mov	 rcx, rbp
  00055	48 2b cb	 sub	 rcx, rbx
  00058	48 b8 67 66 66
	66 66 66 66 66	 mov	 rax, 7378697629483820647 ; 6666666666666667H
  00062	48 f7 e9	 imul	 rcx
  00065	48 c1 fa 03	 sar	 rdx, 3
  00069	48 8b c2	 mov	 rax, rdx
  0006c	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00070	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00073	48 b8 cc cc cc
	cc cc cc cc 0c	 mov	 rax, 922337203685477580	; 0cccccccccccccccH
  0007d	48 3b d0	 cmp	 rdx, rax
  00080	0f 87 bd 02 00
	00		 ja	 $LN243@DockingMan

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00086	48 8d 04 92	 lea	 rax, QWORD PTR [rdx+rdx*4]
  0008a	48 8d 34 85 00
	00 00 00	 lea	 rsi, QWORD PTR [rax*4]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	48 81 fe 00 10
	00 00		 cmp	 rsi, 4096		; 00001000H
  00099	72 2c		 jb	 SHORT $LN23@DockingMan

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0009b	48 8d 4e 27	 lea	 rcx, QWORD PTR [rsi+39]

; 137  :     if (_Block_size <= _Bytes) {

  0009f	48 3b ce	 cmp	 rcx, rsi
  000a2	0f 86 9b 02 00
	00		 jbe	 $LN243@DockingMan

; 85   :         return ::operator new(_Bytes);

  000a8	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000ad	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000b0	48 85 c0	 test	 rax, rax
  000b3	0f 84 84 02 00
	00		 je	 $LN32@DockingMan

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000b9	48 83 c0 27	 add	 rax, 39			; 00000027H
  000bd	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000c1	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c5	eb 12		 jmp	 SHORT $LN22@DockingMan
$LN23@DockingMan:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000c7	48 85 f6	 test	 rsi, rsi
  000ca	74 0a		 je	 SHORT $LN24@DockingMan

; 85   :         return ::operator new(_Bytes);

  000cc	48 8b ce	 mov	 rcx, rsi
  000cf	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000d4	eb 03		 jmp	 SHORT $LN22@DockingMan
$LN24@DockingMan:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000d6	49 8b c4	 mov	 rax, r12
$LN22@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  000d9	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1713 :         _Mylast            = _Newvec;

  000dc	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  000e0	48 03 c6	 add	 rax, rsi
  000e3	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  000e7	48 89 bc 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000ef	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000f2	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL49@DockingMan:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00100	0f 10 03	 movups	 xmm0, XMMWORD PTR [rbx]
  00103	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
  00106	8b 43 10	 mov	 eax, DWORD PTR [rbx+16]
  00109	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 1612 :         ++_Last;

  0010c	48 83 c1 14	 add	 rcx, 20
  00110	48 83 c3 14	 add	 rbx, 20

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  00114	48 3b dd	 cmp	 rbx, rbp
  00117	75 e7		 jne	 SHORT $LL49@DockingMan
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  00119	48 89 4f 08	 mov	 QWORD PTR [rdi+8], rcx

; 566  :             _Guard._Target   = nullptr;

  0011d	4c 89 a4 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], r12
$LN60@DockingMan:
  00125	49 8d 77 28	 lea	 rsi, QWORD PTR [r15+40]

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00129	4c 89 26	 mov	 QWORD PTR [rsi], r12
  0012c	4c 89 66 08	 mov	 QWORD PTR [rsi+8], r12
  00130	4c 89 66 10	 mov	 QWORD PTR [rsi+16], r12

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00134	49 8b 7e 28	 mov	 rdi, QWORD PTR [r14+40]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00138	49 8b 6e 30	 mov	 rbp, QWORD PTR [r14+48]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  0013c	48 3b fd	 cmp	 rdi, rbp
  0013f	0f 84 0f 01 00
	00		 je	 $LN169@DockingMan

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00145	48 8b cd	 mov	 rcx, rbp
  00148	48 2b cf	 sub	 rcx, rdi
  0014b	48 b8 ab aa aa
	aa aa aa aa 2a	 mov	 rax, 3074457345618258603 ; 2aaaaaaaaaaaaaabH
  00155	48 f7 e9	 imul	 rcx
  00158	48 c1 fa 03	 sar	 rdx, 3
  0015c	48 8b c2	 mov	 rax, rdx
  0015f	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00163	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00166	48 b8 55 55 55
	55 55 55 55 05	 mov	 rax, 384307168202282325	; 0555555555555555H
  00170	48 3b d0	 cmp	 rdx, rax
  00173	0f 87 d6 01 00
	00		 ja	 $LN242@DockingMan

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00179	48 8d 1c 52	 lea	 rbx, QWORD PTR [rdx+rdx*2]
  0017d	48 c1 e3 04	 shl	 rbx, 4

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00181	48 81 fb 00 10
	00 00		 cmp	 rbx, 4096		; 00001000H
  00188	72 2c		 jb	 SHORT $LN80@DockingMan

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0018a	48 8d 4b 27	 lea	 rcx, QWORD PTR [rbx+39]

; 137  :     if (_Block_size <= _Bytes) {

  0018e	48 3b cb	 cmp	 rcx, rbx
  00191	0f 86 b8 01 00
	00		 jbe	 $LN242@DockingMan

; 85   :         return ::operator new(_Bytes);

  00197	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0019c	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0019f	48 85 c0	 test	 rax, rax
  001a2	0f 84 a1 01 00
	00		 je	 $LN89@DockingMan

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  001a8	48 83 c0 27	 add	 rax, 39			; 00000027H
  001ac	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  001b0	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001b4	eb 12		 jmp	 SHORT $LN79@DockingMan
$LN80@DockingMan:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  001b6	48 85 db	 test	 rbx, rbx
  001b9	74 0a		 je	 SHORT $LN81@DockingMan

; 85   :         return ::operator new(_Bytes);

  001bb	48 8b cb	 mov	 rcx, rbx
  001be	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  001c3	eb 03		 jmp	 SHORT $LN79@DockingMan
$LN81@DockingMan:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  001c5	49 8b c4	 mov	 rax, r12
$LN79@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  001c8	48 89 06	 mov	 QWORD PTR [rsi], rax

; 1713 :         _Mylast            = _Newvec;

  001cb	48 89 46 08	 mov	 QWORD PTR [rsi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  001cf	48 03 c3	 add	 rax, rbx
  001d2	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  001d6	48 89 b4 24 88
	00 00 00	 mov	 QWORD PTR _Guard$5[rsp], rsi

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  001de	48 8b 1e	 mov	 rbx, QWORD PTR [rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  001e1	48 89 5c 24 20	 mov	 QWORD PTR _Backout$3[rsp], rbx
  001e6	48 89 5c 24 28	 mov	 QWORD PTR _Backout$3[rsp+8], rbx
  001eb	48 89 74 24 30	 mov	 QWORD PTR _Backout$3[rsp+16], rsi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  001f0	48 83 c7 24	 add	 rdi, 36			; 00000024H
  001f4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL106@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00200	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR $T7[rsp], rbx
  00208	48 8d 57 dc	 lea	 rdx, QWORD PTR [rdi-36]
  0020c	48 8b cb	 mov	 rcx, rbx
  0020f	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00214	90		 npad	 1
  00215	8b 47 fc	 mov	 eax, DWORD PTR [rdi-4]
  00218	89 43 20	 mov	 DWORD PTR [rbx+32], eax
  0021b	8b 07		 mov	 eax, DWORD PTR [rdi]
  0021d	89 43 24	 mov	 DWORD PTR [rbx+36], eax
  00220	8b 47 04	 mov	 eax, DWORD PTR [rdi+4]
  00223	89 43 28	 mov	 DWORD PTR [rbx+40], eax
  00226	0f b6 47 08	 movzx	 eax, BYTE PTR [rdi+8]
  0022a	88 43 2c	 mov	 BYTE PTR [rbx+44], al

; 1612 :         ++_Last;

  0022d	48 83 c3 30	 add	 rbx, 48			; 00000030H
  00231	48 89 5c 24 28	 mov	 QWORD PTR _Backout$3[rsp+8], rbx

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  00236	48 8d 7f 30	 lea	 rdi, QWORD PTR [rdi+48]
  0023a	48 8d 47 dc	 lea	 rax, QWORD PTR [rdi-36]
  0023e	48 3b c5	 cmp	 rax, rbp
  00241	75 bd		 jne	 SHORT $LL106@DockingMan

; 1616 :         _First = _Last;

  00243	48 89 5c 24 20	 mov	 QWORD PTR _Backout$3[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  00248	48 89 5e 08	 mov	 QWORD PTR [rsi+8], rbx

; 566  :             _Guard._Target   = nullptr;

  0024c	4c 89 a4 24 88
	00 00 00	 mov	 QWORD PTR _Guard$5[rsp], r12
$LN169@DockingMan:
  00254	49 8d 7f 40	 lea	 rdi, QWORD PTR [r15+64]

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00258	4c 89 27	 mov	 QWORD PTR [rdi], r12
  0025b	4c 89 67 08	 mov	 QWORD PTR [rdi+8], r12
  0025f	4c 89 67 10	 mov	 QWORD PTR [rdi+16], r12

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00263	49 8b 5e 40	 mov	 rbx, QWORD PTR [r14+64]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00267	49 8b 76 48	 mov	 rsi, QWORD PTR [r14+72]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  0026b	48 3b de	 cmp	 rbx, rsi
  0026e	0f 84 ab 00 00
	00		 je	 $LN223@DockingMan

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00274	4c 8b f6	 mov	 r14, rsi
  00277	4c 2b f3	 sub	 r14, rbx
  0027a	49 c1 fe 03	 sar	 r14, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0027e	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00288	4c 3b f0	 cmp	 r14, rax
  0028b	0f 87 a6 00 00
	00		 ja	 $LN241@DockingMan

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00291	4e 8d 34 f5 00
	00 00 00	 lea	 r14, QWORD PTR [r14*8]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00299	49 81 fe 00 10
	00 00		 cmp	 r14, 4096		; 00001000H
  002a0	72 28		 jb	 SHORT $LN188@DockingMan

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  002a2	49 8d 4e 27	 lea	 rcx, QWORD PTR [r14+39]

; 137  :     if (_Block_size <= _Bytes) {

  002a6	49 3b ce	 cmp	 rcx, r14
  002a9	0f 86 88 00 00
	00		 jbe	 $LN241@DockingMan

; 85   :         return ::operator new(_Bytes);

  002af	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  002b4	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  002b7	48 85 c0	 test	 rax, rax
  002ba	74 75		 je	 SHORT $LN197@DockingMan

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  002bc	48 83 c0 27	 add	 rax, 39			; 00000027H
  002c0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  002c4	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  002c8	eb 12		 jmp	 SHORT $LN187@DockingMan
$LN188@DockingMan:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  002ca	4d 85 f6	 test	 r14, r14
  002cd	74 0a		 je	 SHORT $LN189@DockingMan

; 85   :         return ::operator new(_Bytes);

  002cf	49 8b ce	 mov	 rcx, r14
  002d2	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  002d7	eb 03		 jmp	 SHORT $LN187@DockingMan
$LN189@DockingMan:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  002d9	49 8b c4	 mov	 rax, r12
$LN187@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1712 :         _Myfirst           = _Newvec;

  002dc	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1713 :         _Mylast            = _Newvec;

  002df	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  002e3	49 03 c6	 add	 rax, r14
  002e6	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 564  :             _Tidy_guard<vector> _Guard{this};

  002ea	48 89 bc 24 88
	00 00 00	 mov	 QWORD PTR _Guard$4[rsp], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  002f2	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  002f5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL214@DockingMan:

; 1611 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00300	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00303	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1612 :         ++_Last;

  00306	48 83 c1 08	 add	 rcx, 8
  0030a	48 83 c3 08	 add	 rbx, 8

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  0030e	48 3b de	 cmp	 rbx, rsi
  00311	75 ed		 jne	 SHORT $LL214@DockingMan
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  00313	48 89 4f 08	 mov	 QWORD PTR [rdi+8], rcx

; 566  :             _Guard._Target   = nullptr;

  00317	4c 89 a4 24 88
	00 00 00	 mov	 QWORD PTR _Guard$4[rsp], r12
$LN223@DockingMan:
  0031f	49 8b c7	 mov	 rax, r15
  00322	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00326	41 5f		 pop	 r15
  00328	41 5e		 pop	 r14
  0032a	41 5c		 pop	 r12
  0032c	5f		 pop	 rdi
  0032d	5e		 pop	 rsi
  0032e	5d		 pop	 rbp
  0032f	5b		 pop	 rbx
  00330	c3		 ret	 0
$LN197@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00331	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00336	90		 npad	 1
$LN241@DockingMan:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  00337	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  0033c	90		 npad	 1
$LN32@DockingMan:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0033d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00342	cc		 int	 3
$LN243@DockingMan:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  00343	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00348	90		 npad	 1
$LN89@DockingMan:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00349	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0034e	cc		 int	 3
$LN242@DockingMan:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0034f	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00354	cc		 int	 3
$LN244@DockingMan:
??0DockingManagerData@@QEAA@AEBU0@@Z ENDP		; DockingManagerData::DockingManagerData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$3@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$3
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >::~_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >
?dtor$3@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$0@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$0
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
?dtor$0@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$4@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$4
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >::~_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >
?dtor$4@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$5@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$5
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >
?dtor$5@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$6@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$6
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR $T7[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$6@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$1@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$1
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
?dtor$1@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$8@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$8
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >::~_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >
?dtor$8@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$2@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$2
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
?dtor$2@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$3@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$3
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >::~_Tidy_guard<std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> > >
?dtor$3@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$0@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$0
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
?dtor$0@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$4@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$4
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >::~_Tidy_guard<std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> > >
?dtor$4@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$5@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$5
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$3[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >::~_Uninitialized_backout_al<std::allocator<PluginDlgDockingInfo> >
?dtor$5@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$6@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$6
  00000	48 8b 8a 90 00
	00 00		 mov	 rcx, QWORD PTR $T7[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$6@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$1@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$1
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
?dtor$1@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$8@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$8
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >::~_Tidy_guard<std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> > >
?dtor$8@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$3 = 32
this$ = 128
_Guard$4 = 136
_Guard$5 = 136
_Guard$6 = 136
__that$ = 136
$T7 = 144
?dtor$2@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA PROC ; `DockingManagerData::DockingManagerData'::`1'::dtor$2
  00000	48 8b 8a 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
?dtor$2@?0???0DockingManagerData@@QEAA@AEBU0@@Z@4HA ENDP ; `DockingManagerData::DockingManagerData'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1DockingManagerData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1DockingManagerData@@QEAA@XZ PROC			; DockingManagerData::~DockingManagerData, COMDAT
$LN38:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0000d	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 47		 je	 SHORT $LN9@DockingMan

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00016	48 8b 43 50	 mov	 rax, QWORD PTR [rbx+80]
  0001a	48 2b c1	 sub	 rax, rcx
  0001d	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00021	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00029	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00030	72 18		 jb	 SHORT $LN25@DockingMan

; 155  :     _Bytes += _Non_user_size;

  00032	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00036	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0003a	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003d	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00041	48 83 f8 1f	 cmp	 rax, 31
  00045	77 2e		 ja	 SHORT $LN22@DockingMan

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00047	49 8b c8	 mov	 rcx, r8
$LN25@DockingMan:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0004f	33 c0		 xor	 eax, eax
  00051	48 89 43 40	 mov	 QWORD PTR [rbx+64], rax

; 1768 :             _Mylast  = nullptr;

  00055	48 89 43 48	 mov	 QWORD PTR [rbx+72], rax

; 1769 :             _Myend   = nullptr;

  00059	48 89 43 50	 mov	 QWORD PTR [rbx+80], rax
$LN9@DockingMan:
  0005d	48 8d 4b 28	 lea	 rcx, QWORD PTR [rbx+40]

; 712  :         _Tidy();

  00061	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy
  00066	90		 npad	 1
  00067	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5b		 pop	 rbx
  00070	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy
$LN22@DockingMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN35@DockingMan:
??1DockingManagerData@@QEAA@XZ ENDP			; DockingManagerData::~DockingManagerData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
?dtor$0@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
?dtor$1@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
?dtor$2@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
?dtor$0@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
?dtor$1@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1DockingManagerData@@QEAA@XZ@4HA PROC	; `DockingManagerData::~DockingManagerData'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
?dtor$2@?0???1DockingManagerData@@QEAA@XZ@4HA ENDP	; `DockingManagerData::~DockingManagerData'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ PROC ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN18@Tidy

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN15@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN18@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1771 :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN22@Tidy:
?_Tidy@?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@AEAAXXZ ENDP ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ PROC ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@UContainerTabInfo@@V?$allocator@UContainerTabInfo@@@std@@@std@@QEAA@XZ ENDP ; std::vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >::~vector<ContainerTabInfo,std::allocator<ContainerTabInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ PROC ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN46:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00015	48 85 db	 test	 rbx, rbx
  00018	0f 84 8b 00 00
	00		 je	 $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001e	48 8b 71 08	 mov	 rsi, QWORD PTR [rcx+8]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00022	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00027	48 3b de	 cmp	 rbx, rsi
  0002a	74 1d		 je	 SHORT $LN8@Tidy
  0002c	0f 1f 40 00	 npad	 4
$LL9@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00030	48 8b cb	 mov	 rcx, rbx
  00033	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00038	48 83 c3 30	 add	 rbx, 48			; 00000030H
  0003c	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00041	48 3b de	 cmp	 rbx, rsi
  00044	75 ea		 jne	 SHORT $LL9@Tidy
  00046	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN8@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00049	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  0004d	48 2b cb	 sub	 rcx, rbx
  00050	48 b8 ab aa aa
	aa aa aa aa 2a	 mov	 rax, 3074457345618258603 ; 2aaaaaaaaaaaaaabH
  0005a	48 f7 e9	 imul	 rcx
  0005d	48 c1 fa 03	 sar	 rdx, 3
  00061	48 8b c2	 mov	 rax, rdx
  00064	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00068	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006b	48 8d 14 52	 lea	 rdx, QWORD PTR [rdx+rdx*2]
  0006f	48 c1 e2 04	 shl	 rdx, 4

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0007a	72 18		 jb	 SHORT $LN35@Tidy

; 155  :     _Bytes += _Non_user_size;

  0007c	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00080	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00084	48 2b d8	 sub	 rbx, rax

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00087	48 83 c3 f8	 add	 rbx, -8
  0008b	48 83 fb 1f	 cmp	 rbx, 31
  0008f	77 28		 ja	 SHORT $LN32@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00091	48 8b d8	 mov	 rbx, rax
$LN35@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00094	48 8b cb	 mov	 rcx, rbx
  00097	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0009c	33 c0		 xor	 eax, eax
  0009e	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1768 :             _Mylast  = nullptr;

  000a1	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1769 :             _Myend   = nullptr;

  000a5	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 1771 :     }

  000a9	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000ae	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000b3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b9	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000be	cc		 int	 3
$LN43@Tidy:
?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ PROC ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >, COMDAT

; 712  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@AEAAXXZ ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::_Tidy
??1?$vector@UPluginDlgDockingInfo@@V?$allocator@UPluginDlgDockingInfo@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >::~vector<PluginDlgDockingInfo,std::allocator<PluginDlgDockingInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ PROC ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 5d		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
  00018	48 b8 67 66 66
	66 66 66 66 66	 mov	 rax, 7378697629483820647 ; 6666666666666667H
  00022	48 f7 ea	 imul	 rdx
  00025	48 c1 fa 03	 sar	 rdx, 3
  00029	48 8b c2	 mov	 rax, rdx
  0002c	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00030	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	48 8d 14 92	 lea	 rdx, QWORD PTR [rdx+rdx*4]
  00037	48 c1 e2 02	 shl	 rdx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003b	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00042	72 18		 jb	 SHORT $LN18@Tidy

; 155  :     _Bytes += _Non_user_size;

  00044	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00048	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004f	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00053	48 83 f8 1f	 cmp	 rax, 31
  00057	77 1b		 ja	 SHORT $LN15@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00059	49 8b c8	 mov	 rcx, r8
$LN18@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0005c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00061	33 c0		 xor	 eax, eax
  00063	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00066	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0006a	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1771 :     }

  0006e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00072	5b		 pop	 rbx
  00073	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN22@Tidy:
?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ ENDP ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ PROC ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >, COMDAT

; 712  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@AEAAXXZ ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::_Tidy
??1?$vector@UFloatingWindowInfo@@V?$allocator@UFloatingWindowInfo@@@std@@@std@@QEAA@XZ ENDP ; std::vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >::~vector<FloatingWindowInfo,std::allocator<FloatingWindowInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1Session@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Session@@QEAA@XZ PROC				; Session::~Session, COMDAT
$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 83 c1 70	 add	 rcx, 112		; 00000070H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 712  :         _Tidy();

  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
  00016	90		 npad	 1
  00017	48 8d 4b 58	 lea	 rcx, QWORD PTR [rbx+88]
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  00020	90		 npad	 1
  00021	48 8d 4b 40	 lea	 rcx, QWORD PTR [rbx+64]
  00025	e8 00 00 00 00	 call	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
  0002a	90		 npad	 1
  0002b	48 8d 4b 20	 lea	 rcx, QWORD PTR [rbx+32]
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5b		 pop	 rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00034	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1Session@@QEAA@XZ ENDP				; Session::~Session
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$1@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$2@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$3@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$1@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
?dtor$2@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1Session@@QEAA@XZ@4HA PROC			; `Session::~Session'::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$3@?0???1Session@@QEAA@XZ@4HA ENDP			; `Session::~Session'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN43:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00015	48 85 db	 test	 rbx, rbx
  00018	74 5e		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001a	48 8b 71 08	 mov	 rsi, QWORD PTR [rcx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0001e	48 3b de	 cmp	 rbx, rsi
  00021	74 14		 je	 SHORT $LN8@Tidy
$LL9@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00023	48 8b cb	 mov	 rcx, rbx
  00026	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0002b	48 83 c3 20	 add	 rbx, 32			; 00000020H
  0002f	48 3b de	 cmp	 rbx, rsi
  00032	75 ef		 jne	 SHORT $LL9@Tidy
  00034	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN8@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00037	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  0003b	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003e	48 83 e2 e0	 and	 rdx, -32		; ffffffffffffffe0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00042	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00049	72 18		 jb	 SHORT $LN32@Tidy

; 155  :     _Bytes += _Non_user_size;

  0004b	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0004f	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00053	48 2b d8	 sub	 rbx, rax

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00056	48 83 c3 f8	 add	 rbx, -8
  0005a	48 83 fb 1f	 cmp	 rbx, 31
  0005e	77 28		 ja	 SHORT $LN29@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	48 8b d8	 mov	 rbx, rax
$LN32@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00063	48 8b cb	 mov	 rcx, rbx
  00066	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0006b	33 c0		 xor	 eax, eax
  0006d	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1768 :             _Mylast  = nullptr;

  00070	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1769 :             _Myend   = nullptr;

  00074	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 1771 :     }

  00078	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007d	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00082	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
$LN29@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00088	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008d	cc		 int	 3
$LN40@Tidy:
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 712  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ PROC ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN41:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00015	48 85 db	 test	 rbx, rbx
  00018	0f 84 8d 00 00
	00		 je	 $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001e	48 8b 71 08	 mov	 rsi, QWORD PTR [rcx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00022	48 3b de	 cmp	 rbx, rsi
  00025	74 22		 je	 SHORT $LN10@vector
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL11@vector:

; 723  :         _Ptr->~_Uty();

  00030	33 d2		 xor	 edx, edx
  00032	48 8b cb	 mov	 rcx, rbx
  00035	e8 00 00 00 00	 call	 ??_GsessionFileInfo@@QEAAPEAXI@Z

; 949  :         for (; _First != _Last; ++_First) {

  0003a	48 81 c3 f8 00
	00 00		 add	 rbx, 248		; 000000f8H
  00041	48 3b de	 cmp	 rbx, rsi
  00044	75 ea		 jne	 SHORT $LL11@vector
  00046	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN10@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00049	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  0004d	48 2b cb	 sub	 rcx, rbx
  00050	48 b8 09 21 84
	10 42 08 21 84	 mov	 rax, -8925843906633654007 ; 8421084210842109H
  0005a	48 f7 e9	 imul	 rcx
  0005d	48 03 d1	 add	 rdx, rcx
  00060	48 c1 fa 07	 sar	 rdx, 7
  00064	48 8b c2	 mov	 rax, rdx
  00067	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  0006b	48 03 d0	 add	 rdx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006e	48 69 d2 f8 00
	00 00		 imul	 rdx, rdx, 248		; 000000f8H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00075	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0007c	72 18		 jb	 SHORT $LN29@vector

; 155  :     _Bytes += _Non_user_size;

  0007e	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00082	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00086	48 2b d8	 sub	 rbx, rax

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00089	48 83 c3 f8	 add	 rbx, -8
  0008d	48 83 fb 1f	 cmp	 rbx, 31
  00091	77 28		 ja	 SHORT $LN26@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00093	48 8b d8	 mov	 rbx, rax
$LN29@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00096	48 8b cb	 mov	 rcx, rbx
  00099	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0009e	33 c0		 xor	 eax, eax
  000a0	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1768 :             _Mylast  = nullptr;

  000a3	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1769 :             _Myend   = nullptr;

  000a7	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN4@vector:

; 717  :     }

  000ab	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b0	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000b5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
$LN26@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000bb	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c0	cc		 int	 3
$LN38@vector:
??1?$vector@UsessionFileInfo@@V?$allocator@UsessionFileInfo@@@std@@@std@@QEAA@XZ ENDP ; std::vector<sessionFileInfo,std::allocator<sessionFileInfo> >::~vector<sessionFileInfo,std::allocator<sessionFileInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??_GsessionFileInfo@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GsessionFileInfo@@QEAAPEAXI@Z PROC			; sessionFileInfo::`scalar deleting destructor', COMDAT
$LN70:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	8b fa		 mov	 edi, edx
  00016	48 8b d9	 mov	 rbx, rcx
  00019	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00020	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00025	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00026	48 8b 4b 78	 mov	 rcx, QWORD PTR [rbx+120]
  0002a	33 f6		 xor	 esi, esi
  0002c	48 85 c9	 test	 rcx, rcx
  0002f	74 52		 je	 SHORT $LN16@scalar

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00031	48 8b 83 88 00
	00 00		 mov	 rax, QWORD PTR [rbx+136]
  00038	48 2b c1	 sub	 rax, rcx
  0003b	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003f	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00047	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0004e	72 1c		 jb	 SHORT $LN32@scalar

; 155  :     _Bytes += _Non_user_size;

  00050	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00054	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00058	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0005b	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  0005f	48 83 f8 1f	 cmp	 rax, 31
  00063	0f 87 a1 00 00
	00		 ja	 $LN29@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00069	49 8b c8	 mov	 rcx, r8
$LN32@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0006c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00071	48 89 73 78	 mov	 QWORD PTR [rbx+120], rsi

; 1768 :             _Mylast  = nullptr;

  00075	48 89 b3 80 00
	00 00		 mov	 QWORD PTR [rbx+128], rsi

; 1769 :             _Myend   = nullptr;

  0007c	48 89 b3 88 00
	00 00		 mov	 QWORD PTR [rbx+136], rsi
$LN16@scalar:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00083	48 8b 4b 60	 mov	 rcx, QWORD PTR [rbx+96]
  00087	48 85 c9	 test	 rcx, rcx
  0008a	74 45		 je	 SHORT $LN41@scalar

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0008c	48 8b 43 70	 mov	 rax, QWORD PTR [rbx+112]
  00090	48 2b c1	 sub	 rax, rcx
  00093	48 c1 f8 03	 sar	 rax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00097	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009f	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000a6	72 18		 jb	 SHORT $LN57@scalar

; 155  :     _Bytes += _Non_user_size;

  000a8	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ac	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000b0	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b3	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  000b7	48 83 f8 1f	 cmp	 rax, 31
  000bb	77 53		 ja	 SHORT $LN54@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000bd	49 8b c8	 mov	 rcx, r8
$LN57@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000c0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  000c5	48 89 73 60	 mov	 QWORD PTR [rbx+96], rsi

; 1768 :             _Mylast  = nullptr;

  000c9	48 89 73 68	 mov	 QWORD PTR [rbx+104], rsi

; 1769 :             _Myend   = nullptr;

  000cd	48 89 73 70	 mov	 QWORD PTR [rbx+112], rsi
$LN41@scalar:
  000d1	48 8d 4b 40	 lea	 rcx, QWORD PTR [rbx+64]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  000d5	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  000da	90		 npad	 1
  000db	48 8d 4b 20	 lea	 rcx, QWORD PTR [rbx+32]
  000df	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  000e4	40 f6 c7 01	 test	 dil, 1
  000e8	74 0d		 je	 SHORT $LN2@scalar
  000ea	ba f8 00 00 00	 mov	 edx, 248		; 000000f8H
  000ef	48 8b cb	 mov	 rcx, rbx
  000f2	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  000f7	48 8b c3	 mov	 rax, rbx
  000fa	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000ff	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00104	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00108	5f		 pop	 rdi
  00109	c3		 ret	 0
$LN29@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0010f	90		 npad	 1
$LN54@scalar:
  00110	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00115	cc		 int	 3
$LN67@scalar:
??_GsessionFileInfo@@QEAAPEAXI@Z ENDP			; sessionFileInfo::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$1@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$2@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 60	 add	 rcx, 96			; 00000060H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$2@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$3@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$3@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$4@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$1@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$2@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$2
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 60	 add	 rcx, 96			; 00000060H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$2@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$3@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$3
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$3@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$4@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA PROC	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$4
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0???_GsessionFileInfo@@QEAAPEAXI@Z@4HA ENDP	; `sessionFileInfo::`scalar deleting destructor''::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ PROC ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 3e		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00015	48 2b d1	 sub	 rdx, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	48 83 e2 f8	 and	 rdx, -8

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00023	72 18		 jb	 SHORT $LN20@vector

; 155  :     _Bytes += _Non_user_size;

  00025	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00029	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002d	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00034	48 83 f8 1f	 cmp	 rax, 31
  00038	77 1b		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003a	49 8b c8	 mov	 rcx, r8
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  00042	33 c0		 xor	 eax, eax
  00044	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1768 :             _Mylast  = nullptr;

  00047	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1769 :             _Myend   = nullptr;

  0004b	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 717  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN25@vector:
??1?$vector@PEAUHMENU__@@V?$allocator@PEAUHMENU__@@@std@@@std@@QEAA@XZ ENDP ; std::vector<HMENU__ *,std::allocator<HMENU__ *> >::~vector<HMENU__ *,std::allocator<HMENU__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1774 :         _Xlength_error("vector too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlength:
?_Xlength@?$vector@PEAUHWND__@@V?$allocator@PEAUHWND__@@@std@@@std@@CAXXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z PROC ; std::allocator<HWND__ *>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b c2	 mov	 rax, rdx

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	4a 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [r8*8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000f	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00016	72 18		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00018	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]
  0001c	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00020	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00023	48 83 c0 f8	 add	 rax, -8
  00027	48 83 f8 1f	 cmp	 rax, 31
  0002b	77 0f		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	48 8b c1	 mov	 rax, rcx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00030	48 8b c8	 mov	 rcx, rax

; 836  :     }

  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 264  :         ::operator delete(_Ptr, _Bytes);

  00037	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00041	cc		 int	 3
$LN18@deallocate:
?deallocate@?$allocator@PEAUHWND__@@@std@@QEAAXQEAPEAUHWND__@@_K@Z ENDP ; std::allocator<HWND__ *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1774 :         _Xlength_error("vector too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlength:
?_Xlength@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@CAXXZ ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_First$ = 48
this$ = 48
?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN46:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b f9	 mov	 rdi, rcx

; 1756 :         auto& _My_data    = _Mypair._Myval2;
; 1757 :         pointer& _Myfirst = _My_data._Myfirst;
; 1758 :         pointer& _Mylast  = _My_data._Mylast;
; 1759 :         pointer& _Myend   = _My_data._Myend;
; 1760 : 
; 1761 :         _My_data._Orphan_all();
; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	48 8b 19	 mov	 rbx, QWORD PTR [rcx]
  00015	48 85 db	 test	 rbx, rbx
  00018	74 71		 je	 SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001a	48 8b 71 08	 mov	 rsi, QWORD PTR [rcx+8]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  0001e	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00023	48 3b de	 cmp	 rbx, rsi
  00026	74 22		 je	 SHORT $LN8@Tidy
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL9@Tidy:
  00030	48 8d 4b 18	 lea	 rcx, QWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00034	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00039	48 83 c3 40	 add	 rbx, 64			; 00000040H
  0003d	48 89 5c 24 30	 mov	 QWORD PTR _First$[rsp], rbx
  00042	48 3b de	 cmp	 rbx, rsi
  00045	75 e9		 jne	 SHORT $LL9@Tidy
  00047	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
$LN8@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004a	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  0004e	48 2b d3	 sub	 rdx, rbx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00051	48 83 e2 c0	 and	 rdx, -64		; ffffffffffffffc0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00055	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0005c	72 18		 jb	 SHORT $LN35@Tidy

; 155  :     _Bytes += _Non_user_size;

  0005e	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00062	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00066	48 2b d8	 sub	 rbx, rax

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00069	48 83 c3 f8	 add	 rbx, -8
  0006d	48 83 fb 1f	 cmp	 rbx, 31
  00071	77 28		 ja	 SHORT $LN32@Tidy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00073	48 8b d8	 mov	 rbx, rax
$LN35@Tidy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00076	48 8b cb	 mov	 rcx, rbx
  00079	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1767 :             _Myfirst = nullptr;

  0007e	33 c0		 xor	 eax, eax
  00080	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1768 :             _Mylast  = nullptr;

  00083	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1769 :             _Myend   = nullptr;

  00087	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 1771 :     }

  0008b	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00090	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00095	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00099	5f		 pop	 rdi
  0009a	c3		 ret	 0
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a0	cc		 int	 3
$LN43@Tidy:
?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_First$ = 48
this$ = 48
?dtor$0@?0??_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN25:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00000	49 3b d0	 cmp	 rdx, r8
  00003	74 3c		 je	 SHORT $LN22@Destroy
  00005	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

  0000f	49 8b d8	 mov	 rbx, r8
  00012	48 8b fa	 mov	 rdi, rdx

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00015	48 89 54 24 38	 mov	 QWORD PTR _First$[rsp], rdx
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL6@Destroy:
  00020	48 8d 4f 18	 lea	 rcx, QWORD PTR [rdi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3003 :         _Tidy_deallocate();

  00024	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00029	48 83 c7 40	 add	 rdi, 64			; 00000040H
  0002d	48 89 7c 24 38	 mov	 QWORD PTR _First$[rsp], rdi
  00032	48 3b fb	 cmp	 rdi, rbx
  00035	75 e9		 jne	 SHORT $LL6@Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 1681 :     }

  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
$LN22@Destroy:
  00041	c3		 ret	 0
?_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_First$ = 56
_First$ = 56
_Last$ = 64
?dtor$0@?0??_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_First$ = 56
_First$ = 56
_Last$ = 64
?dtor$0@?0??_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR _First$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??_Destroy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXPEAUrecordedMacroStep@@0@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Destroy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z
_TEXT	SEGMENT
$T1 = 8
this$ = 8
_Val$ = 16
?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back, COMDAT

; 759  :     _CONSTEXPR20_CONTAINER void push_back(_Ty&& _Val) {

$LN37:
  00000	4c 8b c2	 mov	 r8, rdx

; 743  :         if (_Mylast != _My_data._Myend) {

  00003	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00007	48 3b 51 10	 cmp	 rdx, QWORD PTR [rcx+16]
  0000b	74 58		 je	 SHORT $LN4@push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  0000d	48 89 54 24 08	 mov	 QWORD PTR $T1[rsp], rdx
  00012	41 8b 00	 mov	 eax, DWORD PTR [r8]
  00015	89 02		 mov	 DWORD PTR [rdx], eax
  00017	49 8b 40 08	 mov	 rax, QWORD PTR [r8+8]
  0001b	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0001f	49 8b 40 10	 mov	 rax, QWORD PTR [r8+16]
  00023	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00027	33 c0		 xor	 eax, eax
  00029	48 89 42 18	 mov	 QWORD PTR [rdx+24], rax

; 2355 :     size_type _Mysize = 0; // current length of string

  0002d	48 89 42 28	 mov	 QWORD PTR [rdx+40], rax

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00031	48 89 42 30	 mov	 QWORD PTR [rdx+48], rax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00035	41 0f 10 40 18	 movups	 xmm0, XMMWORD PTR [r8+24]
  0003a	0f 11 42 18	 movups	 XMMWORD PTR [rdx+24], xmm0
  0003e	41 0f 10 48 28	 movups	 xmm1, XMMWORD PTR [r8+40]
  00043	0f 11 4a 28	 movups	 XMMWORD PTR [rdx+40], xmm1

; 4596 :         _My_data._Mysize = 0;

  00047	49 89 40 28	 mov	 QWORD PTR [r8+40], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0004b	49 c7 40 30 07
	00 00 00	 mov	 QWORD PTR [r8+48], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00053	66 41 89 40 18	 mov	 WORD PTR [r8+24], ax
  00058	41 8b 40 38	 mov	 eax, DWORD PTR [r8+56]
  0005c	89 42 38	 mov	 DWORD PTR [rdx+56], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 729  :         ++_Mylast;

  0005f	48 83 41 08 40	 add	 QWORD PTR [rcx+8], 64	; 00000040H

; 760  :         // insert by moving into element at end, provide strong guarantee
; 761  :         emplace_back(_STD move(_Val));
; 762  :     }

  00064	c3		 ret	 0
$LN4@push_back:

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00065	e9 00 00 00 00	 jmp	 ??$_Emplace_reallocate@UrecordedMacroStep@@@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAPEAUrecordedMacroStep@@QEAU2@$$QEAU2@@Z ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Emplace_reallocate<recordedMacroStep>
?push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 8
this$ = 8
_Val$ = 16
?dtor$0@?0??push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back'::`1'::dtor$0
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 8
this$ = 8
_Val$ = 16
?dtor$0@?0??push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back'::`1'::dtor$0
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR $T1[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??push_back@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAAX$$QEAUrecordedMacroStep@@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::push_back'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >, COMDAT

; 712  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@AEAAXXZ ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::_Tidy
??1?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::~vector<recordedMacroStep,std::allocator<recordedMacroStep> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >, COMDAT

; 555  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN93:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00010	48 8b f1	 mov	 rsi, rcx

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00013	45 33 ff	 xor	 r15d, r15d
  00016	4c 89 39	 mov	 QWORD PTR [rcx], r15
  00019	4c 89 79 08	 mov	 QWORD PTR [rcx+8], r15
  0001d	4c 89 79 10	 mov	 QWORD PTR [rcx+16], r15

; 556  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 557  :         auto& _My_data            = _Mypair._Myval2;
; 558  :         const auto& _Right_data   = _Right._Mypair._Myval2;
; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00021	4c 8b 32	 mov	 r14, QWORD PTR [rdx]

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

  00024	48 8b 6a 08	 mov	 rbp, QWORD PTR [rdx+8]

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 562  :         if (_Rightfirst != _Rightlast) {

  00028	4c 3b f5	 cmp	 r14, rbp
  0002b	0f 84 90 00 00
	00		 je	 $LN90@vector

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00031	48 8b dd	 mov	 rbx, rbp
  00034	49 2b de	 sub	 rbx, r14
  00037	48 c1 fb 06	 sar	 rbx, 6

; 1711 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  0003b	48 8b d3	 mov	 rdx, rbx
  0003e	e8 00 00 00 00	 call	 ?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z ; std::allocator<recordedMacroStep>::allocate

; 1712 :         _Myfirst           = _Newvec;

  00043	48 89 06	 mov	 QWORD PTR [rsi], rax

; 1713 :         _Mylast            = _Newvec;

  00046	48 89 46 08	 mov	 QWORD PTR [rsi+8], rax

; 1714 :         _Myend             = _Newvec + _Newcapacity;

  0004a	48 c1 e3 06	 shl	 rbx, 6
  0004e	48 03 d8	 add	 rbx, rax
  00051	48 89 5e 10	 mov	 QWORD PTR [rsi+16], rbx

; 564  :             _Tidy_guard<vector> _Guard{this};

  00055	48 89 74 24 70	 mov	 QWORD PTR _Guard$2[rsp], rsi

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  0005a	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0005d	48 89 7c 24 20	 mov	 QWORD PTR _Backout$1[rsp], rdi
  00062	48 89 7c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], rdi
  00067	48 89 74 24 30	 mov	 QWORD PTR _Backout$1[rsp+16], rsi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  0006c	49 8d 5e 10	 lea	 rbx, QWORD PTR [r14+16]
$LL16@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00070	48 89 7c 24 78	 mov	 QWORD PTR $T3[rsp], rdi
  00075	8b 43 f0	 mov	 eax, DWORD PTR [rbx-16]
  00078	89 07		 mov	 DWORD PTR [rdi], eax
  0007a	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]
  0007e	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
  00082	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00085	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
  00089	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0008d	48 8d 4f 18	 lea	 rcx, QWORD PTR [rdi+24]
  00091	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00096	90		 npad	 1
  00097	8b 43 28	 mov	 eax, DWORD PTR [rbx+40]
  0009a	89 47 38	 mov	 DWORD PTR [rdi+56], eax

; 1612 :         ++_Last;

  0009d	48 83 c7 40	 add	 rdi, 64			; 00000040H
  000a1	48 89 7c 24 28	 mov	 QWORD PTR _Backout$1[rsp+8], rdi

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

  000a6	48 8d 5b 40	 lea	 rbx, QWORD PTR [rbx+64]
  000aa	48 8d 43 f0	 lea	 rax, QWORD PTR [rbx-16]
  000ae	48 3b c5	 cmp	 rax, rbp
  000b1	75 bd		 jne	 SHORT $LL16@vector

; 1616 :         _First = _Last;

  000b3	48 89 7c 24 20	 mov	 QWORD PTR _Backout$1[rsp], rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000b8	48 89 7e 08	 mov	 QWORD PTR [rsi+8], rdi

; 566  :             _Guard._Target   = nullptr;

  000bc	4c 89 7c 24 70	 mov	 QWORD PTR _Guard$2[rsp], r15
$LN90@vector:

; 567  :         }
; 568  : 
; 569  :         _Proxy._Release();
; 570  :     }

  000c1	48 8b c6	 mov	 rax, rsi
  000c4	48 8b 9c 24 80
	00 00 00	 mov	 rbx, QWORD PTR [rsp+128]
  000cc	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d0	41 5f		 pop	 r15
  000d2	41 5e		 pop	 r14
  000d4	5f		 pop	 rdi
  000d5	5e		 pop	 rsi
  000d6	5d		 pop	 rbp
  000d7	c3		 ret	 0
??0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$0@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8d 8a 70 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >::~_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >
?dtor$0@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$1@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$1
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$1@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$2@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$2
  00000	48 8b 8a 78 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$0@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$0
  00000	48 8d 8a 70 00
	00 00		 lea	 rcx, QWORD PTR _Guard$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >::~_Tidy_guard<std::vector<recordedMacroStep,std::allocator<recordedMacroStep> > >
?dtor$0@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$1@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$1
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR _Backout$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<recordedMacroStep> >::~_Uninitialized_backout_al<std::allocator<recordedMacroStep> >
?dtor$1@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
_Backout$1 = 32
_Guard$2 = 112
this$ = 112
$T3 = 120
_Right$ = 120
?dtor$2@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$2
  00000	48 8b 8a 78 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0???0?$vector@UrecordedMacroStep@@V?$allocator@UrecordedMacroStep@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<recordedMacroStep,std::allocator<recordedMacroStep> >::vector<recordedMacroStep,std::allocator<recordedMacroStep> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z PROC ; std::allocator<recordedMacroStep>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN30:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 64   :         if (_Count > _Max_possible) {

  00004	48 b8 ff ff ff
	ff ff ff ff 03	 mov	 rax, 288230376151711743	; 03ffffffffffffffH
  0000e	48 3b d0	 cmp	 rdx, rax
  00011	77 4c		 ja	 SHORT $LN27@allocate

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00013	48 c1 e2 06	 shl	 rdx, 6

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0001e	72 27		 jb	 SHORT $LN8@allocate

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00020	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00024	48 3b ca	 cmp	 rcx, rdx
  00027	76 36		 jbe	 SHORT $LN27@allocate

; 85   :         return ::operator new(_Bytes);

  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002e	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00031	48 85 c0	 test	 rax, rax
  00034	74 2f		 je	 SHORT $LN17@allocate

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00036	48 83 c0 27	 add	 rax, 39			; 00000027H
  0003a	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  0003e	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	c3		 ret	 0
$LN8@allocate:

; 243  :     if (_Bytes != 0) {

  00047	48 85 d2	 test	 rdx, rdx
  0004a	74 0c		 je	 SHORT $LN9@allocate

; 85   :         return ::operator new(_Bytes);

  0004c	48 8b ca	 mov	 rcx, rdx

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  0004f	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 85   :         return ::operator new(_Bytes);

  00053	e9 00 00 00 00	 jmp	 ??2@YAPEAX_K@Z		; operator new
$LN9@allocate:

; 247  :     return nullptr;

  00058	33 c0		 xor	 eax, eax

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005e	c3		 ret	 0
$LN27@allocate:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0005f	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00064	cc		 int	 3
$LN17@allocate:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00065	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006a	cc		 int	 3
$LN28@allocate:
?allocate@?$allocator@UrecordedMacroStep@@@std@@QEAAPEAUrecordedMacroStep@@_K@Z ENDP ; std::allocator<recordedMacroStep>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z PROC ; std::allocator<recordedMacroStep>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00004	49 c1 e0 06	 shl	 r8, 6
  00008	48 8b c2	 mov	 rax, rdx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000b	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  00012	72 18		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00014	48 8b 4a f8	 mov	 rcx, QWORD PTR [rdx-8]
  00018	49 83 c0 27	 add	 r8, 39			; 00000027H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001f	48 83 c0 f8	 add	 rax, -8
  00023	48 83 f8 1f	 cmp	 rax, 31
  00027	77 12		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	48 8b c1	 mov	 rax, rcx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002c	49 8b d0	 mov	 rdx, r8
  0002f	48 8b c8	 mov	 rcx, rax

; 836  :     }

  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 264  :         ::operator delete(_Ptr, _Bytes);

  00036	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00040	cc		 int	 3
$LN18@deallocate:
?deallocate@?$allocator@UrecordedMacroStep@@@std@@QEAAXQEAUrecordedMacroStep@@_K@Z ENDP ; std::allocator<recordedMacroStep>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1recordedMacroStep@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1recordedMacroStep@@QEAA@XZ PROC			; recordedMacroStep::~recordedMacroStep, COMDAT
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00009	48 83 c1 18	 add	 rcx, 24
  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 3003 :         _Tidy_deallocate();

  00011	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1recordedMacroStep@@QEAA@XZ ENDP			; recordedMacroStep::~recordedMacroStep
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1recordedMacroStep@@QEAA@XZ@4HA PROC	; `recordedMacroStep::~recordedMacroStep'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1recordedMacroStep@@QEAA@XZ@4HA ENDP	; `recordedMacroStep::~recordedMacroStep'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1recordedMacroStep@@QEAA@XZ@4HA PROC	; `recordedMacroStep::~recordedMacroStep'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???1recordedMacroStep@@QEAA@XZ@4HA ENDP	; `recordedMacroStep::~recordedMacroStep'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h
;	COMDAT ??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z
_TEXT	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z PROC		; recordedMacroStep::recordedMacroStep, COMDAT

; 286  : 	recordedMacroStep(int iMessage, uptr_t wParam, uptr_t lParam, const TCHAR *sParam, int type)

$LN154:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	55		 push	 rbp
  00010	41 56		 push	 r14
  00012	41 57		 push	 r15
  00014	48 8b ec	 mov	 rbp, rsp
  00017	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00025	48 33 c4	 xor	 rax, rsp
  00028	48 89 45 f0	 mov	 QWORD PTR __$ArrayPad$[rbp-128], rax
  0002c	4c 8b f1	 mov	 r14, rcx
  0002f	48 89 4d a8	 mov	 QWORD PTR this$GSCopy$[rbp-128], rcx
  00033	48 8b 4d 40	 mov	 rcx, QWORD PTR sParam$[rbp-128]
  00037	45 33 ff	 xor	 r15d, r15d
  0003a	44 89 7d a0	 mov	 DWORD PTR $T1[rbp-128], r15d

; 287  : 		: _message(iMessage), _wParameter(wParam), _lParameter(lParam), _macroType(MacroTypeIndex(type)){

  0003e	41 89 16	 mov	 DWORD PTR [r14], edx
  00041	4d 89 46 08	 mov	 QWORD PTR [r14+8], r8
  00045	4d 89 4e 10	 mov	 QWORD PTR [r14+16], r9
  00049	49 8d 7e 18	 lea	 rdi, QWORD PTR [r14+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0004d	4c 89 3f	 mov	 QWORD PTR [rdi], r15

; 4596 :         _My_data._Mysize = 0;

  00050	4c 89 7f 10	 mov	 QWORD PTR [rdi+16], r15

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00054	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0005c	66 44 89 3f	 mov	 WORD PTR [rdi], r15w
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 287  : 		: _message(iMessage), _wParameter(wParam), _lParameter(lParam), _macroType(MacroTypeIndex(type)){

  00060	8b 45 48	 mov	 eax, DWORD PTR type$[rbp-128]
  00063	41 89 46 38	 mov	 DWORD PTR [r14+56], eax

; 288  : 			_sParameter = (sParam)?generic_string(sParam):TEXT("");	

  00067	48 85 c9	 test	 rcx, rcx
  0006a	74 46		 je	 SHORT $LN3@recordedMa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0006c	4c 89 7d d0	 mov	 QWORD PTR $T3[rbp-128], r15

; 2355 :     size_type _Mysize = 0; // current length of string

  00070	4c 89 7d e0	 mov	 QWORD PTR $T3[rbp-112], r15

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00074	4c 89 7d e8	 mov	 QWORD PTR $T3[rbp-104], r15

; 4596 :         _My_data._Mysize = 0;

  00078	4c 89 7d e0	 mov	 QWORD PTR $T3[rbp-112], r15

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0007c	48 c7 45 e8 07
	00 00 00	 mov	 QWORD PTR $T3[rbp-104], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00084	66 44 89 7d d0	 mov	 WORD PTR $T3[rbp-128], r15w

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  00089	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
$LL147@recordedMa:
  00090	49 ff c0	 inc	 r8
  00093	66 42 83 3c 41
	00		 cmp	 WORD PTR [rcx+r8*2], 0
  00099	75 f5		 jne	 SHORT $LL147@recordedMa

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009b	48 8b d1	 mov	 rdx, rcx
  0009e	48 8d 4d d0	 lea	 rcx, QWORD PTR $T3[rbp-128]
  000a2	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 288  : 			_sParameter = (sParam)?generic_string(sParam):TEXT("");	

  000a7	48 8d 75 d0	 lea	 rsi, QWORD PTR $T3[rbp-128]
  000ab	bb 01 00 00 00	 mov	 ebx, 1
  000b0	eb 39		 jmp	 SHORT $LN149@recordedMa
$LN3@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000b2	4c 89 7d b0	 mov	 QWORD PTR $T2[rbp-128], r15

; 2355 :     size_type _Mysize = 0; // current length of string

  000b6	4c 89 7d c0	 mov	 QWORD PTR $T2[rbp-112], r15

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  000ba	4c 89 7d c8	 mov	 QWORD PTR $T2[rbp-104], r15

; 4596 :         _My_data._Mysize = 0;

  000be	4c 89 7d c0	 mov	 QWORD PTR $T2[rbp-112], r15

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000c2	48 c7 45 c8 07
	00 00 00	 mov	 QWORD PTR $T2[rbp-104], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000ca	66 44 89 7d b0	 mov	 WORD PTR $T2[rbp-128], r15w

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000cf	45 33 c0	 xor	 r8d, r8d
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000d9	48 8d 4d b0	 lea	 rcx, QWORD PTR $T2[rbp-128]
  000dd	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 288  : 			_sParameter = (sParam)?generic_string(sParam):TEXT("");	

  000e2	48 8d 75 b0	 lea	 rsi, QWORD PTR $T2[rbp-128]
  000e6	bb 02 00 00 00	 mov	 ebx, 2
$LN149@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2850 :         if (this != _STD addressof(_Right)) {

  000eb	89 5d a0	 mov	 DWORD PTR $T1[rbp-128], ebx
  000ee	48 3b fe	 cmp	 rdi, rsi
  000f1	74 65		 je	 SHORT $LN79@recordedMa

; 2319 :         return _BUF_SIZE <= _Myres;

  000f3	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  000f7	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000fb	72 35		 jb	 SHORT $LN75@recordedMa

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  000fd	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00100	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00108	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0010f	72 1c		 jb	 SHORT $LN74@recordedMa

; 155  :     _Bytes += _Non_user_size;

  00111	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00115	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00119	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0011c	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00120	48 83 f8 1f	 cmp	 rax, 31
  00124	0f 87 1a 01 00
	00		 ja	 $LN71@recordedMa

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0012a	49 8b c8	 mov	 rcx, r8
$LN74@recordedMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0012d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN75@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00132	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0013a	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  0013d	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  00140	0f 10 4e 10	 movups	 xmm1, XMMWORD PTR [rsi+16]
  00144	0f 11 4f 10	 movups	 XMMWORD PTR [rdi+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  00148	4c 89 7e 10	 mov	 QWORD PTR [rsi+16], r15

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0014c	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00154	66 44 89 3e	 mov	 WORD PTR [rsi], r15w
$LN79@recordedMa:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 288  : 			_sParameter = (sParam)?generic_string(sParam):TEXT("");	

  00158	f6 c3 02	 test	 bl, 2
  0015b	74 57		 je	 SHORT $LN119@recordedMa
  0015d	83 e3 fd	 and	 ebx, -3
  00160	89 5d a0	 mov	 DWORD PTR $T1[rbp-128], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00163	48 8b 55 c8	 mov	 rdx, QWORD PTR $T2[rbp-104]
  00167	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0016b	72 36		 jb	 SHORT $LN117@recordedMa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0016d	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  00175	48 8b 4d b0	 mov	 rcx, QWORD PTR $T2[rbp-128]
  00179	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0017c	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00183	72 19		 jb	 SHORT $LN116@recordedMa

; 155  :     _Bytes += _Non_user_size;

  00185	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00189	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  0018d	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00190	48 83 c0 f8	 add	 rax, -8
  00194	48 83 f8 1f	 cmp	 rax, 31
  00198	0f 87 a0 00 00
	00		 ja	 $LN151@recordedMa
$LN116@recordedMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0019e	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN117@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  001a3	4c 89 7d c0	 mov	 QWORD PTR $T2[rbp-112], r15

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001a7	48 c7 45 c8 07
	00 00 00	 mov	 QWORD PTR $T2[rbp-104], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001af	66 44 89 7d b0	 mov	 WORD PTR $T2[rbp-128], r15w
$LN119@recordedMa:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 288  : 			_sParameter = (sParam)?generic_string(sParam):TEXT("");	

  001b4	f6 c3 01	 test	 bl, 1
  001b7	74 53		 je	 SHORT $LN145@recordedMa
  001b9	83 e3 fe	 and	 ebx, -2
  001bc	89 5d a0	 mov	 DWORD PTR $T1[rbp-128], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  001bf	48 8b 55 e8	 mov	 rdx, QWORD PTR $T3[rbp-104]
  001c3	48 83 fa 08	 cmp	 rdx, 8

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c7	72 32		 jb	 SHORT $LN143@recordedMa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c9	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  001d1	48 8b 4d d0	 mov	 rcx, QWORD PTR $T3[rbp-128]
  001d5	48 8b c1	 mov	 rax, rcx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001d8	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  001df	72 15		 jb	 SHORT $LN142@recordedMa

; 155  :     _Bytes += _Non_user_size;

  001e1	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001e5	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  001e9	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001ec	48 83 c0 f8	 add	 rax, -8
  001f0	48 83 f8 1f	 cmp	 rax, 31
  001f4	77 42		 ja	 SHORT $LN152@recordedMa
$LN142@recordedMa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001f6	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN143@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  001fb	4c 89 7d e0	 mov	 QWORD PTR $T3[rbp-112], r15

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001ff	48 c7 45 e8 07
	00 00 00	 mov	 QWORD PTR $T3[rbp-104], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00207	66 44 89 7d d0	 mov	 WORD PTR $T3[rbp-128], r15w
$LN145@recordedMa:
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\shortcut\shortcut.h

; 289  : 	};

  0020c	49 8b c6	 mov	 rax, r14
  0020f	48 8b 4d f0	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-128]
  00213	48 33 cc	 xor	 rcx, rsp
  00216	e8 00 00 00 00	 call	 __security_check_cookie
  0021b	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  00223	49 8b 5b 28	 mov	 rbx, QWORD PTR [r11+40]
  00227	49 8b 73 30	 mov	 rsi, QWORD PTR [r11+48]
  0022b	49 8b 7b 38	 mov	 rdi, QWORD PTR [r11+56]
  0022f	49 8b e3	 mov	 rsp, r11
  00232	41 5f		 pop	 r15
  00234	41 5e		 pop	 r14
  00236	5d		 pop	 rbp
  00237	c3		 ret	 0
$LN152@recordedMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00238	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0023d	90		 npad	 1
$LN151@recordedMa:
  0023e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00243	90		 npad	 1
$LN71@recordedMa:
  00244	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00249	cc		 int	 3
$LN148@recordedMa:
??0recordedMacroStep@@QEAA@H_K0PEB_WH@Z ENDP		; recordedMacroStep::recordedMacroStep
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$0@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$0
  00000	48 8b 8a 28 00
	00 00		 mov	 rcx, QWORD PTR this$GSCopy$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$1
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8d 4d 50	 lea	 rcx, QWORD PTR $T3[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$1:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN9@dtor$2
  00013	83 65 20 fd	 and	 DWORD PTR $T1[rbp], -3
  00017	48 8d 4d 30	 lea	 rcx, QWORD PTR $T2[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN9@dtor$2:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$0@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$0
  00000	48 8b 8a 28 00
	00 00		 mov	 rcx, QWORD PTR this$GSCopy$[rdx]
  00007	48 83 c1 18	 add	 rcx, 24
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$1
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8d 4d 50	 lea	 rcx, QWORD PTR $T3[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$1:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$GSCopy$ = 40
$T2 = 48
$T3 = 80
__$ArrayPad$ = 112
this$ = 160
iMessage$ = 168
wParam$ = 176
lParam$ = 184
sParam$ = 192
type$ = 200
?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA PROC ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN9@dtor$2
  00013	83 65 20 fd	 and	 DWORD PTR $T1[rbp], -3
  00017	48 8d 4d 30	 lea	 rcx, QWORD PTR $T2[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN9@dtor$2:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???0recordedMacroStep@@QEAA@H_K0PEB_WH@Z@4HA ENDP ; `recordedMacroStep::recordedMacroStep'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GStaticDialog@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GStaticDialog@@UEAAPEAXI@Z PROC			; StaticDialog::`scalar deleting destructor', COMDAT
$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx
  0000f	e8 00 00 00 00	 call	 ??1StaticDialog@@UEAA@XZ ; StaticDialog::~StaticDialog
  00014	f6 c3 01	 test	 bl, 1
  00017	74 0d		 je	 SHORT $LN4@scalar
  00019	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0001e	48 8b cf	 mov	 rcx, rdi
  00021	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@scalar:
  00026	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002b	48 8b c7	 mov	 rax, rdi
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??_GStaticDialog@@UEAAPEAXI@Z ENDP			; StaticDialog::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\StaticDialog\StaticDialog.h
;	COMDAT ?isCreated@StaticDialog@@UEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?isCreated@StaticDialog@@UEBA_NXZ PROC			; StaticDialog::isCreated, COMDAT

; 47   : 		return (_hSelf != NULL);

  00000	48 83 79 18 00	 cmp	 QWORD PTR [rcx+24], 0
  00005	0f 95 c0	 setne	 al

; 48   : 	}

  00008	c3		 ret	 0
?isCreated@StaticDialog@@UEBA_NXZ ENDP			; StaticDialog::isCreated
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GWindow@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GWindow@@UEAAPEAXI@Z PROC				; Window::`scalar deleting destructor', COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	f6 c2 01	 test	 dl, 1
  0000c	74 0a		 je	 SHORT $LN4@scalar
  0000e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@scalar:
  00018	48 8b c3	 mov	 rax, rbx
  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
??_GWindow@@UEAAPEAXI@Z ENDP				; Window::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?isVisible@Window@@UEBA_NXZ
_TEXT	SEGMENT
this$ = 48
?isVisible@Window@@UEBA_NXZ PROC			; Window::isVisible, COMDAT

; 95   : 	{

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 96   :     	return (::IsWindowVisible(_hSelf)?true:false);

  00004	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00008	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IsWindowVisible
  0000e	85 c0		 test	 eax, eax
  00010	0f 95 c0	 setne	 al

; 97   : 	}

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
?isVisible@Window@@UEBA_NXZ ENDP			; Window::isVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?getHeight@Window@@UEBAHXZ
_TEXT	SEGMENT
rc$ = 32
__$ArrayPad$ = 48
this$ = 80
?getHeight@Window@@UEBAHXZ PROC				; Window::getHeight, COMDAT

; 86   : 	{

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00015	48 8b d9	 mov	 rbx, rcx

; 87   : 		RECT rc;
; 88   : 		::GetClientRect(_hSelf, &rc);

  00018	48 8d 54 24 20	 lea	 rdx, QWORD PTR rc$[rsp]
  0001d	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00021	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetClientRect

; 89   : 		if (::IsWindowVisible(_hSelf) == TRUE)

  00027	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IsWindowVisible
  00031	83 f8 01	 cmp	 eax, 1
  00034	75 1b		 jne	 SHORT $LN2@getHeight

; 90   : 			return (rc.bottom - rc.top);

  00036	8b 44 24 2c	 mov	 eax, DWORD PTR rc$[rsp+12]
  0003a	2b 44 24 24	 sub	 eax, DWORD PTR rc$[rsp+4]

; 92   : 	}

  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00043	48 33 cc	 xor	 rcx, rsp
  00046	e8 00 00 00 00	 call	 __security_check_cookie
  0004b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0004f	5b		 pop	 rbx
  00050	c3		 ret	 0
$LN2@getHeight:

; 91   : 		return 0;

  00051	33 c0		 xor	 eax, eax

; 92   : 	}

  00053	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00058	48 33 cc	 xor	 rcx, rsp
  0005b	e8 00 00 00 00	 call	 __security_check_cookie
  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5b		 pop	 rbx
  00065	c3		 ret	 0
?getHeight@Window@@UEBAHXZ ENDP				; Window::getHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?getWidth@Window@@UEBAHXZ
_TEXT	SEGMENT
rc$ = 32
__$ArrayPad$ = 48
this$ = 80
?getWidth@Window@@UEBAHXZ PROC				; Window::getWidth, COMDAT

; 79   : 	{

$LN4:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000b	48 33 c4	 xor	 rax, rsp
  0000e	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 80   : 		RECT rc;
; 81   : 		::GetClientRect(_hSelf, &rc);

  00013	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00017	48 8d 54 24 20	 lea	 rdx, QWORD PTR rc$[rsp]
  0001c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetClientRect

; 82   : 		return (rc.right - rc.left);

  00022	8b 44 24 28	 mov	 eax, DWORD PTR rc$[rsp+8]
  00026	2b 44 24 20	 sub	 eax, DWORD PTR rc$[rsp]

; 83   : 	}

  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0002f	48 33 cc	 xor	 rcx, rsp
  00032	e8 00 00 00 00	 call	 __security_check_cookie
  00037	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0003b	c3		 ret	 0
?getWidth@Window@@UEBAHXZ ENDP				; Window::getWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z
_TEXT	SEGMENT
this$ = 8
rc$ = 16
?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z PROC	; Window::getWindowRect, COMDAT

; 75   : 		::GetWindowRect(_hSelf, &rc);

  00000	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00004	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_GetWindowRect
?getWindowRect@Window@@UEBAXAEAUtagRECT@@@Z ENDP	; Window::getWindowRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z
_TEXT	SEGMENT
this$ = 8
rc$ = 16
?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z PROC	; Window::getClientRect, COMDAT

; 70   : 		::GetClientRect(_hSelf, &rc);

  00000	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00004	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_GetClientRect
?getClientRect@Window@@UEBAXAEAUtagRECT@@@Z ENDP	; Window::getClientRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?redraw@Window@@UEBAX_N@Z
_TEXT	SEGMENT
this$ = 48
forceUpdate$ = 56
?redraw@Window@@UEBAX_N@Z PROC				; Window::redraw, COMDAT

; 61   : 	{

$LN5:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	0f b6 da	 movzx	 ebx, dl
  0000d	48 8b f9	 mov	 rdi, rcx

; 62   : 		::InvalidateRect(_hSelf, nullptr, TRUE);

  00010	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00014	33 d2		 xor	 edx, edx
  00016	44 8d 42 01	 lea	 r8d, QWORD PTR [rdx+1]
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_InvalidateRect

; 63   : 		if (forceUpdate)

  00020	84 db		 test	 bl, bl
  00022	74 0a		 je	 SHORT $LN2@redraw

; 64   : 			::UpdateWindow(_hSelf);

  00024	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UpdateWindow
$LN2@redraw:

; 65   : 	}

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
?redraw@Window@@UEBAX_N@Z ENDP				; Window::redraw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z
_TEXT	SEGMENT
this$ = 64
rc$ = 72
?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z PROC		; Window::reSizeToWH, COMDAT

; 54   : 	{

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 55   : 		::MoveWindow(_hSelf, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, TRUE);

  00006	8b 42 0c	 mov	 eax, DWORD PTR [rdx+12]
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	44 8b 4a 08	 mov	 r9d, DWORD PTR [rdx+8]
  00010	44 8b 42 04	 mov	 r8d, DWORD PTR [rdx+4]
  00014	41 2b c0	 sub	 eax, r8d
  00017	44 2b 0a	 sub	 r9d, DWORD PTR [rdx]
  0001a	8b 12		 mov	 edx, DWORD PTR [rdx]
  0001c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00020	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  00028	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MoveWindow

; 56   : 		redraw();

  00032	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00035	33 d2		 xor	 edx, edx
  00037	48 8b cb	 mov	 rcx, rbx

; 57   : 	}

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5b		 pop	 rbx

; 56   : 		redraw();

  0003f	48 ff 60 30	 rex_jmp QWORD PTR [rax+48]
?reSizeToWH@Window@@UEAAXAEAUtagRECT@@@Z ENDP		; Window::reSizeToWH
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z
_TEXT	SEGMENT
this$ = 64
rc$ = 72
?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z PROC		; Window::reSizeTo, COMDAT

; 47   : 	{

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 48   : 		::MoveWindow(_hSelf, rc.left, rc.top, rc.right, rc.bottom, TRUE);

  00006	8b 42 0c	 mov	 eax, DWORD PTR [rdx+12]
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	44 8b 4a 08	 mov	 r9d, DWORD PTR [rdx+8]
  00010	44 8b 42 04	 mov	 r8d, DWORD PTR [rdx+4]
  00014	8b 12		 mov	 edx, DWORD PTR [rdx]
  00016	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0001a	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  00022	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MoveWindow

; 49   : 		redraw();

  0002c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0002f	33 d2		 xor	 edx, edx
  00031	48 8b cb	 mov	 rcx, rbx

; 50   : 	}

  00034	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00038	5b		 pop	 rbx

; 49   : 		redraw();

  00039	48 ff 60 30	 rex_jmp QWORD PTR [rax+48]
?reSizeTo@Window@@UEAAXAEAUtagRECT@@@Z ENDP		; Window::reSizeTo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?display@Window@@UEBAX_N@Z
_TEXT	SEGMENT
this$ = 8
toShow$ = 16
?display@Window@@UEBAX_N@Z PROC				; Window::display, COMDAT

; 42   : 		::ShowWindow(_hSelf, toShow ? SW_SHOW : SW_HIDE);

  00000	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00004	f6 da		 neg	 dl
  00006	1b d2		 sbb	 edx, edx
  00008	83 e2 05	 and	 edx, 5
  0000b	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_ShowWindow
?display@Window@@UEBAX_N@Z ENDP				; Window::display
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 8
hInst$ = 16
parent$ = 24
?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z PROC	; Window::init, COMDAT

; 34   : 		_hInst = hInst;

  00000	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx

; 35   : 		_hParent = parent;

  00004	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 36   : 	}

  00008	c3		 ret	 0
?init@Window@@UEAAXPEAUHINSTANCE__@@PEAUHWND__@@@Z ENDP	; Window::init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\WinControls\Window.h
;	COMDAT ??1Window@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Window@@UEAA@XZ PROC					; Window::~Window, COMDAT

; 28   : 	virtual ~Window() = default;

  00000	c2 00 00	 ret	 0
??1Window@@UEAA@XZ ENDP					; Window::~Window
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h
;	COMDAT ??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ
text$yd	SEGMENT
??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ PROC ; `WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'', COMDAT
$LN15:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 125  : 		~StringBuffer() { if (_allocLen) delete[] _str; }

  00004	48 83 3d 10 00
	00 00 00	 cmp	 QWORD PTR ?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A+16, 0
  0000c	74 0d		 je	 SHORT $LN8@dynamic
  0000e	48 8b 0d 18 00
	00 00		 mov	 rcx, QWORD PTR ?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A+24
  00015	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
  0001a	90		 npad	 1
$LN8@dynamic:
  0001b	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR ?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A, 0
  00023	74 10		 je	 SHORT $LN11@dynamic
  00025	48 8b 0d 08 00
	00 00		 mov	 rcx, QWORD PTR ?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A+8
  0002c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00030	e9 00 00 00 00	 jmp	 ??_V@YAXPEAX@Z		; operator delete[]
$LN11@dynamic:
  00035	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00039	c3		 ret	 0
??__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ ENDP ; `WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance''
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA PROC ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
  00007	e9 00 00 00 00	 jmp	 ??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ ; WcharMbcsConvertor::StringBuffer<char>::~StringBuffer<char>
?dtor$0@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA ENDP ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA PROC ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$1
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ ; WcharMbcsConvertor::StringBuffer<wchar_t>::~StringBuffer<wchar_t>
?dtor$1@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA ENDP ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA PROC ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$0
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
  00007	e9 00 00 00 00	 jmp	 ??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ ; WcharMbcsConvertor::StringBuffer<char>::~StringBuffer<char>
?dtor$0@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA ENDP ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA PROC ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$1
  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?instance@?1??getInstance@WcharMbcsConvertor@@SAAEAV2@XZ@4V2@A ; `WcharMbcsConvertor::getInstance'::`2'::instance
  00007	48 83 c1 10	 add	 rcx, 16
  0000b	e9 00 00 00 00	 jmp	 ??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ ; WcharMbcsConvertor::StringBuffer<wchar_t>::~StringBuffer<wchar_t>
?dtor$1@?0???__Finstance@?1??getInstance@WcharMbcsConvertor@@SAAEAV1@XZ@YAXXZ@4HA ENDP ; ``WcharMbcsConvertor::getInstance'::`2'::`dynamic atexit destructor for 'instance'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h
;	COMDAT ??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ PROC	; WcharMbcsConvertor::StringBuffer<wchar_t>::~StringBuffer<wchar_t>, COMDAT

; 125  : 		~StringBuffer() { if (_allocLen) delete[] _str; }

  00000	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  00004	74 09		 je	 SHORT $LN2@StringBuff
  00006	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000a	e9 00 00 00 00	 jmp	 ??_V@YAXPEAX@Z		; operator delete[]
$LN2@StringBuff:
  0000f	c3		 ret	 0
??1?$StringBuffer@_W@WcharMbcsConvertor@@QEAA@XZ ENDP	; WcharMbcsConvertor::StringBuffer<wchar_t>::~StringBuffer<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\dev\notepadplusplus\notepad-plus-plus-master\PowerEditor\src\MISC\Common\Common.h
;	COMDAT ??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ PROC	; WcharMbcsConvertor::StringBuffer<char>::~StringBuffer<char>, COMDAT

; 125  : 		~StringBuffer() { if (_allocLen) delete[] _str; }

  00000	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  00004	74 09		 je	 SHORT $LN2@StringBuff
  00006	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000a	e9 00 00 00 00	 jmp	 ??_V@YAXPEAX@Z		; operator delete[]
$LN2@StringBuff:
  0000f	c3		 ret	 0
??1?$StringBuffer@D@WcharMbcsConvertor@@QEAA@XZ ENDP	; WcharMbcsConvertor::StringBuffer<char>::~StringBuffer<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN27:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0000d	48 83 fa 08	 cmp	 rdx, 8

; 4617 :         _Mypair._Myval2._Orphan_all();
; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00011	72 31		 jb	 SHORT $LN21@Tidy_deall
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00013	48 8d 14 55 02
	00 00 00	 lea	 rdx, QWORD PTR [rdx*2+2]
  0001b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00025	72 18		 jb	 SHORT $LN20@Tidy_deall

; 155  :     _Bytes += _Non_user_size;

  00027	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002b	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002f	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00032	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00036	48 83 f8 1f	 cmp	 rax, 31
  0003a	77 1f		 ja	 SHORT $LN17@Tidy_deall

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003c	49 8b c8	 mov	 rcx, r8
$LN20@Tidy_deall:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN21@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00044	33 c0		 xor	 eax, eax
  00046	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004a	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00052	66 89 03	 mov	 WORD PTR [rbx], ax

; 4638 :     }

  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5b		 pop	 rbx
  0005a	c3		 ret	 0
$LN17@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN24@Tidy_deall:
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN51:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	41 56		 push	 r14
  00012	41 57		 push	 r15
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  00018	48 8b 71 18	 mov	 rsi, QWORD PTR [rcx+24]
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	4c 8b fa	 mov	 r15, rdx
  00022	48 8b f9	 mov	 rdi, rcx
  00025	4c 3b c6	 cmp	 r8, rsi
  00028	77 2a		 ja	 SHORT $LN2@assign

; 2296 :         value_type* _Result = _Bx._Buf;

  0002a	48 8b e9	 mov	 rbp, rcx

; 2319 :         return _BUF_SIZE <= _Myres;

  0002d	48 83 fe 08	 cmp	 rsi, 8

; 2297 :         if (_Large_string_engaged()) {

  00031	72 03		 jb	 SHORT $LN5@assign

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  00033	48 8b 29	 mov	 rbp, QWORD PTR [rcx]
$LN5@assign:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00036	4b 8d 1c 00	 lea	 rbx, QWORD PTR [r8+r8]

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3248 :             _Mypair._Myval2._Mysize = _Count;

  0003a	4c 89 71 10	 mov	 QWORD PTR [rcx+16], r14

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003e	4c 8b c3	 mov	 r8, rbx
  00041	48 8b cd	 mov	 rcx, rbp
  00044	e8 00 00 00 00	 call	 memmove

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00049	33 c0		 xor	 eax, eax
  0004b	66 89 04 2b	 mov	 WORD PTR [rbx+rbp], ax

; 3251 :             return *this;

  0004f	e9 a7 00 00 00	 jmp	 $LN48@assign
$LN2@assign:

; 4508 :         if (_New_size > max_size()) {

  00054	48 bb fe ff ff
	ff ff ff ff 7f	 mov	 rbx, 9223372036854775806 ; 7ffffffffffffffeH
  0005e	4c 3b f3	 cmp	 r14, rbx
  00061	0f 87 b6 00 00
	00		 ja	 $LN50@assign

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00067	49 8b ce	 mov	 rcx, r14
  0006a	48 83 c9 07	 or	 rcx, 7
  0006e	48 3b cb	 cmp	 rcx, rbx

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00071	77 1f		 ja	 SHORT $LN18@assign

; 4490 :             return _Max;
; 4491 :         }
; 4492 : 
; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00073	48 8b d6	 mov	 rdx, rsi
  00076	48 8b c3	 mov	 rax, rbx
  00079	48 d1 ea	 shr	 rdx, 1
  0007c	48 2b c2	 sub	 rax, rdx
  0007f	48 3b f0	 cmp	 rsi, rax
  00082	77 0e		 ja	 SHORT $LN18@assign

; 4494 :             return _Max;
; 4495 :         }
; 4496 : 
; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00084	48 8d 04 32	 lea	 rax, QWORD PTR [rdx+rsi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00088	48 8b d9	 mov	 rbx, rcx
  0008b	48 3b c8	 cmp	 rcx, rax
  0008e	48 0f 42 d8	 cmovb	 rbx, rax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00092	48 8d 53 01	 lea	 rdx, QWORD PTR [rbx+1]
  00096	48 8b cf	 mov	 rcx, rdi
  00099	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  0009e	48 89 5f 18	 mov	 QWORD PTR [rdi+24], rbx

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000a2	49 8b d7	 mov	 rdx, r15
  000a5	4b 8d 1c 36	 lea	 rbx, QWORD PTR [r14+r14]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000a9	4c 89 77 10	 mov	 QWORD PTR [rdi+16], r14

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000ad	4c 8b c3	 mov	 r8, rbx
  000b0	48 8b c8	 mov	 rcx, rax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b3	48 8b e8	 mov	 rbp, rax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b6	e8 00 00 00 00	 call	 memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000bb	33 c0		 xor	 eax, eax
  000bd	66 89 04 2b	 mov	 WORD PTR [rbx+rbp], ax

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000c1	48 83 fe 08	 cmp	 rsi, 8
  000c5	72 31		 jb	 SHORT $LN13@assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c7	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000ca	48 8d 14 75 02
	00 00 00	 lea	 rdx, QWORD PTR [rsi*2+2]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000d2	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  000d9	72 18		 jb	 SHORT $LN42@assign

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000db	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]
  000df	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000e3	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000e6	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  000ea	48 83 f8 1f	 cmp	 rax, 31
  000ee	77 27		 ja	 SHORT $LN39@assign

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000f0	49 8b c8	 mov	 rcx, r8
$LN42@assign:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000f3	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 3254 :         return _Reallocate_for(

  000f8	48 89 2f	 mov	 QWORD PTR [rdi], rbp
$LN48@assign:

; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  000fb	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00100	48 8b c7	 mov	 rax, rdi
  00103	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00108	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0010d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00111	41 5f		 pop	 r15
  00113	41 5e		 pop	 r14
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
$LN39@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00117	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0011c	cc		 int	 3
$LN50@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4509 :             _Xlen_string(); // result too long

  0011d	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
  00122	cc		 int	 3
$LN47@assign:
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3003 :         _Tidy_deallocate();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT

; 2849 :         noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN22:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx
  0000d	48 8b d9	 mov	 rbx, rcx

; 2850 :         if (this != _STD addressof(_Right)) {

  00010	48 3b ca	 cmp	 rcx, rdx
  00013	74 24		 je	 SHORT $LN20@operator

; 2776 :         _Tidy_deallocate();

  00015	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0001a	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]

; 4596 :         _My_data._Mysize = 0;

  0001d	33 c0		 xor	 eax, eax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0001f	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  00022	0f 10 4f 10	 movups	 xmm1, XMMWORD PTR [rdi+16]
  00026	0f 11 4b 10	 movups	 XMMWORD PTR [rbx+16], xmm1

; 4596 :         _My_data._Mysize = 0;

  0002a	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0002e	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00036	66 89 07	 mov	 WORD PTR [rdi], ax
$LN20@operator:

; 2851 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});
; 2852 :         }
; 2853 : 
; 2854 :         return *this;
; 2855 :     }

  00039	48 8b c3	 mov	 rax, rbx
  0003c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00006	33 c0		 xor	 eax, eax

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00008	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00013	48 8b d9	 mov	 rbx, rcx

; 4596 :         _My_data._Mysize = 0;

  00016	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 270  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  0001a	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
$LL15@basic_stri:
  00021	49 ff c0	 inc	 r8
  00024	66 42 39 04 42	 cmp	 WORD PTR [rdx+r8*2], ax
  00029	75 f6		 jne	 SHORT $LL15@basic_stri

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0002b	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  00030	48 8b c3	 mov	 rax, rbx
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5b		 pop	 rbx
  00038	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00000	33 c0		 xor	 eax, eax

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00002	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 4596 :         _My_data._Mysize = 0;

  0000d	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2468 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2469 :         _Tidy_init();
; 2470 :     }

  00011	48 8b c1	 mov	 rax, rcx
  00014	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN25:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00014	33 c0		 xor	 eax, eax

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00016	48 8b fa	 mov	 rdi, rdx

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0001c	48 8b d9	 mov	 rbx, rcx

; 2355 :     size_type _Mysize = 0; // current length of string

  0001f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00023	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  00027	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8

; 2921 :         const size_type _Right_size   = _Right_data._Mysize;

  0002c	48 8b 6a 10	 mov	 rbp, QWORD PTR [rdx+16]

; 2306 :         if (_Large_string_engaged()) {

  00030	72 03		 jb	 SHORT $LN13@basic_stri

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00032	48 8b 3a	 mov	 rdi, QWORD PTR [rdx]
$LN13@basic_stri:

; 2928 :         const bool _Stay_small = _Right_size < _BUF_SIZE;

  00035	48 83 fd 08	 cmp	 rbp, 8

; 2929 : #endif // __cpp_lib_constexpr_string
; 2930 : 
; 2931 :         // NOTE: even if _Right is in large mode, we only go into large mode ourselves if the actual size of _Right
; 2932 :         // requires it
; 2933 :         if (_Stay_small) { // stay small, don't allocate

  00039	73 0d		 jae	 SHORT $LN10@basic_stri

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0003b	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

  0003e	be 07 00 00 00	 mov	 esi, 7

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00043	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2937 :             return;

  00046	eb 37		 jmp	 SHORT $LN9@basic_stri
$LN10@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00048	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00052	48 8b f5	 mov	 rsi, rbp
  00055	48 83 ce 07	 or	 rsi, 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00059	48 3b f0	 cmp	 rsi, rax
  0005c	48 0f 47 f0	 cmova	 rsi, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00060	48 8d 56 01	 lea	 rdx, QWORD PTR [rsi+1]
  00064	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00069	4c 8d 04 6d 02
	00 00 00	 lea	 r8, QWORD PTR [rbp*2+2]

; 2943 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00071	48 89 03	 mov	 QWORD PTR [rbx], rax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00074	48 8b d7	 mov	 rdx, rdi
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 memcpy
$LN9@basic_stri:

; 2452 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2453 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2454 :         _Construct_lv_contents(_Right);
; 2455 :         _Proxy._Release();
; 2456 :     }

  0007f	48 89 6b 10	 mov	 QWORD PTR [rbx+16], rbp
  00083	48 8b c3	 mov	 rax, rbx
  00086	48 89 73 18	 mov	 QWORD PTR [rbx+24], rsi
  0008a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008f	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00094	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00099	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009d	5f		 pop	 rdi
  0009e	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN30:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 64   :         if (_Count > _Max_possible) {

  00004	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0000e	48 3b d0	 cmp	 rdx, rax
  00011	77 4c		 ja	 SHORT $LN27@allocate

; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00013	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0001e	72 2a		 jb	 SHORT $LN8@allocate

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00020	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00024	48 3b c1	 cmp	 rax, rcx
  00027	76 36		 jbe	 SHORT $LN27@allocate

; 85   :         return ::operator new(_Bytes);

  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00031	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00034	48 85 c0	 test	 rax, rax
  00037	74 2c		 je	 SHORT $LN17@allocate

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00039	48 83 c0 27	 add	 rax, 39			; 00000027H
  0003d	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00041	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	c3		 ret	 0
$LN8@allocate:

; 243  :     if (_Bytes != 0) {

  0004a	48 85 c9	 test	 rcx, rcx
  0004d	74 09		 je	 SHORT $LN9@allocate

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  0004f	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 85   :         return ::operator new(_Bytes);

  00053	e9 00 00 00 00	 jmp	 ??2@YAPEAX_K@Z		; operator new
$LN9@allocate:

; 247  :     return nullptr;

  00058	33 c0		 xor	 eax, eax

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 840  :     }

  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005e	c3		 ret	 0
$LN27@allocate:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  0005f	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  00064	cc		 int	 3
$LN17@allocate:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));
; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00065	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006a	cc		 int	 3
$LN28@allocate:
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b c2	 mov	 rax, rdx

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	4b 8d 14 00	 lea	 rdx, QWORD PTR [r8+r8]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000b	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00012	72 18		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00014	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]
  00018	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	48 2b c1	 sub	 rax, rcx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001f	48 83 c0 f8	 add	 rax, -8
  00023	48 83 f8 1f	 cmp	 rax, 31
  00027	77 0f		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	48 8b c1	 mov	 rax, rcx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002c	48 8b c8	 mov	 rcx, rax

; 836  :     }

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 264  :         ::operator delete(_Ptr, _Bytes);

  00033	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00038	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0003d	cc		 int	 3
$LN18@deallocate:
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0000d	48 83 fa 10	 cmp	 rdx, 16

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00011	72 2c		 jb	 SHORT $LN23@basic_stri

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4620 :             auto& _Al          = _Getal();
; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00013	48 ff c2	 inc	 rdx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00016	48 8b 09	 mov	 rcx, QWORD PTR [rcx]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00019	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00020	72 18		 jb	 SHORT $LN22@basic_stri

; 155  :     _Bytes += _Non_user_size;

  00022	48 83 c2 27	 add	 rdx, 39			; 00000027H

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);
; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00026	4c 8b 41 f8	 mov	 r8, QWORD PTR [rcx-8]

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002a	49 2b c8	 sub	 rcx, r8

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0002d	48 8d 41 f8	 lea	 rax, QWORD PTR [rcx-8]
  00031	48 83 f8 1f	 cmp	 rax, 31
  00035	77 21		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00037	49 8b c8	 mov	 rcx, r8
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN23@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0003f	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00047	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004f	c6 03 00	 mov	 BYTE PTR [rbx], 0

; 3010 :     }

  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN27@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN52:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0000f	33 c0		 xor	 eax, eax

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00011	48 8b fa	 mov	 rdi, rdx

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00014	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00017	48 8b d9	 mov	 rbx, rcx

; 2355 :     size_type _Mysize = 0; // current length of string

  0001a	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0001e	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2319 :         return _BUF_SIZE <= _Myres;

  00022	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16

; 2921 :         const size_type _Right_size   = _Right_data._Mysize;

  00027	48 8b 6a 10	 mov	 rbp, QWORD PTR [rdx+16]

; 2306 :         if (_Large_string_engaged()) {

  0002b	72 03		 jb	 SHORT $LN13@basic_stri

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	48 8b 3a	 mov	 rdi, QWORD PTR [rdx]
$LN13@basic_stri:
  00030	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi

; 2928 :         const bool _Stay_small = _Right_size < _BUF_SIZE;

  00035	48 83 fd 10	 cmp	 rbp, 16

; 2929 : #endif // __cpp_lib_constexpr_string
; 2930 : 
; 2931 :         // NOTE: even if _Right is in large mode, we only go into large mode ourselves if the actual size of _Right
; 2932 :         // requires it
; 2933 :         if (_Stay_small) { // stay small, don't allocate

  00039	73 0d		 jae	 SHORT $LN10@basic_stri

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0003b	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

  0003e	be 0f 00 00 00	 mov	 esi, 15

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00043	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2937 :             return;

  00046	eb 68		 jmp	 SHORT $LN9@basic_stri
$LN10@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00048	48 b9 ff ff ff
	ff ff ff ff 7f	 mov	 rcx, 9223372036854775807 ; 7fffffffffffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00052	48 8b f5	 mov	 rsi, rbp
  00055	48 83 ce 0f	 or	 rsi, 15
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00059	48 3b f1	 cmp	 rsi, rcx
  0005c	48 0f 47 f1	 cmova	 rsi, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00060	48 8d 4e 01	 lea	 rcx, QWORD PTR [rsi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00064	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0006b	72 27		 jb	 SHORT $LN24@basic_stri

; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0006d	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 137  :     if (_Block_size <= _Bytes) {

  00071	48 3b c1	 cmp	 rax, rcx
  00074	76 60		 jbe	 SHORT $LN50@basic_stri

; 85   :         return ::operator new(_Bytes);

  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0007e	48 8b c8	 mov	 rcx, rax

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00081	48 85 c0	 test	 rax, rax
  00084	74 4a		 je	 SHORT $LN33@basic_stri

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00086	48 83 c0 27	 add	 rax, 39			; 00000027H
  0008a	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  0008e	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00092	eb 0a		 jmp	 SHORT $LN25@basic_stri
$LN24@basic_stri:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00094	48 85 c9	 test	 rcx, rcx
  00097	74 05		 je	 SHORT $LN25@basic_stri

; 85   :         return ::operator new(_Bytes);

  00099	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
$LN25@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring

; 2950 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0009e	4c 8d 45 01	 lea	 r8, QWORD PTR [rbp+1]
  000a2	48 89 03	 mov	 QWORD PTR [rbx], rax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000a5	48 8b d7	 mov	 rdx, rdi
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 memcpy
$LN9@basic_stri:

; 2456 :     }

  000b0	48 89 6b 10	 mov	 QWORD PTR [rbx+16], rbp
  000b4	48 8b c3	 mov	 rax, rbx
  000b7	48 89 73 18	 mov	 QWORD PTR [rbx+24], rsi
  000bb	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
  000c0	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000c5	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000ca	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
$LN33@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  000d0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d5	cc		 int	 3
$LN50@basic_stri:

; 138  :         _Throw_bad_array_new_length(); // add overflow

  000d6	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
  000db	cc		 int	 3
$LN48@basic_stri:
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2373 : [[noreturn]] inline void _Xlen_string() {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2374 :     _Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen_strin:
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN4:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 321  :     _THROW(bad_array_new_length{});

  00004	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	cc		 int	 3
$LN3@Throw_bad_:
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN15:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	8b da		 mov	 ebx, edx
  00011	48 8b f9	 mov	 rdi, rcx

; 89   :     {

  00014	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0001b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  0001e	48 83 c1 08	 add	 rcx, 8
  00022	e8 00 00 00 00	 call	 __std_exception_destroy
  00027	f6 c3 01	 test	 bl, 1
  0002a	74 0d		 je	 SHORT $LN12@scalar
  0002c	ba 18 00 00 00	 mov	 edx, 24
  00031	48 8b cf	 mov	 rcx, rdi
  00034	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@scalar:
  00039	48 8b c7	 mov	 rax, rdi
  0003c	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA PROC ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA ENDP ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$1@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA PROC ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA ENDP ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA PROC ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA ENDP ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$1@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA PROC ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA ENDP ; `std::bad_array_new_length::`scalar deleting destructor''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b c2	 mov	 rax, rdx
  0000d	48 8b d9	 mov	 rbx, rcx

; 72   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx

; 71   :         : _Data()

  0001a	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00024	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 __std_exception_copy
  0002d	90		 npad	 1
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00035	48 89 03	 mov	 QWORD PTR [rbx], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 03	 mov	 QWORD PTR [rbx], rax
  00042	48 8b c3	 mov	 rax, rbx
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 89   :     {

  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  00013	48 83 c1 08	 add	 rcx, 8
  00017	e8 00 00 00 00	 call	 __std_exception_destroy
  0001c	90		 npad	 1
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 66   :     {

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0000c	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000f	0f 57 c0	 xorps	 xmm0, xmm0

; 65   :         : _Data()

  00012	0f 11 41 08	 movups	 XMMWORD PTR [rcx+8], xmm0

; 67   :         _Data._What = _Message;

  00016	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  0001d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 130  :     {

  00021	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00028	48 89 01	 mov	 QWORD PTR [rcx], rax

; 141  :     {

  0002b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 142  :     }

  00035	48 8b c1	 mov	 rax, rcx
  00038	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 8
?dtor$1@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 8
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 8
?dtor$1@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$1@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 8
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 8b 8a 08 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1bad_alloc@std@@UEAA@XZ
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN12:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	8b da		 mov	 ebx, edx
  00011	48 8b f9	 mov	 rdi, rcx

; 89   :     {

  00014	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0001b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  0001e	48 83 c1 08	 add	 rcx, 8
  00022	e8 00 00 00 00	 call	 __std_exception_destroy
  00027	f6 c3 01	 test	 bl, 1
  0002a	74 0d		 je	 SHORT $LN9@scalar
  0002c	ba 18 00 00 00	 mov	 edx, 24
  00031	48 8b cf	 mov	 rcx, rdi
  00034	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00039	48 8b c7	 mov	 rax, rdi
  0003c	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA PROC	; `std::bad_alloc::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA ENDP	; `std::bad_alloc::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__flags$ = 56
?dtor$0@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA PROC	; `std::bad_alloc::`scalar deleting destructor''::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA ENDP	; `std::bad_alloc::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b c2	 mov	 rax, rdx
  0000d	48 8b d9	 mov	 rbx, rcx

; 72   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx

; 71   :         : _Data()

  0001a	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00024	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 __std_exception_copy
  0002d	90		 npad	 1
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00035	48 89 03	 mov	 QWORD PTR [rbx], rax
  00038	48 8b c3	 mov	 rax, rbx
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5b		 pop	 rbx
  00040	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 89   :     {

  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  00013	48 83 c1 08	 add	 rcx, 8
  00017	e8 00 00 00 00	 call	 __std_exception_destroy
  0001c	90		 npad	 1
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN9:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx

; 89   :     {

  0000f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00016	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN6@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN6@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 96   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

  0000e	48 83 c1 08	 add	 rcx, 8
  00012	e8 00 00 00 00	 call	 __std_exception_destroy
  00017	90		 npad	 1

; 91   :     }

  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00013	48 89 0b	 mov	 QWORD PTR [rbx], rcx

; 71   :         : _Data()

  00016	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001a	0f 57 c0	 xorps	 xmm0, xmm0
  0001d	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00020	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00024	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  00029	48 8b c3	 mov	 rax, rbx
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5b		 pop	 rbx
  00031	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
